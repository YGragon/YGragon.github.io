<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aller_Dong</title>
  <subtitle>DO or DIE</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://dongxi520.com/"/>
  <updated>2018-04-11T14:34:21.381Z</updated>
  <id>http://dongxi520.com/</id>
  
  <author>
    <name>Aller_Dong</name>
    <email>Aller_Dong@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Activity 的生命周期和启动模式</title>
    <link href="http://dongxi520.com/2018/04/11/Activity-%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%92%8C%E5%90%AF%E5%8A%A8%E6%A8%A1%E5%BC%8F/"/>
    <id>http://dongxi520.com/2018/04/11/Activity-的生命周期和启动模式/</id>
    <published>2018-04-11T14:34:21.000Z</published>
    <updated>2018-04-11T14:34:21.381Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Activity-的生命周期&quot;&gt;&lt;a href=&quot;#Activity-的生命周期&quot; class=&quot;headerlink&quot; title=&quot;Activity 的生命周期&quot;&gt;&lt;/a&gt;Activity 的生命周期&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;了解 Activity 的生命周期可以更好的了解每个页面不同时刻的状态，根据不同的状态我们可以进行相应的操作。比如在 Activity 启动时对数据的初始化，在 Activity 关闭时对不需要的数据进行释放。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;正常的生命周期&quot;&gt;&lt;a href=&quot;#正常的生命周期&quot; class=&quot;headerlink&quot; title=&quot;正常的生命周期&quot;&gt;&lt;/a&gt;正常的生命周期&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;在正常情况下，Activity 会经历如下生命周期；&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1467278-3a28d45b96ce5745.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/664&quot; alt=&quot;Activity的生命周期图&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;onCreate()&lt;br&gt;表示 Activity 正在创建，这时 Activity 生命周期的第一个方法，可以在这里做一些初始化操作，比如 setContentView 去加载布局资源，以及初始化 Activity 页面显示所需的其他数据。&lt;/li&gt;
&lt;li&gt;onRestart()&lt;br&gt;表示 Activity 正在重新启动，调用时机是：当用户按下 Home 键切换到桌面或者用户打开了一个新的 Activity 接着用户又回到这个 Activity 。&lt;/li&gt;
&lt;li&gt;onStart()&lt;br&gt;表示 Activity 正在被启动，这时候 Activity 已经可见（相对系统是可见）但是还没显示在前台，还无法和用户进行交互。&lt;/li&gt;
&lt;li&gt;onResume()&lt;br&gt;表示 Activity 已经可见了，并且可以和用户交互。&lt;/li&gt;
&lt;li&gt;onPause()&lt;br&gt;表示 Activity 正在定制，正常情况下，紧接着 onStop 就会被调用。此时可以做一些存储数据、停止动画等工作，但是注意不能太耗时，因为这会影响到新 Activity 的显示。&lt;/li&gt;
&lt;li&gt;onStop()&lt;br&gt;表示 Activity 即将停止，可以做一些稍微重量级的回首工作，同样不能太耗时。&lt;/li&gt;
&lt;li&gt;onDestroy()&lt;br&gt;表示 Activity 即将被销毁，这时 Activity 生命周期中的最后一个回调，在这里我么可以做一些回首工作和最终的资源释放。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;特殊情况：&lt;br&gt;当用户打开新的 Activity 或者切换到桌面的时候，如果新的 Activity 采用了透明主题，那么当前 Activity 不会回掉 onStop .&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;问题1：onStart 和onresume、onPause和 onStop 从描述上看差不多，对我们有什么实质的不同呢？&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;答：onStart 和 onStop 是从 Activity 的可见这个角度来回调的，onStart 是相对于系统可见但是对于用户还是不可见且不可交互的，onStop 对于用户和系统都是不可见的并且不可和用户交互。而 onResume 和 onPause 是从 Activity是 是否位于前台这个角度来回调的，在 onResume 时 Activity 可见位于前台且可以和用户交互，onPause 时 Activity 位于后台，不可和用户交互。 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;问题2：假设当前 Activity 为 A ，如果这时用户打开了一个新 Activity B 那么 B 的 onResume 和 A 的 onPause 哪个先执行？&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;答：查看源码可知，Activity 的启动过程的源码相当复杂，涉及到 Instrumentation、ActivityThread 和 ActivityManagerService( 简称 AMS )从源码中可以看出新的 Activity 启动前，站定的 Activity 需要先 onPause 后，新的 Activity 才能启动。验证方法是写一个 Demo 通过在各个生命周期打印 Log 查看执行顺序。 &lt;/p&gt;
&lt;h4 id=&quot;非正常的生命周期&quot;&gt;&lt;a href=&quot;#非正常的生命周期&quot; class=&quot;headerlink&quot; title=&quot;非正常的生命周期&quot;&gt;&lt;/a&gt;非正常的生命周期&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;比如当资源相关的系统配置发生改变以及系统内存不足时， Activity 就可能被杀死。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;资源相关的系统配置发生改变导致 Activity 被杀死并重建&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当系统配置发生改变后，Activity 会被销毁，其 onPause、onStop、 onDestroy 均会被调用，同时由于 Activity 是在异常情况下终止的，系统会调用 onSaveInstanceState 来保存当前 Activity 的状态。&lt;/p&gt;
&lt;p&gt;onSaveInstanceState 的调用时机是在 onStop 之前，但是不一定在 onPause 之后。&lt;/p&gt;
&lt;p&gt;当 Activity 被异常终止且重建后，系统会调用 onRestoreInstanceState, 并把 Activity 销毁时 onSaveInstanceState 保存的 Bundle 数据传递给 onRestoreInstanceState 和 onCreate 方法。&lt;/p&gt;
&lt;p&gt;因此可以通过 onRestoreInstanceState 和 onCreate 方法来判断 Activity 是否被重建；而且从时序上来说，onRestoreInstanceState 的调用时机在 onStart 之后。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资源内存不足导致低优先级的 Activity 被杀死&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Activity 的优先级情况，从高到低可以分为以下三种：&lt;/p&gt;
&lt;p&gt;(1) 前台 Activity ：正在和用户交互的 Activity ，优先级最高&lt;/p&gt;
&lt;p&gt;(2) 可见但非前台 Activity ：比如 Activity中弹出了一个对话框，导致 Activity可见但是位于后台无法和用户直接交互&lt;/p&gt;
&lt;p&gt;(3) 后台 Activity ：已经被暂停的 Activity，比如执行了 onStop , 优先级最低&lt;/p&gt;
&lt;h3 id=&quot;Activity-的启动模式&quot;&gt;&lt;a href=&quot;#Activity-的启动模式&quot; class=&quot;headerlink&quot; title=&quot;Activity 的启动模式&quot;&gt;&lt;/a&gt;Activity 的启动模式&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;有时候为了满足项目的特殊需求，就必须使用 Activity 的启动模式，所以我们必须要搞清楚它的启动模式和标志位&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Activity-为什么需要启动模式？&quot;&gt;&lt;a href=&quot;#Activity-为什么需要启动模式？&quot; class=&quot;headerlink&quot; title=&quot;Activity 为什么需要启动模式？&quot;&gt;&lt;/a&gt;Activity 为什么需要启动模式？&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;在默认情况下，当我们多次启动同一个 Activity 的时候，系统会创建多个实例并把它们一一放入任务栈中，当我们按下返回键，会发酵这些 Activity 会一一回退。这个任务栈时一种“后进先出”的栈结构，也就是最后进来的 Activity 最先出去。但是当我们多次启动同一个 Activity 系统会重复创建多个实例，Android 在设计idea时候为了解决这个问题，它提供了启动模式来修改系统的默认行为。目前又四种启动模式：standard、singleTop、singleTask、singleInstance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;standard&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这时系统的默认模式，每次启动一个 Activity 都会重新创建一个新的实例，不管这个实例是否已经存在。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;singleTop&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;栈顶复用模式。在该模式下，如果新的 Activity 已经位于任务栈的栈顶，那么此 Activity 不会被重新创建，同时它的 onNewIntent 方法会被回掉，通过重写此方法我们可以取出当前请求的信息。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;protected void onNewIntent(Intent intent) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  super.onNewIntent(intent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  setIntent(intent);//must store the new intent unless getIntent() will return the old one&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;singleTask&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;栈内复用模式。这是一种单实例模式，在该模式下，只有 ACtivity 在一个栈中存在，那么多次启动此 Activity 都不会重新创建实例，和 singleTop 一样，体统也会回调其 onNewInstent。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;singleInstance&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;单实例模式。这话i是一种加强的 singleTask 模式，它除了具备 singleTask 的所有特性外，还加强了一点，那就是具有此种模式的 Activity 只能单独的位于任务栈中。&lt;/p&gt;
&lt;h4 id=&quot;如何给-Activity-设置启动模式呢？&quot;&gt;&lt;a href=&quot;#如何给-Activity-设置启动模式呢？&quot; class=&quot;headerlink&quot; title=&quot;如何给 Activity 设置启动模式呢？&quot;&gt;&lt;/a&gt;如何给 Activity 设置启动模式呢？&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;有两种方式，(1)是通过 AndroidMenifest 中为 Activity 指定启动模式 (2) 在 Intent 中设置标志位来为 Activity 指定启动模式。两种方式的优先级是(2)优先于(1)，当两种方式存在时，以第二种方式为准。当然这两种方式还是有差异的，比如(1)无法啊直接为 Activity 设置 FLAG_ACTIVITY_CLEAR_TOP标志，而 (2) 无法为 Activity 指定 singleInstance 模式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通过 AndroidMenifest 中为 Activity 指定启动模式&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;activity &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:name=&amp;quot;..activity.MultiportActivity&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:launchMode=&amp;quot;singleTask&amp;quot;/&amp;gt;&amp;lt;!--指定标志位--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 Intent 中设置标志位来为 Activity 指定启动模式&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Intent intent = new Intent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;intent.setClass(context, MainActivity.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);//指定标志位&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;context.startActivity(intent);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;查看任务栈的命令&quot;&gt;&lt;a href=&quot;#查看任务栈的命令&quot; class=&quot;headerlink&quot; title=&quot;查看任务栈的命令&quot;&gt;&lt;/a&gt;查看任务栈的命令&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;adb shell dumpsys activity&lt;/code&gt;在导出的信息中重点查看&lt;code&gt;Running activitys&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Activity-的-Flags&quot;&gt;&lt;a href=&quot;#Activity-的-Flags&quot; class=&quot;headerlink&quot; title=&quot;Activity 的 Flags&quot;&gt;&lt;/a&gt;Activity 的 Flags&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;在 Intent 中设置 Activity 的启动模式时可以通过 Flags 设置，这里的 Flags 不仅仅是可以设置启动模式，还可以影响 Activity 的运行状态。比如设置了 FLAG_ACTIVITY_CLEAR_TOP 的Activity 表示在同一个任务栈中所有位于它上面的 Activity 都要出栈，这个标志位一般会和 singleTask 启动模式一起出现，而且 singleTask 模式是默认具有此标志位的效果。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Activity-的生命周期&quot;&gt;&lt;a href=&quot;#Activity-的生命周期&quot; class=&quot;headerlink&quot; title=&quot;Activity 的生命周期&quot;&gt;&lt;/a&gt;Activity 的生命周期&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;了解 Activity 的生命周期可以更好的了解每个页面不同时刻的状态，根据不同的状态我们可以进行相应的操作。比如在 Activity 启动时对数据的初始化，在 Activity 关闭时对不需要的数据进行释放。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;正常的生命周期&quot;&gt;&lt;a href=&quot;#正常的生命周期&quot; class=&quot;headerlink&quot; title=&quot;正常的生命周期&quot;&gt;&lt;/a&gt;正常的生命周期&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;在正常情况下，Activity 会经历如下生命周期；&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1467278-3a28d45b96ce5745.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/664&quot; alt=&quot;Activity的生命周期图&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://dongxi520.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>讲话技巧学习笔记</title>
    <link href="http://dongxi520.com/2018/02/25/%E8%AE%B2%E8%AF%9D%E6%8A%80%E5%B7%A7%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://dongxi520.com/2018/02/25/讲话技巧（一）/</id>
    <published>2018-02-25T03:20:50.000Z</published>
    <updated>2018-03-09T13:12:52.366Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;本篇介绍了多种方式让你在人际交往中能够提升幽默感以及在临场时如何去说话能够不怯场！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;提升幽默感&quot;&gt;&lt;a href=&quot;#提升幽默感&quot; class=&quot;headerlink&quot; title=&quot;提升幽默感&quot;&gt;&lt;/a&gt;提升幽默感&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;提升幽默感的八种方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;放松：世界上90%的演讲者讲的搞笑内容都不是第一次讲。霸占舞台，去练习！&lt;/li&gt;
&lt;li&gt;自嘲：把姿态放低，丑有时候也可以拿来自嘲&lt;/li&gt;
&lt;li&gt;尴尬：尴尬经历是幽默的源泉，记录下来尴尬经历，下次可以使用&lt;/li&gt;
&lt;li&gt;互动：找台下活跃，有特点的人互动&lt;/li&gt;
&lt;li&gt;意外：情理之中，意料之外；感谢大家稀稀拉拉的掌声。这些年hs是我的好搭档，一直给我帮助和鼓励，如果我的成功，一定是我自己努力得来的..&lt;/li&gt;
&lt;li&gt;模仿：模仿当地方言&lt;/li&gt;
&lt;li&gt;照应：前后呼应&lt;/li&gt;
&lt;li&gt;双关：一词有两个意思，峰兄（丰胸），袭兄，平兄，龙兄，做女人挺好&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;临场发挥：&quot;&gt;&lt;a href=&quot;#临场发挥：&quot; class=&quot;headerlink&quot; title=&quot;临场发挥：&quot;&gt;&lt;/a&gt;临场发挥：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;PRS 结构&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;P：problem 阐述问题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;R：reason 分析问题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S：solution 提出解决方案&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;练习：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1. “雾霾问题怎么办？”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;雾霾问题确实越来越严重了，这个问题的出现是由于一些工厂的不合理排放以及冬天不合理烧煤取暖导致的，针对这个问题，我们政府一直在积极的改进，我们加大了对工厂的检查力度，不合理的工厂坚决关闭，同时对于烧煤取暖的问题，我们也一直在跟进，正在推广燃气取暖的方式取代烧煤取暖，相信我们会还给大家蓝天白云的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2. “你的拖延症怎么越来越厉害？”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;最近一段时间我做事情确实有些慢了，是由于这件事情我很看重，我想要认真仔细的去完成它，前期进度缓慢是为了更好的去完全理解事情的核心，在核心功能完成后，后期进度肯定回提升上去的，请您放心。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3. “感觉你不爱我了？”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这段时间我承认很少理你，可能给你的感觉是不爱你了，但是你要相信我是很爱你的。这段时间我主要是在提升我的厨艺，想要给你亲手做一份大餐，在下次你有空的时候，邀请你来我家吃我亲手为你准备的大餐。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;否新高：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;否：否定现存观点/方案&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;新：提出新观点/方案&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;高：站在更高的层次论证&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;乔布斯、罗永浩&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;练习：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1. “你一辈子都会和我说实话吗？”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;我不能保证我讲的每一句话都是实话，但是我保证我不会伤害你，我觉得善意的谎言是美好生活的一部分&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2. “你最大的缺点是什么？”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;我最大的缺点是在写代码的时候会先写注释，这在项目紧急的情况下会浪费一些时间，但是不写注释，我怕下一个人读我的代码会不容易理解甚至是理解错，这块我也在努力提升自己的代码质量，让别人不用看注释就能知道我的代码写的是什么。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;赶过猪：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;赶：感恩被邀请发言&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;过：回顾过去美好的回忆&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;猪：祝愿美好的未来&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;适合聚会场合发言&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;练习：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1. “在升职后做就职感言”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;感谢黄总的邀请，过去一段时间周围小伙伴经常给我帮助和鼓励，我们一起学习和努力奋斗的日子是最美好的回忆，期待未来还能够和大家一起共同进步，共创辉煌！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2. “在跟同学聚会的酒桌上即兴发言”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;感谢老黄同学的盛情邀请，那我就恭敬不如从命了。以前啊，我们一起放学打球，踢球，谁都不服输，现在估计再踢一场球或者是打一场球是不太容易了，那就祝我们在新的一年里都能发大财行大运！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3. “在家长会上，老师邀请你发言”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;感谢王老师的邀请，非常感谢王老师对我儿的细心照顾才使得他有这般成绩和懂事，也希望老师能够继续用您的方式去培养他，让他成为国之栋梁，谢谢老师！&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;快速组织语言能力&quot;&gt;&lt;a href=&quot;#快速组织语言能力&quot; class=&quot;headerlink&quot; title=&quot;快速组织语言能力&quot;&gt;&lt;/a&gt;快速组织语言能力&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;联想法：把几个不相关的事物联想起来&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;练习：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1. “狐狸、鱼、胡萝卜”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这天，狐狸在森林里散步，当它走到一片田野上，发现一只兔子正在拔萝卜，它正准备攻击这只兔子，不巧，被兔子发现了，于是，狐狸和兔子之间展开了生死追击，狐狸追了兔子一路，追到了一条小河边不见了兔子的踪影，它找来找去还是没发现兔子的藏身之处，能看到的只有河里哈哈大笑的一只大头鱼，狐狸以为大头鱼在笑它，于是狐狸一头冲进河里想把鱼揍一顿，奈何它忘记了自己是不会游泳的，于是狐狸就这么死去了。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2. “小明、明嫂、隔壁老王”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;有一天，小明被老师训斥了一顿后提前放学回家，回到家后，发现隔壁老王居然在大嫂家帮忙烧菜做菜....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3. “公元前、你、吴彦祖”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;回想当前，就我的这个颜值，放在公元前，那绝对的是那个时代的国民老公，黄思聪和吴彦祖都排不上号。。。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;赞美他人&quot;&gt;&lt;a href=&quot;#赞美他人&quot; class=&quot;headerlink&quot; title=&quot;赞美他人&quot;&gt;&lt;/a&gt;赞美他人&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;发现对方的闪光点&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;三明治法：&lt;/p&gt;
&lt;p&gt;先赞美她的闪光点&lt;br&gt;中间给出建设性提升意见&lt;br&gt;最后进行鼓励&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;八大招式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;尽量赞美行为而不是外表&lt;/p&gt;
&lt;p&gt;where where 哪里哪里漂亮啦&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对方最在意的是什么就夸什么&lt;/p&gt;
&lt;p&gt;成就自己先成就别人&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;放低自己&lt;/p&gt;
&lt;p&gt;可以在朋友圈多赞美别人&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;背后赞美&lt;/p&gt;
&lt;p&gt;背后赞美可以加强三者的关系，赞美者，传递者，接收者。&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当众赞美&lt;/p&gt;
&lt;p&gt;尤其是有他人为最重要的人在场时，记住不能漏人哦&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;赞美你希望对方做到的&lt;/p&gt;
&lt;p&gt;用人不疑，疑人不用。比如：我的妈妈知道我放学后总想去玩个够再回来学习，有一天，她带我去见亲戚就在亲戚面前说，我的孩子，她每次放学回来都是先把作业做完了再出去玩，特别的听话。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;赞美卡：&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;练习：&lt;/p&gt;
&lt;p&gt;找三位家人或者同事，用上课程当中学到的赞美方法，为他们没人写一张赞美卡&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;美化声音&quot;&gt;&lt;a href=&quot;#美化声音&quot; class=&quot;headerlink&quot; title=&quot;美化声音&quot;&gt;&lt;/a&gt;美化声音&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;腹部用力&lt;/p&gt;
&lt;p&gt;练习：CI，HE，数梨练习，经常做有氧运动（比如：跑步）&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;抑扬顿挫&lt;/p&gt;
&lt;p&gt;抑：音量放低，适合做播音节目，练习：再别康桥&lt;/p&gt;
&lt;p&gt;扬：音量全部提升，适合打击学和主持人，练习：八百标兵奔北坡。。。，尾音上扬!（个位朋友，大家早上好）&lt;br&gt;顿：停顿，给观众笑和思考的时间&lt;br&gt;挫：转折，在声音和内容上强转折&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;让声音有温度、自信&lt;/p&gt;
&lt;p&gt;经历挑战，霸占舞台&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;练习：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;看综艺节目或者广告时模仿，如：羊羊羊，国窖1573&lt;/li&gt;
&lt;li&gt;每天十分钟朗诵古诗&lt;/li&gt;
&lt;li&gt;霸占舞台，讲的时候可以语速放慢感受自己声音的变化&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;设计演讲&quot;&gt;&lt;a href=&quot;#设计演讲&quot; class=&quot;headerlink&quot; title=&quot;设计演讲&quot;&gt;&lt;/a&gt;设计演讲&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;极度专注&lt;/p&gt;
&lt;p&gt;在极度安静的情况下思考&lt;/p&gt;
&lt;p&gt;番茄工作法：40分钟思考，休息10分钟&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用工具&lt;/p&gt;
&lt;p&gt;手机备忘录&lt;br&gt;电脑脑图&lt;br&gt;手写纸&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;思考三个问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这次发言的目的是什么？&lt;/p&gt;
&lt;p&gt;传递信息：传达领导意见？&lt;br&gt;娱乐：年会娱乐？&lt;br&gt;说服：说服老板给予预算？&lt;br&gt;激励：激励下属完成年度目标？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;提前和观众沟通&lt;/p&gt;
&lt;p&gt;观众喜欢有趣和有料的&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;金包骨法：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;金句：一句话总结你的观点&lt;/p&gt;
&lt;p&gt;​    简单、具体、说明了给观众的好处&lt;/p&gt;
&lt;p&gt;​    例如：坚持不要脸，世界才会给你脸&lt;/p&gt;
&lt;p&gt;包装：解释金句&lt;br&gt;骨架：逻辑结构，总分总，开头引起观众的注意力&lt;/p&gt;
&lt;p&gt;​    开头：讲数据、讲一个吓人的观点、提出问题、讲一个故事、公交车报站（接下来我会从50分钟三大观            点…）、&lt;br&gt;​    中间：可以讲故事、&lt;br&gt;​    结尾：结尾需要感性一点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;改改改：&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;完成比完美更重要&lt;br&gt;先改1-2遍，再找朋友试讲！！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;克服紧张&quot;&gt;&lt;a href=&quot;#克服紧张&quot; class=&quot;headerlink&quot; title=&quot;克服紧张&quot;&gt;&lt;/a&gt;克服紧张&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;为什么会紧张呢？&lt;/p&gt;
&lt;p&gt;​    优胜劣汰，适者生存。紧张是好事情，让你更兴奋。&lt;/p&gt;
&lt;p&gt;紧张 = 期望 / 准备&lt;/p&gt;
&lt;p&gt;​    降低期望值，提高准备&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;降低期望&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我过分在意自己一分一秒的表现，实际上，观众才不会在意&lt;/li&gt;
&lt;li&gt;观众虽然都是领导，但对于我要讲的内容，他们并没有我专业，我可以碾压他们&lt;/li&gt;
&lt;li&gt;一切都是最好的安排&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;加强准备&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;模拟真实的演讲环境&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把猴子丢给观众&lt;br&gt; 猴子：就是回顾之前的演讲，问问观众，和观众互动。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;未雨绸缪，多做有挑战的事&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;从根本上克服紧张需要不断的去挑战自己的舒适区&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11个克服过度紧张的tip&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;不要脸&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;讲故事&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;安排熟人在场&lt;/li&gt;
&lt;li&gt;提前去场地&lt;/li&gt;
&lt;li&gt;自嘲：坦诚自己紧张&lt;/li&gt;
&lt;li&gt;讲舒服的内容，做自己，不用太模仿&lt;/li&gt;
&lt;li&gt;自己准备演讲稿&lt;/li&gt;
&lt;li&gt;演讲前让自己兴奋&lt;/li&gt;
&lt;li&gt;享受意外&lt;/li&gt;
&lt;li&gt;要么背熟到讲的一样，要么直接讲&lt;/li&gt;
&lt;li&gt;面带微笑&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;表达的逻辑&quot;&gt;&lt;a href=&quot;#表达的逻辑&quot; class=&quot;headerlink&quot; title=&quot;表达的逻辑&quot;&gt;&lt;/a&gt;表达的逻辑&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;把你的思想准确的传递给别人&lt;/p&gt;
&lt;p&gt;一个基本点，三个逻辑架构：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;把复杂问题简单化&lt;/li&gt;
&lt;li&gt;总分总：最经典的逻辑结构，第一个【总】：吸引观众的注意力；【分】可以通过两种方式类整理，最后一个【总】：调动观众的情绪；重点在于中间的【分】&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;【分】的两种方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;平行结构：1、2、3&lt;/li&gt;
&lt;li&gt;递进结构：过去现在将来，恋爱结婚离婚…&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;让观点更加生动的方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;拆字法的应用&lt;/li&gt;
&lt;li&gt;首字母提炼法：&lt;/li&gt;
&lt;li&gt;关键词法：讲要讲的内容提炼关键字&lt;/li&gt;
&lt;li&gt;&lt;p&gt;提问法：层层递进法，例如&lt;strong&gt;同程CEO在融资时的演讲逻辑&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 为什么能赚钱？&lt;br&gt; 能赚多少钱？&lt;br&gt; 为什么事我们？&lt;br&gt; 能赚多久？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;回答问题：适合用 奥利奥+结构&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;练习奥利奥+结构的方式：特别适合用来回答问题&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. Opinion：观点
2. Reason：原因
3. Example：例子
4. Opinion+：升华
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;女朋友问你，你还爱我吗？
是的，我很爱你亲爱的（先肯定观点），因为每次和你在一起的时候都有特别的温馨浪漫的感觉（原因）
还记得balala...（讲你和她的故事，例子）...
（最后总结，升华）所以亲爱的我真的很爱你

练习奥利奥结构的方法：
找个朋友每天互相问一个问题，不管问什么，都不能否定，一定要用奥利奥回答。
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;介绍产品：适合用 ABC 结构&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;A: Advantage 优势&lt;br&gt;B: Benefit 好处&lt;br&gt;C: Case 案例&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;说服别人&quot;&gt;&lt;a href=&quot;#说服别人&quot; class=&quot;headerlink&quot; title=&quot;说服别人&quot;&gt;&lt;/a&gt;说服别人&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;书籍《影响力》&lt;/p&gt;
&lt;p&gt;7大原则&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;对比原则&lt;br&gt;美女之间的对比：当你看了一个比你之前认为很漂亮的女生之后再回头看你之前认为很好看的女生，你会觉的也不过如此。&lt;br&gt;重量之间的对比：同理。&lt;br&gt;挑战之间的对比：同理。&lt;/li&gt;
&lt;li&gt;互惠原则&lt;br&gt;先舍才能得，大舍才能大得&lt;/li&gt;
&lt;li&gt;承诺和一致原则&lt;br&gt;在有亲戚朋友在场的时候做出的承诺会大大降低被放鸽子的概率&lt;/li&gt;
&lt;li&gt;社会认同原则&lt;br&gt;人们会受到大众的影响&lt;br&gt;去吃饭看到两个饭馆，你会不自觉的认为排队的饭馆比不排队的饭馆做的菜好吃。&lt;/li&gt;
&lt;li&gt;权威原则&lt;br&gt;找到威信高的，做你的托。&lt;/li&gt;
&lt;li&gt;喜好原则&lt;br&gt;社群文化，让观众喜欢你&lt;br&gt;让自己成为他们自己喜欢的一部分。&lt;/li&gt;
&lt;li&gt;短缺原则&lt;br&gt;难得到是更好的。你是很有市场的。&lt;br&gt;制造稀缺感。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;马拉松报名练习&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;自我介绍，了解到同事们最近半年都有请过病假，咨询专家了解到跑步能得到更好的身体，我和大家一样也很难坚持跑步。这是公司第一次举行的集体户外活动，而且这次活动也是公司十周年的重要组成部分。李总也会报名这次的活动哟，让我们跟随李总报名吧！为了奖励大家报名这次活动，公司特制了独有的T恤免费送给大家，还在犹豫什么，快快来报名这次的马拉松活动吧。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;说话是个工具，请把这个工具用在帮助别人积极改变的地方。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;演讲-演-讲&quot;&gt;&lt;a href=&quot;#演讲-演-讲&quot; class=&quot;headerlink&quot; title=&quot;演讲 = 演 + 讲&quot;&gt;&lt;/a&gt;演讲 = 演 + 讲&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;站姿：站起来讲，站要有站相。站姿要稳！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;手势：手的摆放位置。手的摆放可以更开更自然。&lt;/p&gt;
&lt;p&gt;​    腰部一下 —- 没气场&lt;/p&gt;
&lt;p&gt;​        腰部在腹部到脖子 —- 气场区&lt;br&gt;​    脖子以上 —- 超能区  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;走动：中间靠前的位置是存在位置最久的。目的是和更多的观众交互！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;面部表情： 相由心生，心由相生，面带微笑。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;眼神交流，真诚的盯着观众的眼睛，持续时间为3秒，舞台很大，只需要看一片区域。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;练习方式：&lt;/strong&gt;霸占舞台！！&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本篇介绍了多种方式让你在人际交往中能够提升幽默感以及在临场时如何去说话能够不怯场！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;提升幽默感&quot;&gt;&lt;a href=&quot;#提升幽默感&quot; class=&quot;headerlink&quot; title=&quot;提升幽默感&quot;&gt;&lt;/a&gt;提升幽默感&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;提升幽默感的八种方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;放松：世界上90%的演讲者讲的搞笑内容都不是第一次讲。霸占舞台，去练习！&lt;/li&gt;
&lt;li&gt;自嘲：把姿态放低，丑有时候也可以拿来自嘲&lt;/li&gt;
&lt;li&gt;尴尬：尴尬经历是幽默的源泉，记录下来尴尬经历，下次可以使用&lt;/li&gt;
&lt;li&gt;互动：找台下活跃，有特点的人互动&lt;/li&gt;
&lt;li&gt;意外：情理之中，意料之外；感谢大家稀稀拉拉的掌声。这些年hs是我的好搭档，一直给我帮助和鼓励，如果我的成功，一定是我自己努力得来的..&lt;/li&gt;
&lt;li&gt;模仿：模仿当地方言&lt;/li&gt;
&lt;li&gt;照应：前后呼应&lt;/li&gt;
&lt;li&gt;双关：一词有两个意思，峰兄（丰胸），袭兄，平兄，龙兄，做女人挺好&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="说话" scheme="http://dongxi520.com/tags/%E8%AF%B4%E8%AF%9D/"/>
    
  </entry>
  
  <entry>
    <title>利用 python 分析干货集中营的数据中提交干货内容最多的人</title>
    <link href="http://dongxi520.com/2018/02/19/%E5%88%A9%E7%94%A8-python-%E5%88%86%E6%9E%90%E5%B9%B2%E8%B4%A7%E9%9B%86%E4%B8%AD%E8%90%A5%E7%9A%84%E6%95%B0%E6%8D%AE%E4%B8%AD%E6%8F%90%E4%BA%A4%E5%B9%B2%E8%B4%A7%E5%86%85%E5%AE%B9%E6%9C%80%E5%A4%9A%E7%9A%84%E4%BA%BA/"/>
    <id>http://dongxi520.com/2018/02/19/利用-python-分析干货集中营的数据中提交干货内容最多的人/</id>
    <published>2018-02-19T14:51:46.000Z</published>
    <updated>2018-02-19T14:51:46.860Z</updated>
    
    <content type="html">&lt;h4 id=&quot;分析的链接是：http-gank-io-api-data-all-1000-1&quot;&gt;&lt;a href=&quot;#分析的链接是：http-gank-io-api-data-all-1000-1&quot; class=&quot;headerlink&quot; title=&quot;分析的链接是：http://gank.io/api/data/all/1000/1&quot;&gt;&lt;/a&gt;分析的链接是：&lt;code&gt;http://gank.io/api/data/all/1000/1&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;1000 表示返回的数据个数，1 表示页数，具体参数可在干货集中营的 API 文档中查看。&lt;a href=&quot;http://gank.io/api&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;干货集中营API文档&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;定义一个方法，进行计算返回的json数据中提交干货数据最多的人&quot;&gt;&lt;a href=&quot;#定义一个方法，进行计算返回的json数据中提交干货数据最多的人&quot; class=&quot;headerlink&quot; title=&quot;定义一个方法，进行计算返回的json数据中提交干货数据最多的人&quot;&gt;&lt;/a&gt;定义一个方法，进行计算返回的&lt;code&gt;json&lt;/code&gt;数据中提交干货数据最多的人&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def get_gank_info(ipaddress):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    获取干货集中营的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r = requests.get(ipaddress)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r = r.json()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    results = r[&amp;apos;results&amp;apos;]	# 解析这个字段&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    authors, names, counts = [], [], []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 得到所有作者&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for result in results:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name = result[&amp;apos;who&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if name != &amp;apos;None&amp;apos; and name != &amp;apos;null&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            names.append(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    count = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for i in names:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 和 get() 方法类似, 如果键不存在于字典中，将会添加键并将值设为默认值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # key -- 查找的键值。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # default -- 键不存在时，设置的默认键值。关键步骤&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        count[i] = count.setdefault(i,0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        count[i] += 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # print(count[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for k, v in count.items():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	# 提交的干货大于5篇才保存&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if v &amp;gt;= 5:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            authors.append(str(k))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            counts.append(v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(str(k) + &amp;apos; : &amp;apos; + str(v))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	# 可视化柱状图显示&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    my_style = LS(&amp;apos;#333366&amp;apos;, base_style=LCS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    chart = pygal.Bar(style=my_style, x_label_rotation=45, show_lengend=False)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    chart.title = &amp;quot;1000条干货数据中谁提供的最多&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    chart.x_labels = authors&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    chart.add(&amp;apos;&amp;apos;,counts)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    chart.render_to_file(&amp;apos;gank_most_post_type.svg&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;调用该方法即可&quot;&gt;&lt;a href=&quot;#调用该方法即可&quot; class=&quot;headerlink&quot; title=&quot;调用该方法即可&quot;&gt;&lt;/a&gt;调用该方法即可&lt;/h4&gt;&lt;p&gt;&lt;code&gt;get_gank_info(&amp;quot;http://gank.io/api/data/all/1000/1&amp;quot;)&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;分析的链接是：http-gank-io-api-data-all-1000-1&quot;&gt;&lt;a href=&quot;#分析的链接是：http-gank-io-api-data-all-1000-1&quot; class=&quot;headerlink&quot; title=&quot;分析的链接是：http://
    
    </summary>
    
    
      <category term="python" scheme="http://dongxi520.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Android 自定义 View 的绘制顺序</title>
    <link href="http://dongxi520.com/2018/01/29/Android-%E8%87%AA%E5%AE%9A%E4%B9%89-View-%E7%9A%84%E7%BB%98%E5%88%B6%E9%A1%BA%E5%BA%8F/"/>
    <id>http://dongxi520.com/2018/01/29/Android-自定义-View-的绘制顺序/</id>
    <published>2018-01-29T13:35:28.000Z</published>
    <updated>2018-02-02T13:57:16.454Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;学习来源&lt;a href=&quot;http://hencoder.com/ui-1-5/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;扔物线大神&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;自定义-View-各个方法的绘制顺序&quot;&gt;&lt;a href=&quot;#自定义-View-各个方法的绘制顺序&quot; class=&quot;headerlink&quot; title=&quot;自定义 View 各个方法的绘制顺序&quot;&gt;&lt;/a&gt;自定义 View 各个方法的绘制顺序&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;先执行构造方法&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onFinishInflate():&lt;/code&gt;所有的子控件均被映射成 xml 后触发&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onMeasure():&lt;/code&gt;View放置到父容器时调用，用于测量 View 的大小&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onSizeChanged():&lt;/code&gt;在控件大小发生改变时调用。用于获取控件的宽和高度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onDraw():&lt;/code&gt; 绘制图形界面&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;继承自-View&quot;&gt;&lt;a href=&quot;#继承自-View&quot; class=&quot;headerlink&quot; title=&quot;继承自 View&quot;&gt;&lt;/a&gt;继承自 View&lt;/h3&gt;&lt;h4 id=&quot;super-onDraw-前-or-后的区别&quot;&gt;&lt;a href=&quot;#super-onDraw-前-or-后的区别&quot; class=&quot;headerlink&quot; title=&quot;super.onDraw() 前 or 后的区别&quot;&gt;&lt;/a&gt;super.onDraw() 前 or 后的区别&lt;/h4&gt;&lt;p&gt;继承自 View 在&lt;code&gt;super.onDraw()&lt;/code&gt;前后是没有区别的，因为在 &lt;code&gt;View&lt;/code&gt; 这个类里，&lt;code&gt;onDraw()&lt;/code&gt; 是空实现。&lt;/p&gt;
&lt;h3 id=&quot;继承自特定-View&quot;&gt;&lt;a href=&quot;#继承自特定-View&quot; class=&quot;headerlink&quot; title=&quot;继承自特定 View&quot;&gt;&lt;/a&gt;继承自特定 View&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;基于已有控件的自定义绘制，就需要考虑&lt;code&gt;super.onDraw()&lt;/code&gt;的顺序了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;super-onDraw-前-or-后的区别-1&quot;&gt;&lt;a href=&quot;#super-onDraw-前-or-后的区别-1&quot; class=&quot;headerlink&quot; title=&quot;super.onDraw() 前 or 后的区别&quot;&gt;&lt;/a&gt;super.onDraw() 前 or 后的区别&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;在前&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;绘制代码会执行在原有内容的绘制之前，所以绘制的内容会被控件的原内容盖住。&lt;/p&gt;
&lt;p&gt;使用场景：比如你可以通过在文字的下层绘制纯色矩形来作为「强调色」&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在后&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;绘制代码会在原有内容绘制结束之后才执行，所以绘制内容就会盖住控件原来的内容。&lt;/p&gt;
&lt;h3 id=&quot;继承自-ViewGroup&quot;&gt;&lt;a href=&quot;#继承自-ViewGroup&quot; class=&quot;headerlink&quot; title=&quot;继承自 ViewGroup&quot;&gt;&lt;/a&gt;继承自 ViewGroup&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;ViewGroup 的绘制顺序：每一个 ViewGroup 会先调用自己的 &lt;code&gt;onDraw()&lt;/code&gt;来绘制完自己的主体之后再去绘制它的子 View。这里的绘制子 View 是通过&lt;code&gt;dispatchDraw()&lt;/code&gt;去绘制。&lt;code&gt;View&lt;/code&gt; 和 &lt;code&gt;ViewGroup&lt;/code&gt; 都有 &lt;code&gt;dispatchDraw()&lt;/code&gt; 方法，不过由于 View 是没有子 View 的，所以一般来说 &lt;code&gt;dispatchDraw()&lt;/code&gt; 这个方法只对 &lt;code&gt;ViewGroup&lt;/code&gt;（以及它的子类）有意义。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;super-onDraw-前-or-后的区别-2&quot;&gt;&lt;a href=&quot;#super-onDraw-前-or-后的区别-2&quot; class=&quot;headerlink&quot; title=&quot;super.onDraw() 前 or 后的区别&quot;&gt;&lt;/a&gt;super.onDraw() 前 or 后的区别&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;在前&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;绘制代码会执行在原有内容的绘制之前，如果有子 view ，子 View 会遮住之前绘制的内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在后&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;重写 &lt;code&gt;dispatchDraw()&lt;/code&gt;，并在 &lt;code&gt;super.dispatchDraw()&lt;/code&gt; 的下面写上你的绘制代码，这段绘制代码就会发生在子 View 的绘制之后，从而让绘制内容盖住子 View 了。&lt;/p&gt;
&lt;h4 id=&quot;super-dispatchDraw-前-or-后的区别&quot;&gt;&lt;a href=&quot;#super-dispatchDraw-前-or-后的区别&quot; class=&quot;headerlink&quot; title=&quot;super.dispatchDraw() 前 or 后的区别&quot;&gt;&lt;/a&gt;super.dispatchDraw() 前 or 后的区别&lt;/h4&gt;&lt;p&gt;同 &lt;code&gt;super.onDraw()&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;完整的绘制过程会依次绘制一下几个内容&quot;&gt;&lt;a href=&quot;#完整的绘制过程会依次绘制一下几个内容&quot; class=&quot;headerlink&quot; title=&quot;完整的绘制过程会依次绘制一下几个内容&quot;&gt;&lt;/a&gt;完整的绘制过程会依次绘制一下几个内容&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;背景( &lt;code&gt;drawBackground()&lt;/code&gt; )，这个方法是 &lt;code&gt;private&lt;/code&gt; 的，不能重写，你如果要设置背景，只能用自带的 API 去设置&lt;/li&gt;
&lt;li&gt;主体（&lt;code&gt;onDraw()&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;子 View（&lt;code&gt;dispatchDraw()&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;滑动边缘渐变和滑动条（&lt;code&gt;4、5 步在这个方法中实现 onDrawForeground()&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;前景&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;例如通常一个 &lt;code&gt;LinearLayout&lt;/code&gt; 只有背景和子 View，那么它会先绘制背景再绘制子 View；一个 &lt;code&gt;ImageView&lt;/code&gt; 有主体，有可能会再加上一层半透明的前景作为遮罩，那么它的前景也会在主体之后进行绘制&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;onDrawForeground()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 &lt;code&gt;onDrawForeground()&lt;/code&gt; 中，会依次绘制滑动边缘渐变、滑动条和前景。&lt;strong&gt;这个方法是 API 23 才引入的，所以在重写这个方法的时候要确认你的 &lt;code&gt;minSdk&lt;/code&gt; 达到了 23，不然低版本的手机装上你的软件会没有效果&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;onDrawForeground-前-or-后的区别&quot;&gt;&lt;a href=&quot;#onDrawForeground-前-or-后的区别&quot; class=&quot;headerlink&quot; title=&quot;onDrawForeground() 前 or 后的区别&quot;&gt;&lt;/a&gt;onDrawForeground() 前 or 后的区别&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;在前&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你把绘制代码写在了 &lt;code&gt;super.onDrawForeground()&lt;/code&gt; 的下面，绘制代码会在滑动边缘渐变、滑动条和前景之后被执行，那么绘制内容将会盖住滑动边缘渐变、滑动条和前景。例如：绘制 View 的前景色&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在后&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;绘制内容都会盖住子 View，但被滑动边缘渐变、滑动条以及前景盖住。&lt;/p&gt;
&lt;h2 id=&quot;draw-总调度方法&quot;&gt;&lt;a href=&quot;#draw-总调度方法&quot; class=&quot;headerlink&quot; title=&quot;draw() 总调度方法&quot;&gt;&lt;/a&gt;draw() 总调度方法&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;除了 &lt;code&gt;onDraw()&lt;/code&gt; &lt;code&gt;dispatchDraw()&lt;/code&gt; 和 &lt;code&gt;onDrawForeground()&lt;/code&gt; 之外，还有一个可以用来实现自定义绘制的方法： &lt;code&gt;draw()&lt;/code&gt;，draw() 是绘制过程的总调度方法。一个 View 的整个绘制过程都发生在 &lt;code&gt;draw()&lt;/code&gt; 方法里。背景、主体、子 View 、滑动相关以及前景的绘制，它们都是在 &lt;code&gt;draw()&lt;/code&gt; 方法中执行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;super-draw-前-or-后的区别&quot;&gt;&lt;a href=&quot;#super-draw-前-or-后的区别&quot; class=&quot;headerlink&quot; title=&quot;super.draw() 前 or 后的区别&quot;&gt;&lt;/a&gt;super.draw() 前 or 后的区别&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;在前&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;绘制内容会被其他所有的内容盖住，&lt;strong&gt;包括背景&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;例如：给 &lt;code&gt;EditText&lt;/code&gt; 加一个绿色的底，我们不能使用给它设置绿色背景色的方式，因为这就相当于是把它的背景替换掉，从而会导致下面的那条横线消失。这时候，我们可以重写它的 &lt;code&gt;draw()&lt;/code&gt; 方法，然后在 &lt;code&gt;super.draw()&lt;/code&gt; 的上方插入代码&lt;code&gt;canvas.drawColor(Color.parseColor(&amp;quot;#66BB6A&amp;quot;)); // 涂上绿色&lt;/code&gt;即可完成&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在后&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它的绘制内容会盖住其他的所有绘制内容&lt;/p&gt;
&lt;p&gt;### &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;学习来源&lt;a href=&quot;http://hencoder.com/ui-1-5/&quot;&gt;扔物线大神&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;自定义-View-各个方法的绘制顺序&quot;&gt;&lt;a href=&quot;#自定义-View-各个方法的绘制顺序&quot; class=&quot;headerlink&quot; title=&quot;自定义 View 各个方法的绘制顺序&quot;&gt;&lt;/a&gt;自定义 View 各个方法的绘制顺序&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;先执行构造方法&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onFinishInflate():&lt;/code&gt;所有的子控件均被映射成 xml 后触发&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onMeasure():&lt;/code&gt;View放置到父容器时调用，用于测量 View 的大小&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onSizeChanged():&lt;/code&gt;在控件大小发生改变时调用。用于获取控件的宽和高度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onDraw():&lt;/code&gt; 绘制图形界面&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://dongxi520.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android 自定义 View clipXXX() 和 Matrix 入门</title>
    <link href="http://dongxi520.com/2018/01/26/Android-%E8%87%AA%E5%AE%9A%E4%B9%89-View-clipXXX-%E5%92%8C-Matrix-%E5%85%A5%E9%97%A8/"/>
    <id>http://dongxi520.com/2018/01/26/Android-自定义-View-clipXXX-和-Matrix-入门/</id>
    <published>2018-01-26T14:52:43.000Z</published>
    <updated>2018-02-04T02:09:15.503Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;学习来源&lt;a href=&quot;http://hencoder.com/ui-1-4/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;扔物线大神&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;范围裁切&quot;&gt;&lt;a href=&quot;#范围裁切&quot; class=&quot;headerlink&quot; title=&quot;范围裁切&quot;&gt;&lt;/a&gt;范围裁切&lt;/h3&gt;&lt;h3 id=&quot;clipRect-left-top-right-bottom&quot;&gt;&lt;a href=&quot;#clipRect-left-top-right-bottom&quot; class=&quot;headerlink&quot; title=&quot;clipRect( left, top, right, bottom )&quot;&gt;&lt;/a&gt;clipRect( left, top, right, bottom )&lt;/h3&gt;&lt;p&gt;使用姿势：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;canvas.save();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.clipRect(left, top, right, bottom);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.drawBitmap(bitmap, x, y, paint);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.restore();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;clipPath-path&quot;&gt;&lt;a href=&quot;#clipPath-path&quot; class=&quot;headerlink&quot; title=&quot;clipPath( path )&quot;&gt;&lt;/a&gt;clipPath( path )&lt;/h3&gt;&lt;p&gt;使用姿势：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;canvas.save();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.clipPath(path1);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.drawBitmap(bitmap, point1.x, point1.y, paint);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.restore();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;几何变换&quot;&gt;&lt;a href=&quot;#几何变换&quot; class=&quot;headerlink&quot; title=&quot;几何变换&quot;&gt;&lt;/a&gt;几何变换&lt;/h3&gt;&lt;h4 id=&quot;Canvas-translate-float-dx-float-dy-平移&quot;&gt;&lt;a href=&quot;#Canvas-translate-float-dx-float-dy-平移&quot; class=&quot;headerlink&quot; title=&quot;Canvas.translate(float dx, float dy) 平移&quot;&gt;&lt;/a&gt;Canvas.translate(float dx, float dy) 平移&lt;/h4&gt;&lt;p&gt;参数里的 &lt;code&gt;dx&lt;/code&gt; 和 &lt;code&gt;dy&lt;/code&gt; 表示横向和纵向的位移，使用姿势：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;canvas.save();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.translate(200, 0);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.drawBitmap(bitmap, x, y, paint);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.restore();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Canvas-rotate-float-degrees-float-px-float-py-旋转&quot;&gt;&lt;a href=&quot;#Canvas-rotate-float-degrees-float-px-float-py-旋转&quot; class=&quot;headerlink&quot; title=&quot;Canvas.rotate(float degrees, float px, float py) 旋转&quot;&gt;&lt;/a&gt;Canvas.rotate(float degrees, float px, float py) 旋转&lt;/h4&gt;&lt;p&gt; &lt;code&gt;degrees&lt;/code&gt; 是旋转角度，方向是顺时针为正向； &lt;code&gt;px&lt;/code&gt;和 &lt;code&gt;py&lt;/code&gt; 是轴心的位置&lt;/p&gt;
&lt;h4 id=&quot;Canvas-scale-float-sx-float-sy-float-px-float-py-缩放&quot;&gt;&lt;a href=&quot;#Canvas-scale-float-sx-float-sy-float-px-float-py-缩放&quot; class=&quot;headerlink&quot; title=&quot;Canvas.scale(float sx, float sy, float px, float py) 缩放&quot;&gt;&lt;/a&gt;Canvas.scale(float sx, float sy, float px, float py) 缩放&lt;/h4&gt;&lt;p&gt;&lt;code&gt;sx&lt;/code&gt; &lt;code&gt;sy&lt;/code&gt; 是横向和纵向的缩放倍数； &lt;code&gt;px&lt;/code&gt; &lt;code&gt;py&lt;/code&gt; 是缩放的轴心&lt;/p&gt;
&lt;h4 id=&quot;skew-float-sx-float-sy-错切（倾斜）&quot;&gt;&lt;a href=&quot;#skew-float-sx-float-sy-错切（倾斜）&quot; class=&quot;headerlink&quot; title=&quot;skew(float sx, float sy) 错切（倾斜）&quot;&gt;&lt;/a&gt;skew(float sx, float sy) 错切（倾斜）&lt;/h4&gt;&lt;p&gt;&lt;code&gt;sx&lt;/code&gt; 和 &lt;code&gt;sy&lt;/code&gt; 是 x 方向和 y 方向的错切（倾斜）系数&lt;/p&gt;
&lt;h4 id=&quot;使用-Matrix-做变换&quot;&gt;&lt;a href=&quot;#使用-Matrix-做变换&quot; class=&quot;headerlink&quot; title=&quot;使用 Matrix 做变换&quot;&gt;&lt;/a&gt;使用 Matrix 做变换&lt;/h4&gt;&lt;p&gt;&lt;code&gt;Matrix&lt;/code&gt; 做常见变换的方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建 &lt;code&gt;Matrix&lt;/code&gt; 对象；&lt;/li&gt;
&lt;li&gt;调用 &lt;code&gt;Matrix&lt;/code&gt; 的 &lt;code&gt;pre/postTranslate/Rotate/Scale/Skew()&lt;/code&gt; 方法来设置几何变换；&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;Canvas.setMatrix(matrix)&lt;/code&gt; 或 &lt;code&gt;Canvas.concat(matrix)&lt;/code&gt; 来把几何变换应用到 &lt;code&gt;Canvas&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;把 &lt;code&gt;Matrix&lt;/code&gt; 应用到 &lt;code&gt;Canvas&lt;/code&gt; 有两个方法： &lt;code&gt;Canvas.setMatrix(matrix)&lt;/code&gt; 和 &lt;code&gt;Canvas.concat(matrix)&lt;/code&gt;。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Canvas.setMatrix(matrix)&lt;/code&gt;：用 &lt;code&gt;Matrix&lt;/code&gt; 直接替换 &lt;code&gt;Canvas&lt;/code&gt; 当前的变换矩阵，即抛弃 &lt;code&gt;Canvas&lt;/code&gt; 当前的变换，改用 &lt;code&gt;Matrix&lt;/code&gt; 的变换（注：不同的系统中 &lt;code&gt;setMatrix(matrix)&lt;/code&gt; 的行为可能不一致，所以还是尽量用 &lt;code&gt;concat(matrix)&lt;/code&gt; ）；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Canvas.concat(matrix)&lt;/code&gt;：用 &lt;code&gt;Canvas&lt;/code&gt; 当前的变换矩阵和 &lt;code&gt;Matrix&lt;/code&gt; 相乘，即基于 &lt;code&gt;Canvas&lt;/code&gt; 当前的变换，叠加上 &lt;code&gt;Matrix&lt;/code&gt; 中的变换&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用姿势：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Matrix matrix = new Matrix();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix.reset();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix.postTranslate();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix.postRotate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.save();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.concat(matrix);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.drawBitmap(bitmap, x, y, paint);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.restore();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;学习来源&lt;a href=&quot;http://hencoder.com/ui-1-4/&quot;&gt;扔物线大神&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;范围裁切&quot;&gt;&lt;a href=&quot;#范围裁切&quot; class=&quot;headerlink&quot; title=&quot;范围裁切&quot;&gt;&lt;/a&gt;范围裁切&lt;/h3&gt;&lt;h3 id=&quot;clipRect-left-top-right-bottom&quot;&gt;&lt;a href=&quot;#clipRect-left-top-right-bottom&quot; class=&quot;headerlink&quot; title=&quot;clipRect( left, top, right, bottom )&quot;&gt;&lt;/a&gt;clipRect( left, top, right, bottom )&lt;/h3&gt;&lt;p&gt;使用姿势：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;canvas.save();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.clipRect(left, top, right, bottom);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.drawBitmap(bitmap, x, y, paint);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;canvas.restore();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://dongxi520.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android 自定义 View drawText() 入门</title>
    <link href="http://dongxi520.com/2018/01/25/Android-%E8%87%AA%E5%AE%9A%E4%B9%89-View-drawText-%E5%85%A5%E9%97%A8/"/>
    <id>http://dongxi520.com/2018/01/25/Android-自定义-View-drawText-入门/</id>
    <published>2018-01-25T13:02:43.000Z</published>
    <updated>2018-01-26T13:32:05.672Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;学习来源：&lt;a href=&quot;http://hencoder.com/ui-1-3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;扔物线大神&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Canvas-绘制文字&quot;&gt;&lt;a href=&quot;#Canvas-绘制文字&quot; class=&quot;headerlink&quot; title=&quot;Canvas 绘制文字&quot;&gt;&lt;/a&gt;Canvas 绘制文字&lt;/h3&gt;&lt;h4 id=&quot;drawText-String-text-float-x-float-y-Paint-paint&quot;&gt;&lt;a href=&quot;#drawText-String-text-float-x-float-y-Paint-paint&quot; class=&quot;headerlink&quot; title=&quot;drawText(String text, float x, float y, Paint paint)&quot;&gt;&lt;/a&gt;drawText(String text, float x, float y, Paint paint)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;text&lt;/code&gt; 是文字内容，&lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 是文字的坐标。这个坐标并不是文字的左上角，而是一个与文字左下角比较接近的位置。参数中的 &lt;code&gt;y&lt;/code&gt; ，指的是文字基线的位置，&lt;strong&gt;基线：&lt;/strong&gt;让所有文字互相对齐的基准线。&lt;code&gt;x&lt;/code&gt; 点并不是字母文字左边的位置，而是比它的左边再往左一点点，是为了给各个文字之间留出空隙&lt;/p&gt;
&lt;h4 id=&quot;drawTextRun-CharSequence-text-int-start-int-end-int-contextStart-int-contextEnd-float-x-float-y-boolean-isRtl-Paint-paint-用的少&quot;&gt;&lt;a href=&quot;#drawTextRun-CharSequence-text-int-start-int-end-int-contextStart-int-contextEnd-float-x-float-y-boolean-isRtl-Paint-paint-用的少&quot; class=&quot;headerlink&quot; title=&quot;drawTextRun(CharSequence text, int start, int end, int contextStart, int contextEnd, float x, float y, boolean isRtl, Paint paint) 用的少&quot;&gt;&lt;/a&gt;drawTextRun(CharSequence text, int start, int end, int contextStart, int contextEnd, float x, float y, boolean isRtl, Paint paint) 用的少&lt;/h4&gt;&lt;h4 id=&quot;drawTextOnPath-String-text-Path-path-float-hOffset-float-vOffset-Paint-paint&quot;&gt;&lt;a href=&quot;#drawTextOnPath-String-text-Path-path-float-hOffset-float-vOffset-Paint-paint&quot; class=&quot;headerlink&quot; title=&quot;drawTextOnPath(String text, Path path, float hOffset, float vOffset, Paint paint)&quot;&gt;&lt;/a&gt;drawTextOnPath(String text, Path path, float hOffset, float vOffset, Paint paint)&lt;/h4&gt;&lt;p&gt;沿着一条 &lt;code&gt;Path&lt;/code&gt; 来绘制文字， &lt;code&gt;hOffset&lt;/code&gt; 和 &lt;code&gt;vOffset&lt;/code&gt;。它们是文字相对于 &lt;code&gt;Path&lt;/code&gt; 的水平偏移量和竖直偏移量，利用它们可以调整文字的位置。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;StaticLayout-CharSequence-source-TextPaint-paint-int-width-Layout-Alignment-align-float-spacingmult-float-spacingadd-boolean-includepad&quot;&gt;&lt;a href=&quot;#StaticLayout-CharSequence-source-TextPaint-paint-int-width-Layout-Alignment-align-float-spacingmult-float-spacingadd-boolean-includepad&quot; class=&quot;headerlink&quot; title=&quot;StaticLayout (CharSequence source, TextPaint paint, int width, Layout.Alignment align, float spacingmult, float spacingadd, boolean includepad)&quot;&gt;&lt;/a&gt;StaticLayout (CharSequence source, TextPaint paint, int width, Layout.Alignment align, float spacingmult, float spacingadd, boolean includepad)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;StaticLayout&lt;/code&gt; 支持换行，它既可以为文字设置宽度上限来让文字自动换行，也会在 &lt;code&gt;\n&lt;/code&gt; 处主动换行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;width&lt;/code&gt; 是文字区域的宽度，文字到达这个宽度后就会自动换行；&lt;br&gt;&lt;code&gt;align&lt;/code&gt; 是文字的对齐方向；&lt;br&gt;&lt;code&gt;spacingmult&lt;/code&gt; 是行间距的倍数，通常情况下填 1 就好；&lt;br&gt;&lt;code&gt;spacingadd&lt;/code&gt; 是行间距的额外增加值，通常情况下填 0 就好；&lt;br&gt;&lt;code&gt;includeadd&lt;/code&gt; 是指是否在文字上下添加额外的空间，来避免某些过高的字符的绘制出现越界。&lt;/p&gt;
&lt;h4 id=&quot;setTextSize-float-textSize&quot;&gt;&lt;a href=&quot;#setTextSize-float-textSize&quot; class=&quot;headerlink&quot; title=&quot;setTextSize(float textSize)&quot;&gt;&lt;/a&gt;setTextSize(float textSize)&lt;/h4&gt;&lt;p&gt;设置字体大小&lt;/p&gt;
&lt;h4 id=&quot;setTypeface-Typeface-typeface&quot;&gt;&lt;a href=&quot;#setTypeface-Typeface-typeface&quot; class=&quot;headerlink&quot; title=&quot;setTypeface(Typeface typeface)&quot;&gt;&lt;/a&gt;setTypeface(Typeface typeface)&lt;/h4&gt;&lt;p&gt;设置字体&lt;/p&gt;
&lt;h4 id=&quot;setFakeBoldText-boolean-fakeBoldText&quot;&gt;&lt;a href=&quot;#setFakeBoldText-boolean-fakeBoldText&quot; class=&quot;headerlink&quot; title=&quot;setFakeBoldText(boolean fakeBoldText)&quot;&gt;&lt;/a&gt;setFakeBoldText(boolean fakeBoldText)&lt;/h4&gt;&lt;p&gt;是否使用伪粗体。因为它并不是通过选用更高 weight 的字体让文字变粗，而是通过程序在运行时把文字给「描粗」了。&lt;/p&gt;
&lt;h4 id=&quot;setStrikeThruText-boolean-strikeThruText&quot;&gt;&lt;a href=&quot;#setStrikeThruText-boolean-strikeThruText&quot; class=&quot;headerlink&quot; title=&quot;setStrikeThruText(boolean strikeThruText)&quot;&gt;&lt;/a&gt;setStrikeThruText(boolean strikeThruText)&lt;/h4&gt;&lt;p&gt;是否加删除线。&lt;/p&gt;
&lt;h4 id=&quot;setUnderlineText-boolean-underlineText&quot;&gt;&lt;a href=&quot;#setUnderlineText-boolean-underlineText&quot; class=&quot;headerlink&quot; title=&quot;setUnderlineText(boolean underlineText)&quot;&gt;&lt;/a&gt;setUnderlineText(boolean underlineText)&lt;/h4&gt;&lt;p&gt;是否加下划线&lt;/p&gt;
&lt;h4 id=&quot;setTextSkewX-float-skewX&quot;&gt;&lt;a href=&quot;#setTextSkewX-float-skewX&quot; class=&quot;headerlink&quot; title=&quot;setTextSkewX(float skewX)&quot;&gt;&lt;/a&gt;setTextSkewX(float skewX)&lt;/h4&gt;&lt;p&gt;设置文字横向倾斜度&lt;/p&gt;
&lt;h4 id=&quot;setTextScaleX-float-scaleX&quot;&gt;&lt;a href=&quot;#setTextScaleX-float-scaleX&quot; class=&quot;headerlink&quot; title=&quot;setTextScaleX(float scaleX)&quot;&gt;&lt;/a&gt;setTextScaleX(float scaleX)&lt;/h4&gt;&lt;p&gt;设置文字横向放缩&lt;/p&gt;
&lt;h4 id=&quot;setLetterSpacing-float-letterSpacing&quot;&gt;&lt;a href=&quot;#setLetterSpacing-float-letterSpacing&quot; class=&quot;headerlink&quot; title=&quot;setLetterSpacing(float letterSpacing)&quot;&gt;&lt;/a&gt;setLetterSpacing(float letterSpacing)&lt;/h4&gt;&lt;p&gt;设置字符间距。默认值是 0。&lt;/p&gt;
&lt;h4 id=&quot;setTextAlign-Paint-Align-align&quot;&gt;&lt;a href=&quot;#setTextAlign-Paint-Align-align&quot; class=&quot;headerlink&quot; title=&quot;setTextAlign(Paint.Align align)&quot;&gt;&lt;/a&gt;setTextAlign(Paint.Align align)&lt;/h4&gt;&lt;p&gt;设置文字的对齐方式。一共有三个值：&lt;code&gt;LEFT&lt;/code&gt; &lt;code&gt;CETNER&lt;/code&gt; 和 &lt;code&gt;RIGHT&lt;/code&gt;。默认值为 &lt;code&gt;LEFT&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&quot;setTextLocale-Locale-locale-setTextLocales-LocaleList-locales&quot;&gt;&lt;a href=&quot;#setTextLocale-Locale-locale-setTextLocales-LocaleList-locales&quot; class=&quot;headerlink&quot; title=&quot;setTextLocale(Locale locale) / setTextLocales(LocaleList locales)&quot;&gt;&lt;/a&gt;setTextLocale(Locale locale) / setTextLocales(LocaleList locales)&lt;/h4&gt;&lt;p&gt;设置文字的语言，比如中文简体，中文繁体，英文等&lt;/p&gt;
&lt;h3 id=&quot;Paint-相关&quot;&gt;&lt;a href=&quot;#Paint-相关&quot; class=&quot;headerlink&quot; title=&quot;Paint 相关&quot;&gt;&lt;/a&gt;Paint 相关&lt;/h3&gt;&lt;h4 id=&quot;getTextBounds-String-text-int-start-int-end-Rect-bounds&quot;&gt;&lt;a href=&quot;#getTextBounds-String-text-int-start-int-end-Rect-bounds&quot; class=&quot;headerlink&quot; title=&quot;getTextBounds(String text, int start, int end, Rect bounds)&quot;&gt;&lt;/a&gt;getTextBounds(String text, int start, int end, Rect bounds)&lt;/h4&gt;&lt;p&gt;获取文字的&lt;strong&gt;显示范围&lt;/strong&gt;。&lt;code&gt;text&lt;/code&gt; 是要测量的文字，&lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; 分别是文字的起始和结束位置，&lt;code&gt;bounds&lt;/code&gt; 是存储文字显示范围的对象&lt;/p&gt;
&lt;h4 id=&quot;float-measureText-String-text&quot;&gt;&lt;a href=&quot;#float-measureText-String-text&quot; class=&quot;headerlink&quot; title=&quot;float measureText(String text)&quot;&gt;&lt;/a&gt;float measureText(String text)&lt;/h4&gt;&lt;p&gt;测量&lt;strong&gt;文字的宽度&lt;/strong&gt;并返回。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;学习来源：&lt;a href=&quot;http://hencoder.com/ui-1-3/&quot;&gt;扔物线大神&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Canvas-绘制文字&quot;&gt;&lt;a href=&quot;#Canvas-绘制文字&quot; class=&quot;headerlink&quot; title=&quot;Canvas 绘制文字&quot;&gt;&lt;/a&gt;Canvas 绘制文字&lt;/h3&gt;&lt;h4 id=&quot;drawText-String-text-float-x-float-y-Paint-paint&quot;&gt;&lt;a href=&quot;#drawText-String-text-float-x-float-y-Paint-paint&quot; class=&quot;headerlink&quot; title=&quot;drawText(String text, float x, float y, Paint paint)&quot;&gt;&lt;/a&gt;drawText(String text, float x, float y, Paint paint)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;text&lt;/code&gt; 是文字内容，&lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 是文字的坐标。这个坐标并不是文字的左上角，而是一个与文字左下角比较接近的位置。参数中的 &lt;code&gt;y&lt;/code&gt; ，指的是文字基线的位置，&lt;strong&gt;基线：&lt;/strong&gt;让所有文字互相对齐的基准线。&lt;code&gt;x&lt;/code&gt; 点并不是字母文字左边的位置，而是比它的左边再往左一点点，是为了给各个文字之间留出空隙&lt;/p&gt;
&lt;h4 id=&quot;drawTextRun-CharSequence-text-int-start-int-end-int-contextStart-int-contextEnd-float-x-float-y-boolean-isRtl-Paint-paint-用的少&quot;&gt;&lt;a href=&quot;#drawTextRun-CharSequence-text-int-start-int-end-int-contextStart-int-contextEnd-float-x-float-y-boolean-isRtl-Paint-paint-用的少&quot; class=&quot;headerlink&quot; title=&quot;drawTextRun(CharSequence text, int start, int end, int contextStart, int contextEnd, float x, float y, boolean isRtl, Paint paint) 用的少&quot;&gt;&lt;/a&gt;drawTextRun(CharSequence text, int start, int end, int contextStart, int contextEnd, float x, float y, boolean isRtl, Paint paint) 用的少&lt;/h4&gt;&lt;h4 id=&quot;drawTextOnPath-String-text-Path-path-float-hOffset-float-vOffset-Paint-paint&quot;&gt;&lt;a href=&quot;#drawTextOnPath-String-text-Path-path-float-hOffset-float-vOffset-Paint-paint&quot; class=&quot;headerlink&quot; title=&quot;drawTextOnPath(String text, Path path, float hOffset, float vOffset, Paint paint)&quot;&gt;&lt;/a&gt;drawTextOnPath(String text, Path path, float hOffset, float vOffset, Paint paint)&lt;/h4&gt;&lt;p&gt;沿着一条 &lt;code&gt;Path&lt;/code&gt; 来绘制文字， &lt;code&gt;hOffset&lt;/code&gt; 和 &lt;code&gt;vOffset&lt;/code&gt;。它们是文字相对于 &lt;code&gt;Path&lt;/code&gt; 的水平偏移量和竖直偏移量，利用它们可以调整文字的位置。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://dongxi520.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android 自定义 View Paint 了解</title>
    <link href="http://dongxi520.com/2018/01/22/Android-%E8%87%AA%E5%AE%9A%E4%B9%89-View-Paint-%E4%BA%86%E8%A7%A3/"/>
    <id>http://dongxi520.com/2018/01/22/Android-自定义-View-Paint-了解/</id>
    <published>2018-01-22T13:25:06.000Z</published>
    <updated>2018-01-26T13:32:04.488Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;学习主要来源：&lt;a href=&quot;http://hencoder.com/ui-1-2/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;扔物线大神&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;颜色&quot;&gt;&lt;a href=&quot;#颜色&quot; class=&quot;headerlink&quot; title=&quot;颜色&quot;&gt;&lt;/a&gt;颜色&lt;/h3&gt;&lt;h4 id=&quot;基本颜色&quot;&gt;&lt;a href=&quot;#基本颜色&quot; class=&quot;headerlink&quot; title=&quot;基本颜色&quot;&gt;&lt;/a&gt;基本颜色&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;setColor(int color)&lt;/li&gt;
&lt;li&gt;setARGB(int a, int r, int g, int b)&lt;/li&gt;
&lt;li&gt;setShader(Shader shader)：用于设置绘制颜色，在 Android 的绘制里使用 &lt;code&gt;Shader&lt;/code&gt; ，并不直接用 &lt;code&gt;Shader&lt;/code&gt; 这个类，而是用它的几个子类。具体来讲有 如下几个：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LinearGradient 线性渐变、RadialGradient 辐射渐变、SweepGradient 扫描渐变、 BitmapShader（用 &lt;code&gt;Bitmap&lt;/code&gt; 的像素来作为图形或文字的填充）、ComposeShader 混合着色器&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;LinearGradient 线性渐变：&lt;code&gt;LinearGradient(float x0, float y0, float x1, float y1, int color0, int color1, Shader.TileMode tile)&lt;/code&gt;，&lt;code&gt;x0&lt;/code&gt; &lt;code&gt;y0&lt;/code&gt; &lt;code&gt;x1&lt;/code&gt; &lt;code&gt;y1&lt;/code&gt;：渐变的两个端点的位置，&lt;code&gt;color0&lt;/code&gt; &lt;code&gt;color1&lt;/code&gt; 是端点的颜色，&lt;code&gt;tile&lt;/code&gt;：端点范围之外的着色规则，类型是 &lt;code&gt;TileMode&lt;/code&gt;。&lt;code&gt;TileMode&lt;/code&gt; 一共有 3 个值可选： &lt;code&gt;CLAMP&lt;/code&gt;, &lt;code&gt;MIRROR&lt;/code&gt; 和 &lt;code&gt;REPEAT&lt;/code&gt;。&lt;code&gt;CLAMP&lt;/code&gt; 会在端点之外延续端点处的颜色；&lt;code&gt;MIRROR&lt;/code&gt; 是镜像模式；&lt;code&gt;REPEAT&lt;/code&gt; 是重复模式&lt;/li&gt;
&lt;li&gt;RadialGradient 辐射渐变：&lt;code&gt;RadialGradient(float centerX, float centerY, float radius, int centerColor, int edgeColor, TileMode tileMode)&lt;/code&gt;。&lt;code&gt;centerX&lt;/code&gt; &lt;code&gt;centerY&lt;/code&gt;：辐射中心的坐标 ，&lt;code&gt;radius&lt;/code&gt;：辐射半径 ，&lt;code&gt;centerColor&lt;/code&gt;：辐射中心的颜色 ，&lt;code&gt;edgeColor&lt;/code&gt;：辐射边缘的颜色 ，&lt;code&gt;tileMode&lt;/code&gt;：辐射范围之外的着色模式。&lt;/li&gt;
&lt;li&gt;SweepGradient 扫描渐变：&lt;code&gt;SweepGradient(float cx, float cy, int color0, int color1)&lt;/code&gt;，&lt;code&gt;cx&lt;/code&gt; &lt;code&gt;cy&lt;/code&gt; ：扫描的中心，&lt;code&gt;color0&lt;/code&gt;：扫描的起始颜色 ，&lt;code&gt;color1&lt;/code&gt;：扫描的终止颜色&lt;/li&gt;
&lt;li&gt;BitmapShader：&lt;code&gt;BitmapShader(Bitmap bitmap, Shader.TileMode tileX, Shader.TileMode tileY)&lt;/code&gt;，&lt;code&gt;bitmap&lt;/code&gt;：用来做模板的 &lt;code&gt;Bitmap&lt;/code&gt; 对象 ，&lt;code&gt;tileX&lt;/code&gt;：横向的 &lt;code&gt;TileMode&lt;/code&gt; ，&lt;code&gt;tileY&lt;/code&gt;：纵向的 &lt;code&gt;TileMode&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;ComposeShader : 混合着色器就是把两个 &lt;code&gt;Shader&lt;/code&gt; 一起使用。&lt;code&gt;ComposeShader()&lt;/code&gt; 在硬件加速下是不支持两个相同类型的 &lt;code&gt;Shader&lt;/code&gt; 的，所以这里也需要关闭硬件加速才能看到效果。&lt;code&gt;ComposeShader(Shader shaderA, Shader shaderB, PorterDuff.Mode mode)&lt;/code&gt;，&lt;code&gt;shaderA&lt;/code&gt;, &lt;code&gt;shaderB&lt;/code&gt;：两个相继使用的 &lt;code&gt;Shader&lt;/code&gt; ，&lt;code&gt;mode&lt;/code&gt;: 两个 &lt;code&gt;Shader&lt;/code&gt; 的叠加模式，即 &lt;code&gt;shaderA&lt;/code&gt; 和 &lt;code&gt;shaderB&lt;/code&gt; 应该怎样共同绘制。它的类型是 &lt;code&gt;PorterDuff.Mode&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;PorterDuff.Mode：是用来指定两个图像共同绘制时的颜色策略的。就是说把源图像绘制到目标图像处时应该怎样确定二者结合后的颜色，而对于 &lt;code&gt;ComposeShader(shaderA, shaderB, mode)&lt;/code&gt; 这个具体的方法，就是指应该怎样把 &lt;code&gt;shaderB&lt;/code&gt;绘制在 &lt;code&gt;shaderA&lt;/code&gt; 上来得到一个结合后的 &lt;code&gt;Shader&lt;/code&gt;，具体看&lt;a href=&quot;https://developer.android.com/reference/android/graphics/PorterDuff.Mode.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;滤镜&quot;&gt;&lt;a href=&quot;#滤镜&quot; class=&quot;headerlink&quot; title=&quot;滤镜&quot;&gt;&lt;/a&gt;滤镜&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;setColorFilter(ColorFilter colorFilter)：&lt;code&gt;ColorFilter&lt;/code&gt; 并不直接使用，而是使用它的子类。它共有三个子类：&lt;code&gt;LightingColorFilter&lt;/code&gt; &lt;code&gt;PorterDuffColorFilter&lt;/code&gt; 和 &lt;code&gt;ColorMatrixColorFilter&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;LightingColorFilter(int mul, int add)：模拟光照效果，参数里的 &lt;code&gt;mul&lt;/code&gt; 和 &lt;code&gt;add&lt;/code&gt; 都是和颜色值格式相同的 int 值，其中 &lt;code&gt;mul&lt;/code&gt; 用来和目标像素相乘，&lt;code&gt;add&lt;/code&gt; 用来和目标像素相加&lt;/li&gt;
&lt;li&gt;PorterDuffColorFilter：作用是使用一个指定的颜色和一种指定的 &lt;code&gt;PorterDuff.Mode&lt;/code&gt; 来与绘制对象进行合成。它的构造方法是 &lt;code&gt;PorterDuffColorFilter(int color, PorterDuff.Mode mode)&lt;/code&gt; 其中的 &lt;code&gt;color&lt;/code&gt; 参数是指定的颜色， &lt;code&gt;mode&lt;/code&gt; 参数是指定的 &lt;code&gt;Mode&lt;/code&gt;。同样也是 &lt;code&gt;PorterDuff.Mode&lt;/code&gt; ，不过和 &lt;code&gt;ComposeShader&lt;/code&gt; 不同的是，&lt;code&gt;PorterDuffColorFilter&lt;/code&gt; 作为一个 &lt;code&gt;ColorFilter&lt;/code&gt;，只能指定一种&lt;code&gt;颜色&lt;/code&gt;作为源，而不是一个 &lt;code&gt;Bitmap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ColorMatrixColorFilter：使用一个 &lt;code&gt;ColorMatrix&lt;/code&gt; 来对颜色进行处理。 &lt;code&gt;ColorMatrix&lt;/code&gt; 这个类，内部是一个 4x5 的矩阵，第三方库实现炫酷效果：&lt;a href=&quot;https://github.com/chengdazhi/StyleImageView&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;StyleImageView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PorterDuffColrFilter((int color, PorterDuff.Mode mode)：使用一个指定的颜色和一种指定的 &lt;code&gt;PorterDuff.Mode&lt;/code&gt; 来与绘制对象进行合成&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Paint.setStrokeCap(Paint.Cap cap) 设置线头的形状。线头形状有三种：&lt;code&gt;BUTT&lt;/code&gt; 平头、&lt;code&gt;ROUND&lt;/code&gt; 圆头、&lt;code&gt;SQUARE&lt;/code&gt; 方头。默认为 &lt;code&gt;BUTT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Paint.setStrokeJoin(Paint.Join join) :设置拐角的形状。有三个值可以选择：&lt;code&gt;MITER&lt;/code&gt; 尖角、 &lt;code&gt;BEVEL&lt;/code&gt; 平角和 &lt;code&gt;ROUND&lt;/code&gt; 圆角。默认为 &lt;code&gt;MITER&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;Paint.setStrokeMiter(float miter) : 这个方法是对于 &lt;code&gt;setStrokeJoin()&lt;/code&gt; 的一个补充，它用于设置 &lt;code&gt;MITER&lt;/code&gt; 型拐角的延长线的最大值。这种补偿方案会有一个问题：如果拐角的角度太小，就有可能由于出现连接点过长的情况，所以为了避免意料之外的过长的尖角出现， &lt;code&gt;MITER&lt;/code&gt; 型连接点有一个额外的规则：当尖角过长时，自动改用 &lt;code&gt;BEVEL&lt;/code&gt; 的方式来渲染连接点。例如上图的这个尖角，在默认情况下是不会出现的，而是会由于延长线过长而被转为 &lt;code&gt;BEVEL&lt;/code&gt; 型连接点。 &lt;code&gt;miter limit 的默认值是 4，对应的是一个大约 29° 的锐角&lt;/code&gt;，默认情况下，大于这个角的尖角会被保留，而小于这个夹角的就会被「削成平头」&lt;/li&gt;
&lt;li&gt;Paint. setDither(boolean dither) : 设置图像的抖动。在 Android 里使用起来也很简单，一行代码就搞定&lt;code&gt;paint.setDither(true);&lt;/code&gt;只要加这么一行代码，之后的绘制就是加抖动的了。&lt;/li&gt;
&lt;li&gt;Paint.setFilterBitmap(boolean filter) :设置是否使用双线性过滤来绘制 &lt;code&gt;Bitmap&lt;/code&gt; 。图像在放大绘制的时候，默认使用的是最近邻插值过滤，这种算法简单，但会出现马赛克现象；而如果开启了双线性过滤，就可以让结果图像显得更加平滑&lt;/li&gt;
&lt;li&gt;&lt;p&gt;paint.setPathEffect(PathEffect effect) : 使用 &lt;code&gt;PathEffect&lt;/code&gt; 来给图形的轮廓设置效果。对 &lt;code&gt;Canvas&lt;/code&gt; 所有的图形绘制有效&lt;/p&gt;
&lt;p&gt;Android 中的 6 种 &lt;code&gt;PathEffect&lt;/code&gt;。&lt;code&gt;PathEffect&lt;/code&gt; 分为两类，单一效果的 &lt;code&gt;CornerPathEffect``DiscretePathEffect&lt;/code&gt; &lt;code&gt;DashPathEffect&lt;/code&gt; &lt;code&gt;PathDashPathEffect&lt;/code&gt; ，和组合效果的 &lt;code&gt;SumPathEffect&lt;/code&gt; &lt;code&gt;ComposePathEffect&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CornerPathEffect : 把所有拐角变成圆角,&lt;code&gt;CornerPathEffect(float radius)&lt;/code&gt; 的参数 &lt;code&gt;radius&lt;/code&gt; 是圆角的半径&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;DiscretePathEffect : 把线条进行随机的偏离，让轮廓变得乱七八糟。乱七八糟的方式和程度由参数决定。&lt;code&gt;DiscretePathEffect(float segmentLength, float deviation)&lt;/code&gt; 的两个参数中， &lt;code&gt;segmentLength&lt;/code&gt; 是用来拼接的每个线段的长度， &lt;code&gt;deviation&lt;/code&gt; 是偏离量。&lt;/li&gt;
&lt;li&gt;DashPathEffect ：  &lt;code&gt;DashPathEffect(float[] intervals, float phase)&lt;/code&gt; 中， 第一个参数 &lt;code&gt;intervals&lt;/code&gt; 是一个数组，它指定了虚线的格式：数组中元素必须为偶数（最少是 2 个），按照「画线长度、空白长度、画线长度、空白长度」……的顺序排列，例如上面代码中的 &lt;code&gt;20, 5, 10, 5&lt;/code&gt; 就表示虚线是按照「画 20 像素、空 5 像素、画 10 像素、空 5 像素」的模式来绘制；第二个参数 &lt;code&gt;phase&lt;/code&gt; 是虚线的偏移量&lt;/li&gt;
&lt;li&gt;PathDashPathEffect：&lt;code&gt;PathDashPathEffect(Path shape, float advance, float phase, PathDashPathEffect.Style style)&lt;/code&gt;中， &lt;code&gt;shape&lt;/code&gt; 参数是用来绘制的 &lt;code&gt;Path&lt;/code&gt; ； &lt;code&gt;advance&lt;/code&gt; 是两个相邻的 &lt;code&gt;shape&lt;/code&gt; 段之间的间隔，不过注意，这个间隔是两个 &lt;code&gt;shape&lt;/code&gt; 段的起点的间隔，而不是前一个的终点和后一个的起点的距离； &lt;code&gt;phase&lt;/code&gt; 和 &lt;code&gt;DashPathEffect&lt;/code&gt; 中一样，是虚线的偏移；最后一个参数 &lt;code&gt;style&lt;/code&gt;，是用来指定拐弯改变的时候 &lt;code&gt;shape&lt;/code&gt; 的转换方式。&lt;code&gt;style&lt;/code&gt; 的类型为 &lt;code&gt;PathDashPathEffect.Style&lt;/code&gt; ，是一个 &lt;code&gt;enum&lt;/code&gt; ，具体有三个值&lt;ul&gt;
&lt;li&gt;&lt;code&gt;TRANSLATE&lt;/code&gt;：位移&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ROTATE&lt;/code&gt;：旋转&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MORPH&lt;/code&gt;：变体&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SumPathEffect：这是一个组合效果类的 &lt;code&gt;PathEffect&lt;/code&gt; 。它的行为特别简单，就是分别按照两种 &lt;code&gt;PathEffect&lt;/code&gt; 分别对目标进行绘制&lt;/li&gt;
&lt;li&gt;ComposePathEffect：这也是一个组合效果类的 &lt;code&gt;PathEffect&lt;/code&gt; 。不过它是先对目标 &lt;code&gt;Path&lt;/code&gt; 使用一个 &lt;code&gt;PathEffect&lt;/code&gt;，然后再对这个改变后的 &lt;code&gt;Path&lt;/code&gt; 使用另一个 &lt;code&gt;PathEffect&lt;/code&gt;，&lt;code&gt;ComposePathEffect(PathEffect outerpe, PathEffect innerpe)&lt;/code&gt; 中的两个 &lt;code&gt;PathEffect&lt;/code&gt; 参数， &lt;code&gt;innerpe&lt;/code&gt; 是先应用的， &lt;code&gt;outerpe&lt;/code&gt; 是后应用的&lt;/li&gt;
&lt;li&gt;setShadowLayer(float radius, float dx, float dy, int shadowColor)：在之后的绘制内容下面加一层阴影。&lt;code&gt;radius&lt;/code&gt; 是阴影的模糊范围； &lt;code&gt;dx&lt;/code&gt; &lt;code&gt;dy&lt;/code&gt; 是阴影的偏移量； &lt;code&gt;shadowColor&lt;/code&gt; 是阴影的颜色。&lt;/li&gt;
&lt;li&gt;setMaskFilter(MaskFilter maskfilter) ： 为之后的绘制设置 &lt;code&gt;MaskFilter&lt;/code&gt;。上一个方法 &lt;code&gt;setShadowLayer()&lt;/code&gt; 是设置的在绘制层下方的附加效果；而这个 &lt;code&gt;MaskFilter&lt;/code&gt; 和它相反，设置的是在绘制层上方的附加效果。&lt;code&gt;MaskFilter&lt;/code&gt; 有两种： &lt;code&gt;BlurMaskFilter&lt;/code&gt; 和 &lt;code&gt;EmbossMaskFilte&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;学习主要来源：&lt;a href=&quot;http://hencoder.com/ui-1-2/&quot;&gt;扔物线大神&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;颜色&quot;&gt;&lt;a href=&quot;#颜色&quot; class=&quot;headerlink&quot; title=&quot;颜色&quot;&gt;&lt;/a&gt;颜色&lt;/h3&gt;&lt;h4 id=&quot;基本颜色&quot;&gt;&lt;a href=&quot;#基本颜色&quot; class=&quot;headerlink&quot; title=&quot;基本颜色&quot;&gt;&lt;/a&gt;基本颜色&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;setColor(int color)&lt;/li&gt;
&lt;li&gt;setARGB(int a, int r, int g, int b)&lt;/li&gt;
&lt;li&gt;setShader(Shader shader)：用于设置绘制颜色，在 Android 的绘制里使用 &lt;code&gt;Shader&lt;/code&gt; ，并不直接用 &lt;code&gt;Shader&lt;/code&gt; 这个类，而是用它的几个子类。具体来讲有 如下几个：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LinearGradient 线性渐变、RadialGradient 辐射渐变、SweepGradient 扫描渐变、 BitmapShader（用 &lt;code&gt;Bitmap&lt;/code&gt; 的像素来作为图形或文字的填充）、ComposeShader 混合着色器&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://dongxi520.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android View 的工作原理</title>
    <link href="http://dongxi520.com/2018/01/03/Android-View-%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"/>
    <id>http://dongxi520.com/2018/01/03/Android-View-的工作原理/</id>
    <published>2018-01-03T14:08:26.000Z</published>
    <updated>2018-01-10T15:10:54.404Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Android-View-的工作原理&quot;&gt;&lt;a href=&quot;#Android-View-的工作原理&quot; class=&quot;headerlink&quot; title=&quot;Android View 的工作原理&quot;&gt;&lt;/a&gt;Android View 的工作原理&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Android 开发艺术探索—-View的工作原理学习和思考总结。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;初识-ViewRoot-和-DecorView&quot;&gt;&lt;a href=&quot;#初识-ViewRoot-和-DecorView&quot; class=&quot;headerlink&quot; title=&quot;初识 ViewRoot 和 DecorView&quot;&gt;&lt;/a&gt;初识 ViewRoot 和 DecorView&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;ViewRoot&lt;/code&gt; 对应的是&lt;code&gt;ViewRootImpl&lt;/code&gt;类，它是连接&lt;code&gt;WindowManager&lt;/code&gt;和&lt;code&gt;DecorView&lt;/code&gt;的桥梁，并且 View 的三大流程都是通过 ViewRoot 来完成的。&lt;/p&gt;
&lt;p&gt;WindowManager 是用于管理整个 Android 的窗口（View），它能够管理窗口（View）的一些状态、属性、view 的添加、删除、更新等。&lt;/p&gt;
&lt;p&gt;DecorView 是窗口的顶级 View。它其实是一个FrameLayout ，内部一般还会包含一个 LinearLayout ，上面是标题栏，下面是内容栏。View层的事件都先经过 DecorView ，然后才传递给我们的 View。&lt;/p&gt;
&lt;p&gt;View 的三大流程是指：measure，layout， draw。measure 过程是用来测量 View 的宽高；layout 过程是用来测量 View 在父容器中的放置位置；draw 过程是将 View 绘制到屏幕上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;理解-MeasureSpec&quot;&gt;&lt;a href=&quot;#理解-MeasureSpec&quot; class=&quot;headerlink&quot; title=&quot;理解 MeasureSpec&quot;&gt;&lt;/a&gt;理解 MeasureSpec&lt;/h3&gt;&lt;h4 id=&quot;MeasureSpec&quot;&gt;&lt;a href=&quot;#MeasureSpec&quot; class=&quot;headerlink&quot; title=&quot;MeasureSpec&quot;&gt;&lt;/a&gt;MeasureSpec&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;MeasureSpec 在很大程度上决定了一个 View 的规格尺寸，之所以说很大程度是因为在决定 View 的规格的过程中会受到父容器的影响。因为在测量过程中，系统会将 View 的 LayoutParams 转为对应的 MeasureSpec ,然后再根据这个measureSpec 来测量出 View 的宽高。&lt;/p&gt;
&lt;p&gt;LayoutParams : 是子控件控制自己在父控件中布局的一个类。例如子控件 TextView 想在父控件 LinearLayout 中显示，并且想子控件想距离父控件左边 20dp 的距离，或者是子控件想要居中显示，可以使用 LayoutParams 去控制。&lt;/p&gt;
&lt;p&gt;MeasureSpec 代表一个 32 位 int 值，高两位代表 SpecMode，低 30 位代表 SpecSize 。SpecMode是指测量模式；SpecSize 是指某种测量模式下的 View 的规格大小。&lt;/p&gt;
&lt;p&gt;SpecMode 测量模式有三种：UNSPECIFIED、EXACTLY、AT_MOST。&lt;/p&gt;
&lt;p&gt;UNSPECIFIED 测量模式：父容器不对 View 有任何限制，View 是多大就给 View 多大的空间。&lt;/p&gt;
&lt;p&gt;EXACTLY 测量模式：父容器已经检测出 View 所需要的精确大小的空间，这时候 View 的最终大小就是 SpecSize 所指定的值，它对应于 LayoutParams 中的 match_parent 和设置具体的数值。&lt;/p&gt;
&lt;p&gt;AT_MOST 测量模式：父容器指定了一个可用大小的空间即 SpecSize，View 的最终大小不能大于这个值，它对应于 LayoutParams 中的 wrap_content&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;MeasureSpec-和-LayoutParams-的关系&quot;&gt;&lt;a href=&quot;#MeasureSpec-和-LayoutParams-的关系&quot; class=&quot;headerlink&quot; title=&quot;MeasureSpec 和 LayoutParams 的关系&quot;&gt;&lt;/a&gt;MeasureSpec 和 LayoutParams 的关系&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;MeasureSpec 是用于测量 View 的规格，而我们在使用 View 的时候会设置 LayoutParams ,系统会根据设置的 LayoutParams 在父容器的约束下转换为 MeasureSpec。MeasureSpec 也不是唯一由 LayoutParams 决定的，LayoutParams 需要和父容器一起才能决定 View 的 MeasureSpec，从而进一步确定 View 的宽高。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当 View 采用固定宽高时，不管父容器的 MeasureSpec 是什么，View 的 MeasureSpec 都是 EXACTLY  模式，View 的大小遵循 LayoutParams 中的大小。&lt;/li&gt;
&lt;li&gt;当 View 的宽高是 match_parent 时，如果父容器是 EXACTLY  模式，那么 View 也是 EXACTLY  模式且 View 的大小不会超过父容器的大小；如果父容器是 AT_MOST 模式，那么 View 也是 AT_MOST 模式且 View 的大小不会超过父容器的大小。&lt;/li&gt;
&lt;li&gt;当 View 的宽高是 wrap_content 时，不管父容器是 EXACTLY  模式还是 AT_MOST 模式，View 的模式总是最大化并且不超过父容器的剩余空间&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;View-的工作流程&quot;&gt;&lt;a href=&quot;#View-的工作流程&quot; class=&quot;headerlink&quot; title=&quot;View 的工作流程&quot;&gt;&lt;/a&gt;View 的工作流程&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;View 的工作流程主要是指 measure ， layout， draw 。measure 确定 View 的测量宽 / 高，layout确定 View 的最终宽 / 高 和四个顶点，draw 将 View 绘制到屏幕上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;measure-过程&quot;&gt;&lt;a href=&quot;#measure-过程&quot; class=&quot;headerlink&quot; title=&quot;measure 过程&quot;&gt;&lt;/a&gt;measure 过程&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;分为 View 和 ViewGroup 两种情况。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;原始 View &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;直接通过 measure 方法就完成了测量过程。而 measure 方法会去调用 View 的 onMeasure 方法。&lt;/p&gt;
&lt;p&gt;onMeasure 方法源码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setMeasuredDimension(getDefaultSize(getSuggestedMinimumWidth(), widthMeasureSpec),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                getDefaultSize(getSuggestedMinimumHeight(), heightMeasureSpec));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;setMeasuredDimension&lt;/code&gt; 方法会通过&lt;code&gt;getDefaultSize&lt;/code&gt;方法得到宽高志并设置给 View 的宽高。&lt;/p&gt;
&lt;p&gt;getDefaultSize 方法源码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public static int getDefaultSize(int size, int measureSpec) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int result = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int specMode = MeasureSpec.getMode(measureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int specSize = MeasureSpec.getSize(measureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        switch (specMode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case MeasureSpec.UNSPECIFIED:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case MeasureSpec.AT_MOST:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case MeasureSpec.EXACTLY:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result = specSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该方法主要是返回 measureSpec 中的 specSize，而这个specSize 就是 View 的&lt;strong&gt;测量大小&lt;/strong&gt;，之所以说是测量大小是因为 View 的最终大小是在 layout 阶段确定的，但是几乎所有的情况下 View 的测量大小和最终的大小是相等的。而&lt;code&gt;getDefaultSize&lt;/code&gt; 方法的第一个参数是&lt;code&gt;getSuggestedMinimumWidth&lt;/code&gt;方法或者&lt;code&gt;getSuggestedMinimumHeight&lt;/code&gt;方法，那么接下来看看该方法做了哪些操作。&lt;/p&gt;
&lt;p&gt;getSuggestedMinimumWidth 和 getSuggestedMinimumHeight 方法源码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;protected int getSuggestedMinimumWidth() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (mBackground == null) ? mMinWidth : max(mMinWidth, mBackground.getMinimumWidth());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;protected int getSuggestedMinimumHeight() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (mBackground == null) ? mMinHeight : max(mMinHeight, mBackground.getMinimumHeight());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;getSuggestedMinimumWidth&lt;/code&gt; 方法先判断 View 是否设置背景，如果没有设置背景，那么返回 mMinWidth 所指定的值，如果设置了背景，那么返回 mMinWidth 和背景的最小宽度 二者之间的最大值。&lt;code&gt;getSuggestedMinimumHeight&lt;/code&gt; 方法同理。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ViewGroup&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;先完成 ViewGroup 的测量，然后去遍历 ViewGroup 中子 View 的测量。由于 ViewGroup 是一个抽象类&lt;code&gt;public abstract class ViewGroup extends View implements ViewParent, ViewManager {}&lt;/code&gt;，它没有重写 View 的 onMeasure 方法，但是它提供了一个叫 measureChildren 的方法&lt;/p&gt;
&lt;p&gt;measureChildren 方法源码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;protected void measureChildren(int widthMeasureSpec, int heightMeasureSpec) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final int size = mChildrenCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final View[] children = mChildren;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for (int i = 0; i &amp;lt; size; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            final View child = children[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if ((child.mViewFlags &amp;amp; VISIBILITY_MASK) != GONE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                measureChild(child, widthMeasureSpec, heightMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;measureChild 方法源码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;protected void measureChild(View child, int parentWidthMeasureSpec,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           int parentHeightMeasureSpec) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       final LayoutParams lp = child.getLayoutParams();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       final int childWidthMeasureSpec = getChildMeasureSpec(parentWidthMeasureSpec,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               mPaddingLeft + mPaddingRight, lp.width);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       final int childHeightMeasureSpec = getChildMeasureSpec(parentHeightMeasureSpec,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               mPaddingTop + mPaddingBottom, lp.height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       child.measure(childWidthMeasureSpec, childHeightMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从代码中可以看出主要是在 measureChild 方法中通过 getLayoutParams 方法 取出子控件的 LayoutParams ，然后再通过 getChildMeasureSpec 来获取子元素的 MeasureSpec , 接着将 MeasureSpec 直接传递给 View 的 measure 方法来进行测量。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip：&lt;/strong&gt; View 的measure 过程和 Activity 的生命周期方法不是同步执行的。解决办法由四种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Activity / View 的 onWindowFocusChanged ，在该方法中 View 已经初始化完毕，需要注意该方法会被调用多次。&lt;/li&gt;
&lt;li&gt;view.post(runnable)，通过 post 将一个 runnable 传递到消息队列的末尾，然后等待 Looper 调用此 runnable 的时候，View 也已经初始化好了。&lt;/li&gt;
&lt;li&gt;ViewTreeObserver ，使用 ViewTreeObserver 的中国回掉完成该功能，比如使用 OnGlobalLayoutListener 接口。&lt;/li&gt;
&lt;li&gt;view.measure(int widthMeasureSpec, int heightMeasureSpec)，手动对 View 进行 measure ，该方式较复杂。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;layout-过程&quot;&gt;&lt;a href=&quot;#layout-过程&quot; class=&quot;headerlink&quot; title=&quot;layout 过程&quot;&gt;&lt;/a&gt;layout 过程&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;layout 方法确定 View 本身的位置，而 layout 方法中的 onLayout 方法会确定所有子元素的位置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;layout 方法源码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public void layout(int l, int t, int r, int b) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       if ((mPrivateFlags3 &amp;amp; PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT) != 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           onMeasure(mOldWidthMeasureSpec, mOldHeightMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           mPrivateFlags3 &amp;amp;= ~PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       int oldL = mLeft;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       int oldT = mTop;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       int oldB = mBottom;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       int oldR = mRight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       boolean changed = isLayoutModeOptical(mParent) ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               setOpticalFrame(l, t, r, b) : setFrame(l, t, r, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       if (changed || (mPrivateFlags &amp;amp; PFLAG_LAYOUT_REQUIRED) == PFLAG_LAYOUT_REQUIRED) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           onLayout(changed, l, t, r, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           if (shouldDrawRoundScrollbar()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               if(mRoundScrollbarRenderer == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   mRoundScrollbarRenderer = new RoundScrollbarRenderer(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               mRoundScrollbarRenderer = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           mPrivateFlags &amp;amp;= ~PFLAG_LAYOUT_REQUIRED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           ListenerInfo li = mListenerInfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           if (li != null &amp;amp;&amp;amp; li.mOnLayoutChangeListeners != null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               ArrayList&amp;lt;OnLayoutChangeListener&amp;gt; listenersCopy =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       (ArrayList&amp;lt;OnLayoutChangeListener&amp;gt;)li.mOnLayoutChangeListeners.clone();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               int numListeners = listenersCopy.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               for (int i = 0; i &amp;lt; numListeners; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   listenersCopy.get(i).onLayoutChange(this, l, t, r, b, oldL, oldT, oldR, oldB);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       mPrivateFlags &amp;amp;= ~PFLAG_FORCE_LAYOUT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       mPrivateFlags3 |= PFLAG3_IS_LAID_OUT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该方法先通过 setFrame 方法来设定 View 的四个顶点的位置，接着调用 onLayout 方法去确定子元素的位置。接下来是判断了该 View 是显示在圆形可穿戴设备上，这块是为了适配可穿戴设备吧。当布局改变时调用 OnLayoutChangeListener 接口中的 onLayoutChange 方法。&lt;/p&gt;
&lt;h4 id=&quot;draw-过程&quot;&gt;&lt;a href=&quot;#draw-过程&quot; class=&quot;headerlink&quot; title=&quot;draw 过程&quot;&gt;&lt;/a&gt;draw 过程&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;draw 过程是将 View 绘制到屏幕上面，View 的绘制过程遵循如下几步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;绘制背景 background.draw（canvas）&lt;/li&gt;
&lt;li&gt;绘制自己（onDraw）&lt;/li&gt;
&lt;li&gt;绘制 children （dispatchDraw）&lt;/li&gt;
&lt;li&gt;绘制装饰（onDrawScrollBars）&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;draw 方法源码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;193&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public void draw(Canvas canvas) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final int privateFlags = mPrivateFlags;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final boolean dirtyOpaque = (privateFlags &amp;amp; PFLAG_DIRTY_MASK) == PFLAG_DIRTY_OPAQUE &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (mAttachInfo == null || !mAttachInfo.mIgnoreDirtyState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPrivateFlags = (privateFlags &amp;amp; ~PFLAG_DIRTY_MASK) | PFLAG_DRAWN;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        /*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         * Draw traversal performs several drawing steps which must be executed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         * in the appropriate order:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *      1. Draw the background&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *      2. If necessary, save the canvas&amp;apos; layers to prepare for fading&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *      3. Draw view&amp;apos;s content&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *      4. Draw children&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *      5. If necessary, draw the fading edges and restore layers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *      6. Draw decorations (scrollbars for instance)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Step 1, draw the background, if needed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int saveCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (!dirtyOpaque) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            drawBackground(canvas);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // skip step 2 &amp;amp; 5 if possible (common case)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final int viewFlags = mViewFlags;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        boolean horizontalEdges = (viewFlags &amp;amp; FADING_EDGE_HORIZONTAL) != 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        boolean verticalEdges = (viewFlags &amp;amp; FADING_EDGE_VERTICAL) != 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (!verticalEdges &amp;amp;&amp;amp; !horizontalEdges) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // Step 3, draw the content&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (!dirtyOpaque) onDraw(canvas);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // Step 4, draw the children&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dispatchDraw(canvas);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // Overlay is part of the content and draws beneath Foreground&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (mOverlay != null &amp;amp;&amp;amp; !mOverlay.isEmpty()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mOverlay.getOverlayView().dispatchDraw(canvas);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // Step 6, draw decorations (foreground, scrollbars)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            onDrawForeground(canvas);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // we&amp;apos;re done...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        /*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         * Here we do the full fledged routine...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         * (this is an uncommon case where speed matters less,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         * this is why we repeat some of the tests that have been&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         * done above)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        boolean drawTop = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        boolean drawBottom = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        boolean drawLeft = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        boolean drawRight = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        float topFadeStrength = 0.0f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        float bottomFadeStrength = 0.0f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        float leftFadeStrength = 0.0f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        float rightFadeStrength = 0.0f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Step 2, save the canvas&amp;apos; layers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int paddingLeft = mPaddingLeft;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final boolean offsetRequired = isPaddingOffsetRequired();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (offsetRequired) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            paddingLeft += getLeftPaddingOffset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int left = mScrollX + paddingLeft;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int right = left + mRight - mLeft - mPaddingRight - paddingLeft;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int top = mScrollY + getFadeTop(offsetRequired);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int bottom = top + getFadeHeight(offsetRequired);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (offsetRequired) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            right += getRightPaddingOffset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bottom += getBottomPaddingOffset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final ScrollabilityCache scrollabilityCache = mScrollCache;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final float fadeHeight = scrollabilityCache.fadingEdgeLength;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int length = (int) fadeHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // clip the fade length if top and bottom fades overlap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // overlapping fades produce odd-looking artifacts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (verticalEdges &amp;amp;&amp;amp; (top + length &amp;gt; bottom - length)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            length = (bottom - top) / 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // also clip horizontal fades if necessary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (horizontalEdges &amp;amp;&amp;amp; (left + length &amp;gt; right - length)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            length = (right - left) / 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (verticalEdges) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            topFadeStrength = Math.max(0.0f, Math.min(1.0f, getTopFadingEdgeStrength()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            drawTop = topFadeStrength * fadeHeight &amp;gt; 1.0f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bottomFadeStrength = Math.max(0.0f, Math.min(1.0f, getBottomFadingEdgeStrength()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            drawBottom = bottomFadeStrength * fadeHeight &amp;gt; 1.0f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (horizontalEdges) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            leftFadeStrength = Math.max(0.0f, Math.min(1.0f, getLeftFadingEdgeStrength()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            drawLeft = leftFadeStrength * fadeHeight &amp;gt; 1.0f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rightFadeStrength = Math.max(0.0f, Math.min(1.0f, getRightFadingEdgeStrength()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            drawRight = rightFadeStrength * fadeHeight &amp;gt; 1.0f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        saveCount = canvas.getSaveCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int solidColor = getSolidColor();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (solidColor == 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            final int flags = Canvas.HAS_ALPHA_LAYER_SAVE_FLAG;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (drawTop) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                canvas.saveLayer(left, top, right, top + length, null, flags);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (drawBottom) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                canvas.saveLayer(left, bottom - length, right, bottom, null, flags);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (drawLeft) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                canvas.saveLayer(left, top, left + length, bottom, null, flags);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (drawRight) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                canvas.saveLayer(right - length, top, right, bottom, null, flags);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            scrollabilityCache.setFadeColor(solidColor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Step 3, draw the content&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (!dirtyOpaque) onDraw(canvas);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Step 4, draw the children&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dispatchDraw(canvas);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Step 5, draw the fade effect and restore layers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final Paint p = scrollabilityCache.paint;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final Matrix matrix = scrollabilityCache.matrix;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final Shader fade = scrollabilityCache.shader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (drawTop) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            matrix.setScale(1, fadeHeight * topFadeStrength);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            matrix.postTranslate(left, top);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fade.setLocalMatrix(matrix);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            p.setShader(fade);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            canvas.drawRect(left, top, right, top + length, p);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (drawBottom) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            matrix.setScale(1, fadeHeight * bottomFadeStrength);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            matrix.postRotate(180);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            matrix.postTranslate(left, bottom);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fade.setLocalMatrix(matrix);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            p.setShader(fade);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            canvas.drawRect(left, bottom - length, right, bottom, p);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (drawLeft) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            matrix.setScale(1, fadeHeight * leftFadeStrength);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            matrix.postRotate(-90);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            matrix.postTranslate(left, top);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fade.setLocalMatrix(matrix);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            p.setShader(fade);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            canvas.drawRect(left, top, left + length, bottom, p);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (drawRight) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            matrix.setScale(1, fadeHeight * rightFadeStrength);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            matrix.postRotate(90);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            matrix.postTranslate(right, top);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fade.setLocalMatrix(matrix);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            p.setShader(fade);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            canvas.drawRect(right - length, top, right, bottom, p);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        canvas.restoreToCount(saveCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Overlay is part of the content and draws beneath Foreground&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (mOverlay != null &amp;amp;&amp;amp; !mOverlay.isEmpty()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mOverlay.getOverlayView().dispatchDraw(canvas);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Step 6, draw decorations (foreground, scrollbars)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onDrawForeground(canvas);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;自定义-View&quot;&gt;&lt;a href=&quot;#自定义-View&quot; class=&quot;headerlink&quot; title=&quot;自定义 View&quot;&gt;&lt;/a&gt;自定义 View&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;需要做出炫酷的效果，使用系统的控件是很难完成的，那么自定义 View 就是解决这个问题的。自定义 View 涉及到 View 的层次结构、事件分发、View 的工作原理等技术细节。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;自定义的分类&quot;&gt;&lt;a href=&quot;#自定义的分类&quot; class=&quot;headerlink&quot; title=&quot;自定义的分类&quot;&gt;&lt;/a&gt;自定义的分类&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;继承 View 重写 onDraw 方法&lt;/li&gt;
&lt;li&gt;继承 ViewGroup 派生特殊的 Layout &lt;/li&gt;
&lt;li&gt;继承特定的 View 比如（TextView）&lt;/li&gt;
&lt;li&gt;继承特定的 ViewGroup 比如（LinearLayout）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;自定义-View-须知&quot;&gt;&lt;a href=&quot;#自定义-View-须知&quot; class=&quot;headerlink&quot; title=&quot;自定义 View 须知&quot;&gt;&lt;/a&gt;自定义 View 须知&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;让 View 支持 warp_content&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为直接继承 View 或者 ViewGroup 控件，如果不在 onMeasure 方法中对wrap_content 做特殊处理，wrap_content 和 match_parent 效果是一样的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果有必要，让你的 View 支持 padding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为直接继承 View 或者 ViewGroup , 如果不在 draw 方法中对 View 的 padding 做处理，那么 padding 属性是不会起作用的。而且直接继承 ViewGroup 的控件还需要在 onMeasure 和 onLayout 中考虑 padding 和子元素 margin 对其造成的影响，不然将导致 padding 和子元素的 margin 都失效。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尽量不要再 View 中使用 Handler ，因为没有必要&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为 View 内部本身提供了 post 系列的方法，完全可以替代 Handler 的作用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;View 中如果由线程或者动画，需要及时停止，否则会造成内存泄露&lt;/li&gt;
&lt;li&gt;View 带有滑动嵌套情况时，需要处理好滑动个冲突&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;自定义-View-示例&quot;&gt;&lt;a href=&quot;#自定义-View-示例&quot; class=&quot;headerlink&quot; title=&quot;自定义 View 示例&quot;&gt;&lt;/a&gt;自定义 View 示例&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;圆角图片（例子是网络上比较完善的，对比书中简单实现的例子，可以更好的学习）&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;223&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;224&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;225&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;226&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;227&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;228&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;229&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;230&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;231&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;232&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;233&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;234&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;235&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;236&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;237&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;238&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;239&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;240&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;241&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;242&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;243&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;244&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;245&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;246&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;247&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;248&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;249&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;250&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;251&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;252&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;253&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;254&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;255&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;256&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;257&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;258&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;259&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;260&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;261&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;262&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;263&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;264&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;265&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;266&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;267&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;268&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;269&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;270&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;271&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;272&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;273&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;274&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;275&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;276&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;277&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;278&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;279&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;280&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;281&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;282&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;283&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;284&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;285&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;286&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;287&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;288&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;289&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;290&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;291&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;292&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;293&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;294&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;295&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;296&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;297&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;298&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;299&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;300&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;301&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;302&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;303&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;304&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;305&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;306&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;307&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;308&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;309&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;310&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;311&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;312&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;313&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;314&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;315&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;316&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;317&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;318&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;319&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;320&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;321&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;322&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;323&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;324&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;325&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;326&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;327&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;328&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;329&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;330&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;331&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;332&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;333&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;334&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;335&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;336&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;337&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;338&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;339&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;340&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;341&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;342&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;343&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;344&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;345&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;346&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;347&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;348&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;349&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;350&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;351&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;352&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;353&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;354&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;355&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;356&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;357&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;358&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;359&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;360&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;361&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;362&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;363&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;364&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;365&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;366&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;367&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;368&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;369&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;370&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;371&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;372&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;373&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;374&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;375&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;376&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;377&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;378&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;379&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;380&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;381&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import android.content.Context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.graphics.Bitmap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.graphics.BitmapShader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.graphics.Canvas;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.graphics.Color;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.graphics.Matrix;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.graphics.Paint;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.graphics.Rect;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.graphics.RectF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.graphics.Shader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.graphics.SweepGradient;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.graphics.drawable.BitmapDrawable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.graphics.drawable.ColorDrawable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.graphics.drawable.Drawable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.net.Uri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.support.v7.widget.AppCompatImageView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.text.TextPaint;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.util.AttributeSet;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 圆形图片&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *     圆角&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *     设置边框&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *     设置边框颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *     设置边框渐变&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class CircleImageView extends AppCompatImageView &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private static final ScaleType SCALE_TYPE = ScaleType.CENTER_CROP;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private static final Bitmap.Config BITMAP_CONFIG = Bitmap.Config.ARGB_8888;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private static final int COLORDRAWABLE_DIMENSION = 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 圆形边框的厚度默认值。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 如果是0，则没有天蓝色渐变的边框。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private static final int DEFAULT_BORDER_WIDTH = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 默认的圆形边框颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private static final int DEFAULT_BORDER_COLOR = Color.BLACK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private final RectF mDrawableRect = new RectF();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private final RectF mBorderRect = new RectF();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private final Matrix mShaderMatrix = new Matrix();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private final Paint mBitmapPaint = new Paint();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private final Paint mBorderPaint = new Paint();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int mBorderColor = DEFAULT_BORDER_COLOR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int mBorderWidth = DEFAULT_BORDER_WIDTH;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private Bitmap mBitmap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private BitmapShader mBitmapShader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int mBitmapWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int mBitmapHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private float mDrawableRadius;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private float mBorderRadius;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private boolean mReady;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private boolean mSetupPending;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private final Paint mFlagBackgroundPaint = new Paint();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private final TextPaint mFlagTextPaint = new TextPaint();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private String mFlagText;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private boolean mShowFlag = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private Rect mFlagTextBounds = new Rect();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 渐变----用于边框颜色的渐变&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Shader mSweepGradient = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public CircleImageView(Context context) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public CircleImageView(Context context, AttributeSet attrs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this(context, attrs, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public CircleImageView(Context context, AttributeSet attrs, int defStyle) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super(context, attrs, defStyle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private void init() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	// 默认给图片设置了裁剪的样式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.setScaleType(SCALE_TYPE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mReady = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (mSetupPending) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSetupPending = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public ScaleType getScaleType() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return SCALE_TYPE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void setScaleType(ScaleType scaleType) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (scaleType != SCALE_TYPE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	// ScaleType 设置只能为CENTER_CROP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            throw new IllegalArgumentException(String.format(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;quot;ScaleType %s not supported.&amp;quot;, scaleType));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void setAdjustViewBounds(boolean adjustViewBounds) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (adjustViewBounds) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            throw new IllegalArgumentException(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;quot;adjustViewBounds not supported.&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 设置支持wrap_content&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param widthMeasureSpec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param heightMeasureSpec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.onMeasure(widthMeasureSpec, heightMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int heightSpecSize = MeasureSpec.getSize(heightMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (widthSpecMode == MeasureSpec.AT_MOST &amp;amp;&amp;amp; heightSpecMode == MeasureSpec.AT_MOST)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setMeasuredDimension(200,200);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;else if (widthSpecMode == MeasureSpec.AT_MOST)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setMeasuredDimension(200, heightSpecSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;else if (heightMeasureSpec == MeasureSpec.AT_MOST)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setMeasuredDimension(widthSpecSize, 200);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 核心&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param canvas&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    protected void onDraw(Canvas canvas) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (getDrawable() == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 绘制圆形图片&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        canvas.drawCircle(getWidth() / 2, getHeight() / 2, mDrawableRadius,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mBitmapPaint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 有描边&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (mBorderWidth != 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            canvas.save();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // 画布整体顺时针旋转20°&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            canvas.rotate(20, getWidth() / 2, getHeight() / 2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // 绘制外圆描边&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            canvas.drawCircle(getWidth() / 2, getHeight() / 2, mBorderRadius,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mBorderPaint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            canvas.restore();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (mShowFlag &amp;amp;&amp;amp; mFlagText != null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            canvas.drawArc(mBorderRect, 40, 100, false, mFlagBackgroundPaint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFlagTextPaint.getTextBounds(mFlagText, 0, mFlagText.length(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mFlagTextBounds);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            canvas.drawText(mFlagText, getWidth() / 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (float) ((3 + Math.cos((float) (Math.PI * 5 / 18)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            * getHeight() / 4 + mFlagTextBounds.height() / 3),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mFlagTextPaint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    protected void onSizeChanged(int w, int h, int oldw, int oldh) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.onSizeChanged(w, h, oldw, oldh);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 获取边框的颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public int getBorderColor() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return mBorderColor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 设置边框的颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param borderColor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void setBorderColor(int borderColor) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (borderColor == mBorderColor) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBorderColor = borderColor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBorderPaint.setColor(mBorderColor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        invalidate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 获取边框的宽度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public int getBorderWidth() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return mBorderWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param borderWidth&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *   圆形的边框厚度。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void setBorderWidth(int borderWidth) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (borderWidth == mBorderWidth) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBorderWidth = borderWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 设置bitmap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void setImageBitmap(Bitmap bm) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.setImageBitmap(bm);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBitmap = bm;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 设置drawable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void setImageDrawable(Drawable drawable) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.setImageDrawable(drawable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBitmap = getBitmapFromDrawable(drawable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void setImageResource(int resId) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.setImageResource(resId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBitmap = getBitmapFromDrawable(getDrawable());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 设置路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void setImageURI(Uri uri) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.setImageURI(uri);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBitmap = getBitmapFromDrawable(getDrawable());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private Bitmap getBitmapFromDrawable(Drawable drawable) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (drawable == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (drawable instanceof BitmapDrawable) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return ((BitmapDrawable) drawable).getBitmap();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Bitmap bitmap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (drawable instanceof ColorDrawable) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bitmap = Bitmap.createBitmap(COLORDRAWABLE_DIMENSION,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        COLORDRAWABLE_DIMENSION, BITMAP_CONFIG);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        drawable.getIntrinsicHeight(), BITMAP_CONFIG);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Canvas canvas = new Canvas(bitmap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            drawable.draw(canvas);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return bitmap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; catch (OutOfMemoryError e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 核心&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *  在构造方法执行完毕之后执行该方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private void setup() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (!mReady) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSetupPending = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (mBitmap == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// BitmapShader类用来渲染头像 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBitmapShader = new BitmapShader(mBitmap, Shader.TileMode.CLAMP,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Shader.TileMode.CLAMP);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 图片画笔&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBitmapPaint.setAntiAlias(true);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBitmapPaint.setShader(mBitmapShader);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 边框画笔&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBorderPaint.setStyle(Paint.Style.STROKE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBorderPaint.setAntiAlias(true);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBorderPaint.setColor(mBorderColor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBorderPaint.setStrokeWidth(mBorderWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 取的原图片的宽高&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBitmapHeight = mBitmap.getHeight();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBitmapWidth = mBitmap.getWidth();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 设置含边界显示区域，取的是CircleImageView的布局实际大小，为方形&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBorderRect.set(0, 0, getWidth(), getHeight());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 计算外圆（包含描边）的半径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBorderRadius = Math.min((mBorderRect.height() - mBorderWidth) / 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (mBorderRect.width() - mBorderWidth) / 2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 初始图片显示区域为mBorderRect&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mDrawableRect.set(mBorderWidth, mBorderWidth, mBorderRect.width()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                - mBorderWidth, mBorderRect.height() - mBorderWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 计算内圆的半径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mDrawableRadius = Math.min(mDrawableRect.height() / 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mDrawableRect.width() / 2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlagBackgroundPaint.setColor(Color.BLACK &amp;amp; 0x66FFFFFF);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlagBackgroundPaint.setFlags(TextPaint.ANTI_ALIAS_FLAG);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlagTextPaint.setFlags(TextPaint.ANTI_ALIAS_FLAG);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlagTextPaint.setTextAlign(Paint.Align.CENTER);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlagTextPaint.setColor(Color.WHITE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlagTextPaint&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .setTextSize(getResources().getDisplayMetrics().density * 18);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 边框内的颜色渐变&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSweepGradient = new SweepGradient(getWidth() / 2, getHeight() / 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                new int[] &amp;#123; Color.rgb(255, 255, 255), Color.rgb(1, 209, 255) &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                null);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBorderPaint.setShader(mSweepGradient);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        updateShaderMatrix();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        invalidate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * 这个函数为设置BitmapShader的Matrix参数，设置最小缩放比例，平移参数。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * 作用：保证图片损失度最小和始终绘制图片正中央的那部分&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private void updateShaderMatrix() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        float scale;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        float dx = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        float dy = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mShaderMatrix.set(null);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (mBitmapWidth * mDrawableRect.height() &amp;gt; mDrawableRect.width()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                * mBitmapHeight) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            scale = mDrawableRect.height() / (float) mBitmapHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dx = (mDrawableRect.width() - mBitmapWidth * scale) * 0.5f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            scale = mDrawableRect.width() / (float) mBitmapWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dy = (mDrawableRect.height() - mBitmapHeight * scale) * 0.5f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 设置缩放&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mShaderMatrix.setScale(scale, scale);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 设置平移&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mShaderMatrix.postTranslate((int) (dx + 0.5f) + mBorderWidth,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (int) (dy + 0.5f) + mBorderWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBitmapShader.setLocalMatrix(mShaderMatrix);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void setShowFlag(boolean show) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mShowFlag = show;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        invalidate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void setFlagText(String text) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlagText = text;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        invalidate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;类似于 ViewPager 控件的 View&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;207&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class HorizontalScrollViewEx extends ViewGroup &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private static final String TAG = &amp;quot;HorizontalScrollViewEx&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int mChildrenSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int mChildWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int mChildIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 分别记录上次滑动的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int mLastX = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int mLastY = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 分别记录上次滑动的坐标(onInterceptTouchEvent)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int mLastXIntercept = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int mLastYIntercept = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private Scroller mScroller;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private VelocityTracker mVelocityTracker;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public HorizontalScrollViewEx(Context context) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public HorizontalScrollViewEx(Context context, AttributeSet attrs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super(context, attrs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public HorizontalScrollViewEx(Context context, AttributeSet attrs,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int defStyle) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super(context, attrs, defStyle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private void init() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (mScroller == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mScroller = new Scroller(getContext());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // VelocityTracker 是跟踪触摸事件滑动速度的帮助类，用于实现flinging以及其它类似的手势&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mVelocityTracker = VelocityTracker.obtain();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public boolean onInterceptTouchEvent(MotionEvent event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        boolean intercepted = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int x = (int) event.getX();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int y = (int) event.getY();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        switch (event.getAction()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case MotionEvent.ACTION_DOWN: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	// 采用外部拦截法处理滑动冲突&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            intercepted = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (!mScroller.isFinished()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            	// 为了优化滑动体验而加入&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mScroller.abortAnimation();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                intercepted = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case MotionEvent.ACTION_MOVE: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int deltaX = x - mLastXIntercept;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int deltaY = y - mLastYIntercept;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (Math.abs(deltaX) &amp;gt; Math.abs(deltaY)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            	// 父类需要处理该事件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                intercepted = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                intercepted = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case MotionEvent.ACTION_UP: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            intercepted = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        default:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.d(TAG, &amp;quot;intercepted=&amp;quot; + intercepted);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastX = x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastY = y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastXIntercept = x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastYIntercept = y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return intercepted;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public boolean onTouchEvent(MotionEvent event) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mVelocityTracker.addMovement(event);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int x = (int) event.getX();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int y = (int) event.getY();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        switch (event.getAction()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case MotionEvent.ACTION_DOWN: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (!mScroller.isFinished()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mScroller.abortAnimation();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case MotionEvent.ACTION_MOVE: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int deltaX = x - mLastX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int deltaY = y - mLastY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            scrollBy(-deltaX, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case MotionEvent.ACTION_UP: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	// 当松开手的时候，会自动向两边滑动，具体向那边滑动要看当前所处的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int scrollX = getScrollX();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // 初始化滑动速率的单位&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mVelocityTracker.computeCurrentVelocity(1000);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // 获得横向速率&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            float xVelocity = mVelocityTracker.getXVelocity();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (Math.abs(xVelocity) &amp;gt;= 50) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            	// 滑动方向&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mChildIndex = xVelocity &amp;gt; 0 ? mChildIndex - 1 : mChildIndex + 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mChildIndex = (scrollX + mChildWidth / 2) / mChildWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // 子元素最后的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mChildIndex = Math.max(0, Math.min(mChildIndex, mChildrenSize - 1));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int dx = mChildIndex * mChildWidth - scrollX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // 带有动画的滑动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            smoothScrollBy(dx, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mVelocityTracker.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        default:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastX = x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastY = y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.onMeasure(widthMeasureSpec, heightMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int measuredWidth = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int measuredHeight = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final int childCount = getChildCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        measureChildren(widthMeasureSpec, heightMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int widthSpaceSize = MeasureSpec.getSize(widthMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int heightSpaceSize = MeasureSpec.getSize(heightMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (childCount == 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	// 没有子元素，则将自己的宽高设置为 0，0；此处应该是需要根据 LayoutParams 中的宽高来处理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setMeasuredDimension(0, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else if (widthSpecMode == MeasureSpec.AT_MOST &amp;amp;&amp;amp; heightSpecMode == MeasureSpec.AT_MOST) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	// 如果宽高为 wrap_content，这里还需要考虑父控件的 padding 以及子控件的 margin &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            final View childView = getChildAt(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // 所有子元素的宽的和就是父控件的宽&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            measuredWidth = childView.getMeasuredWidth() * childCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            measuredHeight = childView.getMeasuredHeight();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setMeasuredDimension(measuredWidth, measuredHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else if (heightSpecMode == MeasureSpec.AT_MOST) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	// 如果高为 wrap_content&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            final View childView = getChildAt(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            measuredHeight = childView.getMeasuredHeight();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setMeasuredDimension(widthSpaceSize, childView.getMeasuredHeight());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else if (widthSpecMode == MeasureSpec.AT_MOST) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	// 如果宽为 wrap_content&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            final View childView = getChildAt(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            measuredWidth = childView.getMeasuredWidth() * childCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setMeasuredDimension(measuredWidth, heightSpaceSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    protected void onLayout(boolean changed, int l, int t, int r, int b) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int childLeft = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final int childCount = getChildCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChildrenSize = childCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for (int i = 0; i &amp;lt; childCount; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            final View childView = getChildAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (childView.getVisibility() != View.GONE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                final int childWidth = childView.getMeasuredWidth();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mChildWidth = childWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                // 将子控件从左到右摆放&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                childView.layout(childLeft, 0, childLeft + childWidth,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        childView.getMeasuredHeight());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                childLeft += childWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private void smoothScrollBy(int dx, int dy) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mScroller.startScroll(getScrollX(), 0, dx, 0, 500);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        invalidate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void computeScroll() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (mScroller.computeScrollOffset()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            scrollTo(mScroller.getCurrX(), mScroller.getCurrY());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            postInvalidate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    protected void onDetachedFromWindow() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mVelocityTracker.recycle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.onDetachedFromWindow();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Android-View-的工作原理&quot;&gt;&lt;a href=&quot;#Android-View-的工作原理&quot; class=&quot;headerlink&quot; title=&quot;Android View 的工作原理&quot;&gt;&lt;/a&gt;Android View 的工作原理&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Android 开发艺术探索—-View的工作原理学习和思考总结。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;初识-ViewRoot-和-DecorView&quot;&gt;&lt;a href=&quot;#初识-ViewRoot-和-DecorView&quot; class=&quot;headerlink&quot; title=&quot;初识 ViewRoot 和 DecorView&quot;&gt;&lt;/a&gt;初识 ViewRoot 和 DecorView&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;ViewRoot&lt;/code&gt; 对应的是&lt;code&gt;ViewRootImpl&lt;/code&gt;类，它是连接&lt;code&gt;WindowManager&lt;/code&gt;和&lt;code&gt;DecorView&lt;/code&gt;的桥梁，并且 View 的三大流程都是通过 ViewRoot 来完成的。&lt;/p&gt;
&lt;p&gt;WindowManager 是用于管理整个 Android 的窗口（View），它能够管理窗口（View）的一些状态、属性、view 的添加、删除、更新等。&lt;/p&gt;
&lt;p&gt;DecorView 是窗口的顶级 View。它其实是一个FrameLayout ，内部一般还会包含一个 LinearLayout ，上面是标题栏，下面是内容栏。View层的事件都先经过 DecorView ，然后才传递给我们的 View。&lt;/p&gt;
&lt;p&gt;View 的三大流程是指：measure，layout， draw。measure 过程是用来测量 View 的宽高；layout 过程是用来测量 View 在父容器中的放置位置；draw 过程是将 View 绘制到屏幕上。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://dongxi520.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Python Django 搭建学习笔记博客系统总结</title>
    <link href="http://dongxi520.com/2018/01/01/Python-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F%E6%80%BB%E7%BB%93/"/>
    <id>http://dongxi520.com/2018/01/01/Python-学习笔记博客系统总结/</id>
    <published>2018-01-01T00:49:12.000Z</published>
    <updated>2018-03-10T01:03:18.317Z</updated>
    
    <content type="html">&lt;p&gt;学习笔记是《Python从入门到实践》书中的一个项目。书中会有一些错误，这里我已经修改过了，在&lt;a href=&quot;https://github.com/dongxi346/DjangoLearningLogs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github上的项目&lt;/a&gt;是可以运行的。&lt;/p&gt;
&lt;h3 id=&quot;项目需求&quot;&gt;&lt;a href=&quot;#项目需求&quot; class=&quot;headerlink&quot; title=&quot;项目需求&quot;&gt;&lt;/a&gt;项目需求&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;编写一个名为“学习笔记”Web应用程序，让用户能后记录感兴趣的主题，并在学习每个主题的过程中添加日志条目。“学习笔记”的主页对这个网站进行扫面，并邀请用户注册或登录。用户登录后，就可以创建主题，添加条目以及阅读既有条目。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;开发环境&quot;&gt;&lt;a href=&quot;#开发环境&quot; class=&quot;headerlink&quot; title=&quot;开发环境&quot;&gt;&lt;/a&gt;开发环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Django 2.0&lt;/li&gt;
&lt;li&gt;Python 3.5.2&lt;/li&gt;
&lt;li&gt;window 10 64位&lt;/li&gt;
&lt;li&gt;调试浏览器-Chrome  62.0.3202.89版本&lt;/li&gt;
&lt;li&gt;开发工具 Sublime Text 3&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Tip:&lt;/code&gt; 我这里是在虚拟环境下开发，所以要查看 Django 的版本需要先激活虚拟环境 , 然后输入&lt;code&gt;python -m django --version&lt;/code&gt;; 查看Python 版本只需在命令行窗口下输入&lt;code&gt;python&lt;/code&gt;即可查看。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;项目的开发前准备&quot;&gt;&lt;a href=&quot;#项目的开发前准备&quot; class=&quot;headerlink&quot; title=&quot;项目的开发前准备&quot;&gt;&lt;/a&gt;项目的开发前准备&lt;/h3&gt;&lt;h4 id=&quot;创建虚拟环境&quot;&gt;&lt;a href=&quot;#创建虚拟环境&quot; class=&quot;headerlink&quot; title=&quot;创建虚拟环境&quot;&gt;&lt;/a&gt;创建虚拟环境&lt;/h4&gt;&lt;p&gt;新建一个目录用于存放当前“学习笔记”项目的所有文件，在终端下切换到当前目录来创建虚拟环境，创建命令如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python -m venv ll_env&lt;/code&gt;: 先是运行了&lt;code&gt;venv&lt;/code&gt;模块，应使用它来创建了一个名为&lt;code&gt;ll_env&lt;/code&gt;的虚拟环境。如果不能使用 &lt;code&gt;venv&lt;/code&gt; 模块，那么可以尝试先安装 &lt;code&gt;virtualenv&lt;/code&gt;。如果能使用 &lt;code&gt;venv&lt;/code&gt; 模块，可以不安装 &lt;code&gt;virtualenv&lt;/code&gt;,直接激活虚拟环境.&lt;/p&gt;
&lt;h4 id=&quot;安装virtualenv&quot;&gt;&lt;a href=&quot;#安装virtualenv&quot; class=&quot;headerlink&quot; title=&quot;安装virtualenv&quot;&gt;&lt;/a&gt;安装&lt;code&gt;virtualenv&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;&lt;code&gt;pip install --user virtualenv&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;激活虚拟环境&quot;&gt;&lt;a href=&quot;#激活虚拟环境&quot; class=&quot;headerlink&quot; title=&quot;激活虚拟环境&quot;&gt;&lt;/a&gt;激活虚拟环境&lt;/h4&gt;&lt;p&gt;建立了虚拟环境需要激活才能使用，所以使用下面的命令来激活它：各个平台可能会不一样，我这里是 window 平台&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ll_env\Scriptes\activate&lt;/code&gt;, &lt;strong&gt;停止虚拟环境可输入&lt;/strong&gt;：&lt;code&gt;deactivate&lt;/code&gt;命令&lt;/p&gt;
&lt;h4 id=&quot;安装-Django&quot;&gt;&lt;a href=&quot;#安装-Django&quot; class=&quot;headerlink&quot; title=&quot;安装 Django&quot;&gt;&lt;/a&gt;安装 Django&lt;/h4&gt;&lt;p&gt;因为我们是在虚拟环境中开发，所以 Django 也是在虚拟环境中安装，输入如下命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pip install Django&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Tip:&lt;/code&gt;Django 仅在虚拟环境被激活的时候才可用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;在-Django-中创建项目&quot;&gt;&lt;a href=&quot;#在-Django-中创建项目&quot; class=&quot;headerlink&quot; title=&quot;在 Django 中创建项目&quot;&gt;&lt;/a&gt;在 Django 中创建项目&lt;/h4&gt;&lt;p&gt;&lt;code&gt;django-admin startproject leaning_log .&lt;/code&gt;: 注意别漏了末尾的&lt;code&gt;.&lt;/code&gt;否则部署应用程序时可能会遭遇一些配置问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用该命令创建了一个项目：&lt;code&gt;leaning_log&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果忘记了这个句点&lt;code&gt;.&lt;/code&gt;，就讲创建的文件和文件夹删除（&lt;code&gt;ll_env&lt;/code&gt;除外），再重新运行这个命令。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;创建数据库&quot;&gt;&lt;a href=&quot;#创建数据库&quot; class=&quot;headerlink&quot; title=&quot;创建数据库&quot;&gt;&lt;/a&gt;创建数据库&lt;/h4&gt;&lt;p&gt;Django 将大部分的项目相关的信息都存储在数据库中，因此我们需要创建一个共Django使用的数据库。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python manage.py migrate&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;运行项目&quot;&gt;&lt;a href=&quot;#运行项目&quot; class=&quot;headerlink&quot; title=&quot;运行项目&quot;&gt;&lt;/a&gt;运行项目&lt;/h4&gt;&lt;p&gt;在做完以上内容后就可以运行项目了，但是此时运行项目得到的是 Django 主页&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python manage.py sunserver&lt;/code&gt;，启动了服务器后，在浏览器中输入&lt;code&gt;localhost:8000&lt;/code&gt;，&lt;code&gt;8000&lt;/code&gt;表示端口号。如果没出现错误，应该能看到 Django 的主页。关闭服务器在命令行界面按住&lt;code&gt;ctrl+c&lt;/code&gt;即可&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有可能会出现端口号被占用，提示“That port is already use ”，可以重新执行命令&lt;code&gt;pythonmanage.py runserver 8001&lt;/code&gt;,如果还提示端口被占用，可接着换端口去多次尝试。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;创建应用程序&quot;&gt;&lt;a href=&quot;#创建应用程序&quot; class=&quot;headerlink&quot; title=&quot;创建应用程序&quot;&gt;&lt;/a&gt;创建应用程序&lt;/h3&gt;&lt;p&gt;Django 项目是由一系列的应用程序组成，他们协同工作，让项目成为一个整体。当前命令行窗口应该还是运行着服务器的。所以要重新打开一个命令行窗口，并切换到&lt;code&gt;manage.py&lt;/code&gt;目录下，激活该虚拟环境，再执行命令 &lt;code&gt;startapp&lt;/code&gt; ,命令如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;激活虚拟环境&lt;code&gt;ll_env\Scripts\activate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;运行应用程序&lt;code&gt;python manage.py startapp leaning_logs&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;如果这时候查看项目目录，会发现新创建了一个文件夹&lt;code&gt;leaning_logs&lt;/code&gt;,打开该文件夹，里面最重要的文件是&lt;code&gt;models.py,admin.py,views.py&lt;/code&gt;，我们将用其中的&lt;code&gt;models.py&lt;/code&gt;来定义应用程序中管理的数据。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;定义模型-leaning-logs-models-py&quot;&gt;&lt;a href=&quot;#定义模型-leaning-logs-models-py&quot; class=&quot;headerlink&quot; title=&quot;定义模型 leaning_logs/models.py&quot;&gt;&lt;/a&gt;定义模型 leaning_logs/models.py&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;在&lt;code&gt;leaning_logs&lt;/code&gt;文件夹的&lt;code&gt;models.py&lt;/code&gt;中创建&lt;code&gt;Topic、Entry&lt;/code&gt;模型。代表用户创建的 主题 和 文章 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;模型就是一个类，包含属性和方法。主题模型中可能会定义外键，用于关联主题模型所对应的其他对象。定义外键的作用是用于确定主题属于哪个用户，需要这么去定义外键 &lt;code&gt;owner = models.ForeignKey(User, &amp;quot;on_delete=models.CASCADE&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.db import models&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.contrib.auth.models import User&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Topic(models.Model):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;用户要学习的主题.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 在数据库中定义了 text 的所占的空间为 200 个字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    text = models.CharField(max_length=200)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     # 在数据库中定义了 date_added 的为当前创建的时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    date_added = models.DateTimeField(auto_now_add=True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 外键是用户，可以通过这个外键确定这个主题属于哪个用户&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    owner = models.ForeignKey(User, &amp;quot;on_delete=models.CASCADE&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __str__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;返回模型的字符串表示&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return self.text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Entry(models.Model):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;用户发表的文章&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 外键是主题，可以通过这个外键去确定这个文章属于哪个主题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    topic = models.ForeignKey(Topic, &amp;quot;on_delete=models.CASCADE&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    text = models.TextField()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    date_added = models.DateTimeField(auto_now_add = True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    class Meta:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        verbose_name_plural = &amp;apos;entries&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __str__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;返回模型的字符串表示&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return self.text[:50] + &amp;quot;...&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;激活模型-leaning-log-settings-py&quot;&gt;&lt;a href=&quot;#激活模型-leaning-log-settings-py&quot; class=&quot;headerlink&quot; title=&quot;激活模型 leaning_log/settings.py&quot;&gt;&lt;/a&gt;激活模型 leaning_log/settings.py&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;创建了模型（应用程序）需要&lt;strong&gt;激活&lt;/strong&gt;，在目录&lt;code&gt;lwaning_log/setting.py&lt;/code&gt;下将应用程序包含到项目中.&lt;/p&gt;
&lt;p&gt;这里添加了&lt;code&gt;leaning_logs&lt;/code&gt;和&lt;code&gt;users&lt;/code&gt;, 者两个都是自己创建的应用程序，如何创建应用程序，之前已经介绍过了。&lt;/p&gt;
&lt;p&gt;在该文件中还可以添加第三方的应用程序，这里就添加了&lt;code&gt;bootstrap3&lt;/code&gt;应用程序，用于美化界面。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Application definition&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INSTALLED_APPS = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;django.contrib.admin&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;django.contrib.auth&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;django.contrib.contenttypes&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;django.contrib.sessions&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;django.contrib.messages&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;django.contrib.staticfiles&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 第三方应用程序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;bootstrap3&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 我的应用程序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;leaning_logs&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;users&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;创建了模型之后需要让 Django 修改数据库&lt;/strong&gt;，使其能够存储与模型相关的信息，因此需要再终端窗口中执行下面的命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;python manage.py makemigrations leaning_logs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python manage.py migrate&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;当每次修改“学习笔记”管理的数据时，都需要经过如下三个步骤：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改&lt;code&gt;models.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;对&lt;code&gt;leaning_logs&lt;/code&gt;调用&lt;code&gt;makemigrations&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;让 Django 迁移项目&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Django-管理网站&quot;&gt;&lt;a href=&quot;#Django-管理网站&quot; class=&quot;headerlink&quot; title=&quot;Django 管理网站&quot;&gt;&lt;/a&gt;Django 管理网站&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;为应用程序定义模型时，Django 提供的管理网站让你能够轻松的处理模型，网站的管理员才可使用管理网站，普通用户不能使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;创建超级用户&quot;&gt;&lt;a href=&quot;#创建超级用户&quot; class=&quot;headerlink&quot; title=&quot;创建超级用户&quot;&gt;&lt;/a&gt;创建超级用户&lt;/h4&gt;&lt;p&gt;Django 允许创建具备所有权限的用户—超级用户。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python manage.py createsuperuser&lt;/code&gt;, 根据提示输入用户名，邮箱地址，密码，确认密码&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Tip:&lt;/code&gt;Django 并不存储你输入的密码，存储的是你输入密码的派生出来的一个字符串，所以不用担心你的密码会泄露&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;向管理网站注册模型-leaning-logs-admin-py&quot;&gt;&lt;a href=&quot;#向管理网站注册模型-leaning-logs-admin-py&quot; class=&quot;headerlink&quot; title=&quot;向管理网站注册模型 leaning_logs/admin.py&quot;&gt;&lt;/a&gt;向管理网站注册模型 leaning_logs/admin.py&lt;/h4&gt;&lt;p&gt;Django 自动在管理网站中添加了一些模型，如 &lt;code&gt;User&lt;/code&gt; 和&lt;code&gt;Group&lt;/code&gt;，但对于我们创建的模型，必须手动进行注册。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.contrib import admin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from leaning_logs.models import Topic, Entry&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 注册模型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;admin.site.register(Topic)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;admin.site.register(Entry)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在浏览器中输入&lt;code&gt;localhost:8000/admin/&lt;/code&gt;，可以看到我们注册的模型了 Django 自动添加的模型。&lt;/p&gt;
&lt;h3 id=&quot;Django-shell&quot;&gt;&lt;a href=&quot;#Django-shell&quot; class=&quot;headerlink&quot; title=&quot;Django shell&quot;&gt;&lt;/a&gt;Django shell&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;输入一些数据后，就可以通过交互式终端去查看这些数据了，这里的中观交互环境称为 Django shell ，Django shell 是测试项目和排除故障的理想的方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;进入终端&lt;code&gt;python manage.py shell&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;通过 python 语法可以查看项目中的数据，例如想查看所有文章，可以这么写：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;topics = Topic.objects.all()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for topic int topics:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(topic.id, topic)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;每次修改模型后，需要重启 shell  才能看到修改的效果&lt;/strong&gt;。&lt;code&gt;window&lt;/code&gt;下退出 shell 的方法是&lt;code&gt;按下 ctrl+z 再按下回车键&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上准备工作和学习之后，就可创建出我们自己的学习笔记主页了！！&lt;/p&gt;
&lt;h3 id=&quot;创建网页：主页&quot;&gt;&lt;a href=&quot;#创建网页：主页&quot; class=&quot;headerlink&quot; title=&quot;创建网页：主页&quot;&gt;&lt;/a&gt;创建网页：主页&lt;/h3&gt;&lt;p&gt;使用Django 创建网页的过程通常分为三个阶段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义 URL&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;编写视图&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;编写模板&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;映射-URL，leaning-log-urls-py&quot;&gt;&lt;a href=&quot;#映射-URL，leaning-log-urls-py&quot; class=&quot;headerlink&quot; title=&quot;映射 URL，leaning_log/urls.py&quot;&gt;&lt;/a&gt;映射 URL，leaning_log/urls.py&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt; &lt;strong&gt;Django 2. 0 版本可以使用 path 模块替代了 url 模块&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 先导入相应的模块&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.contrib import admin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.urls import include, path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urlpatterns = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    path(&amp;apos;admin/&amp;apos;, admin.site.urls),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    path(&amp;apos;users/&amp;apos;, include(&amp;apos;users.urls&amp;apos;,namespace=&amp;apos;users&amp;apos;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    path(r&amp;apos;&amp;apos;, include(&amp;apos;leaning_logs.urls&amp;apos;,namespace=&amp;apos;leaning_logs&amp;apos;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;在-leaning-logs-和-user-下创建-urls-py-文件&quot;&gt;&lt;a href=&quot;#在-leaning-logs-和-user-下创建-urls-py-文件&quot; class=&quot;headerlink&quot; title=&quot;在 leaning_logs 和 user 下创建 urls.py 文件&quot;&gt;&lt;/a&gt;在 leaning_logs 和 user 下创建 urls.py 文件&lt;/h4&gt;&lt;p&gt;因为在leaning_log/urls.py 中定义了路径, 所以需要在对应的应用程序下也要创建对应的文件，否则会报错，提示找不不到该文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分析每一条 url ，如&lt;code&gt;url(r&amp;#39;^topics/(?P&amp;lt;topic_id&amp;gt;\d+)/$&amp;#39;, views.topic, name=&amp;#39;topic&amp;#39;),&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;开头的&lt;code&gt;r&lt;/code&gt;可以让python将接下来的字符串视为原始字符串，不会转义&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^&lt;/code&gt;表示字符串的开头，末尾的&lt;code&gt;$&lt;/code&gt;表示字符串的结束。主要匹配的就是这二者之间的内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;?P&amp;lt;topic_id&amp;gt;&lt;/code&gt;将匹配的值存储到 topic_id 中。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\d+&lt;/code&gt;表示包含在两个斜杠内的任意数字都匹配&lt;/li&gt;
&lt;li&gt;第二个参数是 url 对应的视图&lt;/li&gt;
&lt;li&gt;第三个参数是 给 url 指定的名称&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;--------------------------leaning_logs/urls.py 的内容如下----------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;&amp;quot;&amp;quot;定义leaning_logs的URL模式&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.conf.urls import url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from . import views&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app_name=&amp;apos;leaning_log&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urlpatterns = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 主页 , ^开始匹配之后的内容, $结束匹配之前的内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url(r&amp;apos;^$&amp;apos;, views.index, name=&amp;apos;index&amp;apos;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 显示所有的主题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url(r&amp;apos;^topics/$&amp;apos;, views.topics, name=&amp;apos;topics&amp;apos;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 特定主题的详细页面, ?P&amp;lt;topic_id&amp;gt;：将匹配的值存储在topic_id中，\d+：匹配任意数字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url(r&amp;apos;^topics/(?P&amp;lt;topic_id&amp;gt;\d+)/$&amp;apos;, views.topic, name=&amp;apos;topic&amp;apos;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 用于添加新主题的网页&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url(r&amp;apos;^new_topic/$&amp;apos;, views.new_topic, name=&amp;apos;new_topic&amp;apos;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 用于添加新条目的页面&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url(r&amp;apos;^new_entry/(?P&amp;lt;topic_id&amp;gt;\d+)/$&amp;apos;, views.new_entry, name=&amp;apos;new_entry&amp;apos;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 用于编辑条目的页面&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url(r&amp;apos;^edit_entry/(?P&amp;lt;entry_id&amp;gt;\d+)/$&amp;apos;, views.edit_entry, name=&amp;apos;edit_entry&amp;apos;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-------------------------- user/urls.py 的内容如下-------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.conf.urls import url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.contrib.auth.views import login&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from . import views&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app_name=&amp;apos;leaning_log&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urlpatterns = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 登录页面. template_name表示使用的是模板中的登录页面，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url(r&amp;apos;^login/$&amp;apos;, login, &amp;#123;&amp;apos;template_name&amp;apos;: &amp;apos;users/login.html&amp;apos;&amp;#125;, name=&amp;apos;login&amp;apos;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 退出登录.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url(r&amp;apos;^logout/$&amp;apos;, views.logout_view, name=&amp;apos;logout&amp;apos;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 注册页面.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url(r&amp;apos;^register/$&amp;apos;, views.register, name=&amp;apos;register&amp;apos;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;编写视图&quot;&gt;&lt;a href=&quot;#编写视图&quot; class=&quot;headerlink&quot; title=&quot;编写视图&quot;&gt;&lt;/a&gt;编写视图&lt;/h4&gt;&lt;p&gt;仅展示 leaning_logs/views.py，更多的内容可以查看源码。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.shortcuts import render&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.http import HttpResponseRedirect, Http404&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.urls import reverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.contrib.auth.decorators import login_required&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from .models import Topic, Entry&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from .forms import TopicForm, EntryForm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def index(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;学习笔记的主页&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return render(request, &amp;apos;leaning_logs/index.html&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@login_required&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def topics(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;显示所有的主题，login_required：加入登录验证，owner=request.user才能查看主题列表&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    topics = Topic.objects.filter(owner=request.user).order_by(&amp;apos;date_added&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 将结果存在context字典中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    context = &amp;#123;&amp;apos;topics&amp;apos;:topics&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return render(request, &amp;apos;leaning_logs/topics.html&amp;apos;, context)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@login_required&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def topic(request, topic_id):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;显示单个主题及其所有的条目&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    topic = Topic.objects.get(id=topic_id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 确认请求的主题属于当前用户&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if topic.owner != request.user:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        raise Http404&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # -date_added -表示按时间降序显示&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    entries = topic.entry_set.order_by(&amp;apos;-date_added&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    context = &amp;#123;&amp;apos;topic&amp;apos;:topic, &amp;apos;entries&amp;apos;:entries&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return render(request, &amp;apos;leaning_logs/topic.html&amp;apos;, context)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@login_required&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def new_topic(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;添加新主题&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if request.method != &amp;apos;POST&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 未提交数据：创建一个新表单&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        form = TopicForm()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # POST 提交的数据，对数据进行处理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        form =TopicForm(request.POST)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if form.is_valid():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # 先修改主题，再保存到数据库中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            new_topic = form.save(commit=False)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # 将当前修改主题的人变为新的话题所有者&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            new_topic.owner = request.user&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # 保存到数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            new_topic.save()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # 返回主页&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return HttpResponseRedirect(reverse(&amp;apos;leaning_logs:topics&amp;apos;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    context = &amp;#123;&amp;apos;form&amp;apos;:form&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return render(request, &amp;apos;leaning_logs/new_topic.html&amp;apos;, context)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@login_required&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def new_entry(request, topic_id):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;在特定的主题重添加条目&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    topic = Topic.objects.get(id=topic_id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if request.method != &amp;apos;POST&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 未提交数据，创建一个空表单&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        form = EntryForm()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # POST 提交的数据，对数据进行处理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        form = EntryForm(data = request.POST)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if form.is_valid():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            new_entry = form.save(commit=False)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            new_entry.topic = topic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            new_entry.save()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return HttpResponseRedirect(reverse(&amp;apos;leaning_logs:topic&amp;apos;, args=[topic_id]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    context = &amp;#123;&amp;apos;topic&amp;apos;:topic, &amp;apos;form&amp;apos;:form&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return render(request, &amp;apos;leaning_logs/new_entry.html&amp;apos;, context)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@login_required&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def edit_entry(request, entry_id):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;编辑既有的条目&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    entry = Entry.objects.get(id=entry_id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    topic = entry.topic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if topic.owner != request.user:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        raise Http404&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if request.method != &amp;apos;POST&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 初次请求，使用当前条目填充表单&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        form = EntryForm(instance=entry)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # POST提交的数据，对数据进行处理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        form = EntryForm(instance=entry, data=request.POST)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if form.is_valid():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            form.save()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return HttpResponseRedirect(reverse(&amp;apos;leaning_logs:topic&amp;apos;,args=[topic.id]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    context = &amp;#123;&amp;apos;entry&amp;apos;:entry, &amp;apos;topic&amp;apos;:topic, &amp;apos;form&amp;apos;:form&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return render(request, &amp;apos;leaning_logs/edit_entry.html&amp;apos;,context)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;编写模板&quot;&gt;&lt;a href=&quot;#编写模板&quot; class=&quot;headerlink&quot; title=&quot;编写模板&quot;&gt;&lt;/a&gt;编写模板&lt;/h4&gt;&lt;p&gt;仅写其中的一个模板—&lt;code&gt;leaning_logs/templates/leaning_logs/topic.html&lt;/code&gt;，更多内容查看项目。这块主要是 html 的相关知识&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% extends &amp;apos;leaning_logs/base.html&amp;apos; %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% block header %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;h3&amp;gt;&amp;#123;&amp;#123; topic&amp;#125;&amp;#125;&amp;lt;/h3&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% endblock header %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% block content %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;a href=&amp;quot;&amp;#123;% url &amp;apos;leaning_logs:new_entry&amp;apos; topic.id %&amp;#125;&amp;quot;&amp;gt;添加新的笔记 &amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;% for entry in entries %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div class=&amp;quot;panel panel-default&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;div class=&amp;quot;panel-heading&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;h4&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#123;&amp;#123; entry.date_added|date:&amp;apos;M d, Y H:i&amp;apos; &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;small&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;a href=&amp;quot;&amp;#123;% url &amp;apos;leaning_logs:edit_entry&amp;apos; entry.id %&amp;#125;&amp;quot;&amp;gt;编辑&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/small&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/h4&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;div class=&amp;quot;panel-body&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&amp;#123; entry.text|linebreaks &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;!-- panel --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;% empty %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    当前主题下还没有笔记哦~，快去记录你的人生吧！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;% endfor %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% endblock content %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;用户系统也可以看作一个应用程序，所以和上面的 leaning_logs 是一样的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;总结一下&quot;&gt;&lt;a href=&quot;#总结一下&quot; class=&quot;headerlink&quot; title=&quot;总结一下&quot;&gt;&lt;/a&gt;总结一下&lt;/h3&gt;&lt;p&gt;上面步骤写的有些乱，这里来整理一下用Python实现一个学习笔记需要的大概过程，具体可以查看书籍（书籍中实现有些问题，可以查看我实现提交的项目地址，&lt;a href=&quot;https://github.com/dongxi346/DjangoLearningLogs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leaning_log&lt;/a&gt;）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开发工具，开发环境肯定时必须的。&lt;/li&gt;
&lt;li&gt;创建一个虚拟环境—激活虚拟环境—在虚拟环境下安装 Django —– 在 Django 中创建项目—–还需要创建一个数据库用于存储数据—-查看项目（如果成功，这时候显示的是 Django 的欢迎页面）&lt;/li&gt;
&lt;li&gt;创建应用程序 —- 应用程序需要模型存数数据所以需要定义模型 —- 模型定义后需要激活才能使用所以需要激活模型—–由于修改了（创建）模型所以需要数据库的迁移&lt;/li&gt;
&lt;li&gt;创建管理网站管理模型（非必须），只是为了更好管理模型&lt;/li&gt;
&lt;li&gt;项目运行后，存储了一些数据，需要测试和排除故障时可以使用 &lt;code&gt;Django shell&lt;/code&gt;（非必须），只是为了更好排除故障和测试&lt;/li&gt;
&lt;li&gt;默认的欢迎主页肯定不是我们想要的，所以需要自己创建网页—-自己创建的网页，页面需要自己写，所以需要编写视图—-写完后需要告诉Django,让她返回我们自己写的视图，所以需要&lt;code&gt;url&lt;/code&gt;映射—–映射后显示什么呢？我们写的视图是没有数据，所以还需要创建&lt;code&gt;model&lt;/code&gt;，告诉视图你需要显示什么。（其他的页面创建也是这么一套结构下来）&lt;/li&gt;
&lt;li&gt;有时候重复的代码写的多了就会想到抽取出来，这里也不例外，你可以抽取出父类的视图，让所有的子视图去继承她即可拥有父类的所有功能。&lt;/li&gt;
&lt;li&gt;为了控制只有自己登录才能修改文章以及自己发布的文章自己能够记录下来，所有你可以创建一个用户的应用程序，从&lt;code&gt;步骤 3 开始&lt;/code&gt;，Django 有用户系统，我们可以使用她自带的会方便很多。&lt;/li&gt;
&lt;li&gt;部署到云服务器上，让别人也看看你写的内容有多酷！&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;学习笔记是《Python从入门到实践》书中的一个项目。书中会有一些错误，这里我已经修改过了，在&lt;a href=&quot;https://github.com/dongxi346/DjangoLearningLogs&quot;&gt;Github上的项目&lt;/a&gt;是可以运行的。&lt;/p&gt;
&lt;h3 id=&quot;项目需求&quot;&gt;&lt;a href=&quot;#项目需求&quot; class=&quot;headerlink&quot; title=&quot;项目需求&quot;&gt;&lt;/a&gt;项目需求&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;编写一个名为“学习笔记”Web应用程序，让用户能后记录感兴趣的主题，并在学习每个主题的过程中添加日志条目。“学习笔记”的主页对这个网站进行扫面，并邀请用户注册或登录。用户登录后，就可以创建主题，添加条目以及阅读既有条目。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;开发环境&quot;&gt;&lt;a href=&quot;#开发环境&quot; class=&quot;headerlink&quot; title=&quot;开发环境&quot;&gt;&lt;/a&gt;开发环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Django 2.0&lt;/li&gt;
&lt;li&gt;Python 3.5.2&lt;/li&gt;
&lt;li&gt;window 10 64位&lt;/li&gt;
&lt;li&gt;调试浏览器-Chrome  62.0.3202.89版本&lt;/li&gt;
&lt;li&gt;开发工具 Sublime Text 3&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Tip:&lt;/code&gt; 我这里是在虚拟环境下开发，所以要查看 Django 的版本需要先激活虚拟环境 , 然后输入&lt;code&gt;python -m django --version&lt;/code&gt;; 查看Python 版本只需在命令行窗口下输入&lt;code&gt;python&lt;/code&gt;即可查看。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://dongxi520.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>写在北京一周年</title>
    <link href="http://dongxi520.com/2017/12/19/%E5%86%99%E5%9C%A8%E5%8C%97%E4%BA%AC%E4%B8%80%E5%91%A8%E5%B9%B4/"/>
    <id>http://dongxi520.com/2017/12/19/写在北京一周年/</id>
    <published>2017-12-19T13:55:33.000Z</published>
    <updated>2017-12-19T13:58:56.683Z</updated>
    
    <content type="html">&lt;h4 id=&quot;来北京&quot;&gt;&lt;a href=&quot;#来北京&quot; class=&quot;headerlink&quot; title=&quot;来北京&quot;&gt;&lt;/a&gt;来北京&lt;/h4&gt;&lt;p&gt;去年12月19号，考完试后回了趟家，从家里到学校后就来北京报道了，在北京一家做手机主题的公司实习3500一个月，没来北京之前心里想着肯定是要在北京过一段时间的地下室生活了。来了北京之后有铁柱(也是在这家公司实习的朋友)，鑫哥(很好的学长)等人的照顾，庆幸没住到地下室，非常感谢这些朋友。&lt;/p&gt;
&lt;p&gt;实习做的是测试，原本是实习三个月，后来想着能够在公司多学一下技术就在公司多待了两个月，在公司学到很多知识，也见识了职场的斗争。在实习末段，由于一些原因，我选择了离开这家公司。公司的同事都特别好，技术总监更是对我关照有加，非常感谢这些朋友！&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;暂时离开北京&quot;&gt;&lt;a href=&quot;#暂时离开北京&quot; class=&quot;headerlink&quot; title=&quot;暂时离开北京&quot;&gt;&lt;/a&gt;暂时离开北京&lt;/h4&gt;&lt;p&gt;辞职后（虽然是实习生但是技术总监是希望我留下的），回到学校时应该时6月初，就剩一个月就毕业了，大四将近一整年都在外面过，好多朋友都没好好叙叙旧，喜欢的篮球都没怎么打。回到学校后就做毕设、有时间就和朋友聚聚。&lt;/p&gt;
&lt;p&gt;这时候已经不是春招了，来学校招聘的公司已经没有几个了，偶尔零星来一两个公司，但都不是自己的菜。也就释然了，好好放松等毕业后再找找（当时还是太年轻啊）。&lt;/p&gt;
&lt;p&gt;转眼就毕业了，当时再北京的房租还租着，所以毕业后就来了北京，这时候是6月30号。在合租屋边学习边找工作，一顿海投了简历，收到面试机会的少之又少。原因可能是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;自己是应届生，没工作经验，没人要&lt;/li&gt;
&lt;li&gt;已经过了招聘高峰期，公司人员已满&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;每次面试回来都做了总结，但是面试了几家还是没面试上。这时候已经是7月13号了。我是南方人，想着再北京再找几天要是没找到就去南方试试机会，正好一个我喜欢的女生在杭州那边，杭州互联网机会这几年也不错，于是，打包行李去了杭州。&lt;/p&gt;
&lt;p&gt;说实话，这时候口袋里真的快没钱了，去杭州住的是青年旅社20块一天的那种，团购了5天，在杭州的萧山那边住下了。杭州的招聘机会比北京少很多，而且有些培训机构一不小心就会掉入他们陷阱，在杭州海投了简历两天后才收到一个面试邀请，这家公司是创业公司，崇拜阿里文化。但是薪水给的不是很理想–转正3000，放弃后我去了趟嘉兴，那个女生在那边，找了她，吃了她做的饭，那是那段时间吃过最香的饭了。辗转了杭州几个地方，最后还是没找到合适的工作。&lt;/p&gt;
&lt;p&gt;有个上海朋友让我去上海那边碰碰运气，我思考了一个晚上，买了回程的票。找工作还是需要先自己有足够的能力，所以回来了。&lt;/p&gt;
&lt;h4 id=&quot;又回来北京&quot;&gt;&lt;a href=&quot;#又回来北京&quot; class=&quot;headerlink&quot; title=&quot;又回来北京&quot;&gt;&lt;/a&gt;又回来北京&lt;/h4&gt;&lt;p&gt;回来的原因也有一部分原因是北京的房租还得接着交啊，签的合同是一年，到期是今年的9月份。回到北京是7月21号，回来后，把出去面试的过程做了总结，并把自己薄弱的地方，做了很多功课。停止投递简历，在发疯似的做功课一周后感觉自己可以出去找工作试试了。&lt;/p&gt;
&lt;p&gt;这时候大概是7月25号，投出去的简历有了回复，收到2个面试，出去面了下，都没得到回复，这时候的心是慌的，慌的只有自己知道。房租快道要交的日期了，口袋真的没钱了，不敢和家里要钱，朋友问我工作怎样，我都只能慌张应答。好在26号面试了一家公司，公司方面可能也是有人要辞职，所以入职很快。入职的是小公司很多福利都没有，但是能够入职，我已经很感谢了。&lt;/p&gt;
&lt;h4 id=&quot;往后一段时间&quot;&gt;&lt;a href=&quot;#往后一段时间&quot; class=&quot;headerlink&quot; title=&quot;往后一段时间&quot;&gt;&lt;/a&gt;往后一段时间&lt;/h4&gt;&lt;p&gt;现在还在这家公司，公司小，能学到很多东西，技术总监人很nice，有什么问题他会告诉你思路。虽然现在每天都很辛苦，但是有奋斗的目标（倩儿）就不会太迷茫。感谢目前遇到的所有人，谢谢你们。&lt;/p&gt;
&lt;p&gt;我是做Android开发，目前掌握好 Android 开发是重点，这几天有空闲时间学了下 Python，也是想着多掌握一门技术，下次找工作会更有把握一些，加油！&lt;/p&gt;
&lt;p&gt;北京昌平区回龙观&lt;/p&gt;
&lt;p&gt;2017年12月19日21:36:42&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;来北京&quot;&gt;&lt;a href=&quot;#来北京&quot; class=&quot;headerlink&quot; title=&quot;来北京&quot;&gt;&lt;/a&gt;来北京&lt;/h4&gt;&lt;p&gt;去年12月19号，考完试后回了趟家，从家里到学校后就来北京报道了，在北京一家做手机主题的公司实习3500一个月，没来北京之前心里想着肯定是要在北京过一段时间的地下室生活了。来了北京之后有铁柱(也是在这家公司实习的朋友)，鑫哥(很好的学长)等人的照顾，庆幸没住到地下室，非常感谢这些朋友。&lt;/p&gt;
&lt;p&gt;实习做的是测试，原本是实习三个月，后来想着能够在公司多学一下技术就在公司多待了两个月，在公司学到很多知识，也见识了职场的斗争。在实习末段，由于一些原因，我选择了离开这家公司。公司的同事都特别好，技术总监更是对我关照有加，非常感谢这些朋友！&lt;/p&gt;
    
    </summary>
    
    
      <category term="总结" scheme="http://dongxi520.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Python数据可视化</title>
    <link href="http://dongxi520.com/2017/12/12/Python%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    <id>http://dongxi520.com/2017/12/12/Python数据可视化/</id>
    <published>2017-12-12T13:45:43.000Z</published>
    <updated>2017-12-15T14:22:48.286Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;数据可视化&lt;/strong&gt;指的是通过可视化表示来探索数据，它与&lt;strong&gt;数据挖掘&lt;/strong&gt;紧密相关，而数据挖掘是指使用代码来探索数据集的规律和关联，数据集可以是用一行代码就能表示的小型数字列表，也可以是数以吉字节的数据。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;matplotlib&lt;/code&gt;是一个数学绘图库，利用这个工具能够厚制作简单的图表。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pygal&lt;/code&gt;是专注于生成适合在数字设备上显示的图表，通过使用 Pygal 可在用户图表交互时突出元素以及调整其大小，还可以轻松地调整整个图表的尺寸，使其适合在微型智能手表或者矩形显示器上显示。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;安装matplotlib、Pygal&quot;&gt;&lt;a href=&quot;#安装matplotlib、Pygal&quot; class=&quot;headerlink&quot; title=&quot;安装matplotlib、Pygal&quot;&gt;&lt;/a&gt;安装matplotlib、Pygal&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;window 环境下安装 matplotlib&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先安装&lt;code&gt;Visual Studio&lt;/code&gt;，打开&lt;code&gt;https://dev.windows.com/&lt;/code&gt;,点击&lt;code&gt;Downloads&lt;/code&gt;，再查找&lt;code&gt;Visual Studio Community&lt;/code&gt;下载运行并安装&lt;/li&gt;
&lt;li&gt;访问&lt;code&gt;https:pypi.python.org/pypi/matplotlib&lt;/code&gt;,找到与你使用的Python版本匹配的扩展名为&lt;code&gt;.whl&lt;/code&gt;文件，下载之&lt;/li&gt;
&lt;li&gt;将下载的&lt;code&gt;.whl&lt;/code&gt;文件复制到你的项目文件夹，在该文件夹下打开命令窗口（&lt;code&gt;ctrl+鼠标右键，选择在此处打开命令窗口&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd python_work  python -m pip install --user matplotlib-1.4.3-cp35-none-win32.whl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安装完成后打开一个命令窗口，进入 python 环境，输入：&lt;code&gt;import matplotlib&lt;/code&gt;，如果没有报错则安装成功&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;windows 环境下安装 Pygal&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python -m pip install --user pygal==2.4&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;绘制折线图&quot;&gt;&lt;a href=&quot;#绘制折线图&quot; class=&quot;headerlink&quot; title=&quot;绘制折线图&quot;&gt;&lt;/a&gt;绘制折线图&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;绘制一个平方数序列1、4、9、16、25的图表&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 导入模块 pyplot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import matplotlib.pyplot as plt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 输入的数值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;input_value = [1, 2, 3, 4, 5]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 对应的输入数值的平方&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;squares = [1, 4, 9, 16, 25]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# plot 函数根据给定的参数去绘制图形，linewidth=5 表示线的粗细&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.plot(input_value, squares, linewidth=5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置图表标题和文字大小，并给坐标轴加上标签&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.title(&amp;quot;Square Numbers&amp;quot;, fontsize = 24)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.xlabel(&amp;quot;Value&amp;quot;, fontsize = 14)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.ylabel(&amp;quot;Square of Value&amp;quot;, fontsize = 14)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置刻度标记的字体大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.tick_params(axis = &amp;apos;both&amp;apos;, labelsize = 14)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;结果&lt;/li&gt;
&lt;li&gt;TODO: 上传图片&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plot(input_value, squares, linewidth=5)&lt;/code&gt;函数根据给定的参数去绘制图形，参数1：输入的内容，参数2：输入的内容对应的输出内容，参数3：线的粗细&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;使用-scatter-绘制散点图并设置样式&quot;&gt;&lt;a href=&quot;#使用-scatter-绘制散点图并设置样式&quot; class=&quot;headerlink&quot; title=&quot;使用 scatter() 绘制散点图并设置样式&quot;&gt;&lt;/a&gt;使用 scatter() 绘制散点图并设置样式&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;绘制一个平方数序列为1~1000以内数平方根的散点图&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import matplotlib.pyplot as plt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1~1000 的数值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x_values = list(range(1,1000))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 对应值的结果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y_values = [x**2 for x in x_values]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# s 表示线的粗细, edgecolor=&amp;apos;none&amp;apos;表示删除数据点的轮廓, c = &amp;apos;red&amp;apos; 修改线条颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# plt.scatter(x_values, y_values, s = 40)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# plt.scatter(x_values, y_values, edgecolor=&amp;apos;none&amp;apos;, s = 40)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# plt.scatter(x_values, y_values, c = &amp;apos;red&amp;apos;, edgecolor=&amp;apos;none&amp;apos;, s = 40)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 颜色值还可以用RGB表示，值越接近0，指定的颜色越深，越接近1指定的颜色越浅&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# plt.scatter(x_values, y_values, c = (0, 0, 0.8), edgecolor=&amp;apos;none&amp;apos;, s = 40)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 将参数c设置成y值列表，用参数cmap告诉pyplot使用哪个颜色映射&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# c = y_values, cmap = plt.cm.Blues 将y值较小的点显示为浅蓝色，将 y 值较大的设置为深蓝色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.scatter(x_values, y_values, c = y_values, cmap = plt.cm.Blues,  edgecolor=&amp;apos;none&amp;apos;, s = 40)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置图表标签，坐标轴标签&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.title(&amp;quot;Square Numbers&amp;quot;, fontsize = 24)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.xlabel(&amp;quot;Value&amp;quot;, fontsize = 14)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.ylabel(&amp;quot;Square on Value &amp;quot;, fontsize = 14)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置标记刻度的大小,axis = &amp;apos;both&amp;apos;,x轴和y轴的刻度为粗体&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.tick_params(axis = &amp;apos;both&amp;apos;, which = &amp;apos;major&amp;apos;, labelsize = 14)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置每个坐标轴的取值范围，x轴的范围为(0~1100),y轴的范围为(0, 1100000)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.axis([0, 1100, 0, 1100000])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 展示&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# plt.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 自动保存图片,参数1：文件名（下面这么写是保存在当前文件的目录下），参数2：将图表多余的空白区域裁剪掉&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.savefig(&amp;apos;squares_plot.png&amp;apos;, bbox_inches = &amp;apos;tight&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;结果&lt;/li&gt;
&lt;li&gt;TODO: 上传图片&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scatter(x_values, y_values, c = y_values, cmap = plt.cm.Blues,  edgecolor=&amp;#39;none&amp;#39;, s = 40)&lt;/code&gt;，参数1：输入值，参数2：输出值；参数 3 和参数 4 ：将参数 3 的值较小的点显示为浅蓝色，将参数 3 的值较大的设置为深蓝色；参数5：none 表示删除数据点的轮廓，参数6：线的粗细，默认为20。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tick_params(axis = &amp;#39;both&amp;#39;, which = &amp;#39;major&amp;#39;, labelsize = 14)&lt;/code&gt;，参数1：表示 x 轴 和 y 轴设置为粗体，参数2：值为 ‘major’、’minor’、’both’，分别代表设置主刻度线、副刻度线以及同时设置，默认值为’major’，参数3：刻度线标签的字体大小&lt;/li&gt;
&lt;li&gt;&lt;code&gt;axis([0, 1100, 0, 1100000])&lt;/code&gt;，参数1、2：X 轴的坐标范围，参数3、4：Y 轴的坐标范围&lt;/li&gt;
&lt;li&gt;&lt;code&gt;savefig(&amp;#39;squares_plot.png&amp;#39;, bbox_inches = &amp;#39;tight&amp;#39;)&lt;/code&gt;，参数1：保存的路径，参数2：将图表多余的空白区域裁剪掉&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;随机漫步&quot;&gt;&lt;a href=&quot;#随机漫步&quot; class=&quot;headerlink&quot; title=&quot;随机漫步&quot;&gt;&lt;/a&gt;随机漫步&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;每次行走路线完全是随机的，没有明确的方向，结果是由一行一列交叉点随机决策决定的。&lt;/p&gt;
&lt;p&gt;主要代码有 random_walk.py 和 rw_visual.py&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# random_walk.py 代码如下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from random import choice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class RandomWalk():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;一个生成随机漫步数据的类&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self, num_points = 5000):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;初始化随机漫步的属性&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.num_points = num_points&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 所有随机漫步都始于（0，0）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.x_values = [0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.y_values = [0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def fill_walk(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;计算漫步包含的所有点&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 不断漫步，直到列表的达到指定的长度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        while  len(self.x_values) &amp;lt; self.num_points:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	# choice([1,-1]):表示要么向右走1，要么向左走-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            x_direction = choice([1, -1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # choice([1,-1]：随机选择一个0~4之间的整数(包含0)，告诉Python沿指定的方向走多远&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            x_distance = choice([0, 1, 2, 3, 4])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # 移动的方向 * 距离，以确定沿 x 轴和 y 轴移动的距离，x_step为正表示右移，为负表示左移，为0表示垂直移动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            x_step = x_direction * x_distance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			# y 轴同理 x 轴，方向为上下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            y_direction = choice([1, -1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            y_distance = choice([0, 1, 2, 3, 4])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            y_step = y_direction * y_distance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # 拒绝原地踏步&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if x_step == 0 and y_step == 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                continue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # 计算下一个点的x值和y值，将 x_values[-1] 最后一个值 + x_step 作为下一个 x 值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            next_x = self.x_values[-1] + x_step&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            next_y = self.y_values[-1] + y_step&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.x_values.append(next_x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.y_values.append(next_y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# rw_visual.py 的代码如下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import matplotlib.pyplot as plt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from random_walk import RandomWalk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 只要程序属于活动状态，就不断的模拟随机漫步&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;while True:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 创建一个RandomWalk实例，并将其包含的点都绘制出来&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 增加点数,运行时间也会变长&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # rw = RandomWalk(50000)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rw = RandomWalk()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 计算漫步包含的所有点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rw.fill_walk()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 设置窗口的尺寸&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # plt.figure(figsize = (10, 6))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 传递屏幕分辨率&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plt.figure(dpi = 128, figsize = (10, 6))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    point_numbers = list(range(rw.num_points))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plt.scatter(rw.x_values, rw.y_values, c = point_numbers, cmap = plt.cm.Blues, edgecolor=&amp;apos;none&amp;apos;, s = 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 突出起点和终点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plt.scatter(0, 0, c = &amp;apos;green&amp;apos;, edgecolor=&amp;apos;none&amp;apos;, s = 100)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plt.scatter(rw.x_values[-1], rw.y_values[-1], c = &amp;apos;red&amp;apos;, edgecolor=&amp;apos;none&amp;apos;, s = 100)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 隐藏坐标轴&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plt.axes().get_xaxis().set_visible(False)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plt.axes().get_yaxis().set_visible(False)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plt.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # plt.savefig(&amp;apos;rw_visual.png&amp;apos;, bbox_inches = &amp;apos;tight&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 关闭matplotlib时会提示是否要再模拟一次，输入y可以再运行一次，输入n则退出&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    keep_running = input(&amp;quot;Make another walk ? (y/n): &amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if keep_running == &amp;apos;n&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;隐藏坐标轴：x 轴：&lt;code&gt;plt.axes().get_xaxis().set_visible(False)&lt;/code&gt;，y 轴：&lt;code&gt;plt.axes().get_yaxis().set_visible(False)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置分辨率：&lt;code&gt;plt.figure(dpi = 128, figsize = (10, 6))&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;同时掷两个面数相同的骰子，掷1000次骰子每次得到的值的概率&quot;&gt;&lt;a href=&quot;#同时掷两个面数相同的骰子，掷1000次骰子每次得到的值的概率&quot; class=&quot;headerlink&quot; title=&quot;同时掷两个面数相同的骰子，掷1000次骰子每次得到的值的概率&quot;&gt;&lt;/a&gt;同时掷两个面数相同的骰子，掷1000次骰子每次得到的值的概率&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;用直方图展示掷 2 个骰子出现点数的值的概率&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建骰子类&lt;/li&gt;
&lt;li&gt;循环得到模拟掷 1000 次骰子各个值的数量&lt;/li&gt;
&lt;li&gt;用 Pygal 可视化展示直方图&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;创建骰子对象&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1. 创建一个骰子类，用于模拟掷出去的骰子点数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from random import randint&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Die():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;表示一个骰子的类&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self, num_sides = 6):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;骰子默认为6面&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.num_sides = num_sides&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def roll(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;返回一个位于1和骰子面数之间的随机值&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return randint(1, self.num_sides)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;分析数据并展示结果&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import pygal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from die import Die&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 创建两个D6骰子&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;die_1 = Die()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;die_2 = Die()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 掷几次骰子，并将结果存储在一个列表中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;results = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for roll_num in range(1000):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result = die_1.roll() + die_2.roll()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    results.append(result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 分析结果，得到掷一次（2个）骰子的和，存在集合中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;frequencies = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max_result = die_1.num_sides + die_2.num_sides&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for value in range(2, max_result + 1):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    frequency = results.count(value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    frequencies.append(frequency)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 对结果进行可视化&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hist = pygal.Bar()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hist.title = &amp;quot;Results of rolling on D6 1000 times.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hist.x_labels = [&amp;apos;2&amp;apos;, &amp;apos;3&amp;apos;, &amp;apos;4&amp;apos;, &amp;apos;5&amp;apos;, &amp;apos;6&amp;apos;, &amp;apos;7&amp;apos;, &amp;apos;8&amp;apos;, &amp;apos;10&amp;apos;, &amp;apos;11&amp;apos;, &amp;apos;12&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hist.x_title = &amp;quot;Results&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hist.y_title = &amp;quot;Frequency of Result&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 颜色块对应的区域表示的含义&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hist.add(&amp;apos;D6 + D6&amp;apos;, frequencies)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 将图表渲染为一个SVG文件，这种文件的扩展名必须为svg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hist.render_to_file(&amp;apos;die_visual.svg&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(frequencies)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pygal.Bar()&lt;/code&gt;：将结果可视化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hist.render_to_file(&amp;#39;die_visual.svg&amp;#39;)&lt;/code&gt;：将图表渲染为一个 svg 文件且文件扩展名必须为 svg &lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;同时掷两个面数不同的骰子&quot;&gt;&lt;a href=&quot;#同时掷两个面数不同的骰子&quot; class=&quot;headerlink&quot; title=&quot;同时掷两个面数不同的骰子&quot;&gt;&lt;/a&gt;同时掷两个面数不同的骰子&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;创建的骰子类的点数不同&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;x 轴的范围不一样&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;提取CSV文件的数据，让数据可视化&quot;&gt;&lt;a href=&quot;#提取CSV文件的数据，让数据可视化&quot; class=&quot;headerlink&quot; title=&quot;提取CSV文件的数据，让数据可视化&quot;&gt;&lt;/a&gt;提取CSV文件的数据，让数据可视化&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;CSV 文件的内容是一系列&lt;code&gt;以逗号分割的值&lt;/code&gt;，测试的文件名为&lt;code&gt;death_valley_2014.csv&lt;/code&gt;，&lt;a href=&quot;https://github.com/dongxi346/PythonSelfStudy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;可在该项目下找到&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import csv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from datetime import datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from matplotlib import pyplot as plt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 从文件中获取最高气温和最低气温&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filename = &amp;apos;death_valley_2014.csv&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;with open(filename) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reader = csv.reader(f)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dates, highs, lows = [], [], []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for row in reader:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	# 捕捉异常，因为文件中有一天是没有数据的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            current_date = datetime.strptime(row[0], &amp;quot;%Y-%m-%d&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            high = int(row[1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            low = int(row[3])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        except Exception as e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(current_date, &amp;apos;missing data&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            highs.append(high)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dates.append(current_date)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            lows.append(low)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	# 屏幕设置 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fig = plt.figure(dpi = 128, figsize = (10, 6))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 绘制线&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plt.plot(dates, highs, c = &amp;apos;red&amp;apos;, alpha = 0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plt.plot(dates, lows, c = &amp;apos;blue&amp;apos;, alpha = 0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 最高温和最低温之间的区域颜色着色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plt.fill_between(dates, highs, lows, facecolor = &amp;apos;blue&amp;apos;, alpha = 0.1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 设置图表标签，坐标轴标签&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plt.title(&amp;quot;Daily high and low temperature - 2014\nDeath Valley, CA&amp;quot;, fontsize = 20)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plt.xlabel(&amp;apos;&amp;apos;, fontsize = 16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 绘制倾斜的日期&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fig.autofmt_xdate()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plt.ylabel(&amp;quot;Temperature(F)&amp;quot;, fontsize = 16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 设置标记刻度的大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plt.tick_params(axis = &amp;apos;both&amp;apos;, which = &amp;apos;major&amp;apos;, labelsize = 16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plt.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;读取 CSV 文件：&lt;code&gt;csv.reader(f)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;时间格式化：&lt;code&gt;datetime.strptime(row[0], &amp;quot;%Y-%m-%d&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;两个插值之间绘制颜色：&lt;code&gt;plt.fill_between(dates, highs, lows, facecolor = &amp;#39;blue&amp;#39;, alpha = 0.1)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;绘制 X 轴的日期为倾斜：&lt;code&gt;fig.autofmt_xdate()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;制作世界人口地图&quot;&gt;&lt;a href=&quot;#制作世界人口地图&quot; class=&quot;headerlink&quot; title=&quot;制作世界人口地图&quot;&gt;&lt;/a&gt;制作世界人口地图&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;在世界地图上显示各个国家 2010 年的人口数，通过不同颜色来区别，用国别码表示国家，数字表示人口数量。&lt;/p&gt;
&lt;p&gt;数据可以去&lt;a href=&quot;http://data.okfn.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Open Knowledge&lt;/a&gt;寻找，这里用到的文件名是&lt;code&gt;population.json&lt;/code&gt;,可在&lt;a href=&quot;https://github.com/dongxi346/PythonSelfStudy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;项目地址&lt;/a&gt;中找到&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 获取国别码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 通过 pygal.i18n 模块导入，字典 COUNITRIES 中包含了键和值分别为国别码和国家名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from pygal.i18n import COUNTRIES&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def get_country_code(country_name):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;根据指定的国家，返回Pygal使用的两个字母的国别码&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for code, name in COUNTRIES.items():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if name == country_name:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 如果没有找到指定的国家，则返回None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return None&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 获取国别码对应国家的人口数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pygal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 高亮主题，用于更好的区别各个国家的人口数，LightColorizedStyle作为基本样式，RotateStyle用于设置颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from pygal.style import LightColorizedStyle as LCS, RotateStyle as RS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from country_codes import get_country_code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 将数据加载到列表中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filename = &amp;apos;population_data.json&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;with open(filename) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pop_data = json.load(f)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 创建一个包含人口数量的字典&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cc_populations = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for pop_dict in pop_data:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if pop_dict[&amp;apos;Year&amp;apos;] == &amp;apos;2010&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        country_name = pop_dict[&amp;apos;Country Name&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 将包含小数点的字符串转为整数，这个数字有可能是人口数据缺失导致，可以先将字符串转为浮点数，再将浮点数转为整数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        population = int(float(pop_dict[&amp;apos;Value&amp;apos;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 获取到国别码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        code = get_country_code(country_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if code:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # 如果返回了国别码，则将国别码和人口数量作为键和值填充字典&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cc_populations[code] = population&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 根据人口数量将所有国家分成三组&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cc_pops_1, cc_pops_2, cc_pops_3 = &amp;#123;&amp;#125;, &amp;#123;&amp;#125;, &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for cc, pop in cc_populations.items():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if pop &amp;lt; 10000000:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cc_pops_1[cc] = pop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    elif pop &amp;lt; 1000000000:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cc_pops_2[cc] = pop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cc_pops_3[cc] = pop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 看看每组包含多少个国家&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(len(cc_pops_1), len(cc_pops_2), len(cc_pops_3))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置颜色，和基本样式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wm_style = RS(&amp;apos;#336699&amp;apos;, base_style=LCS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 绘制世界地图&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wm = pygal.Worldmap(style=wm_style)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wm.title = &amp;apos;World Population in 2010, by Country&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wm.add(&amp;apos;0-10m&amp;apos;, cc_pops_1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wm.add(&amp;apos;10m-1bn&amp;apos;, cc_pops_2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wm.add(&amp;apos;&amp;gt;1bn&amp;apos;, cc_pops_3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 输出为svg为文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wm.render_to_file(&amp;apos;world_population.svg&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;读取 json 数据 ：&lt;code&gt;json.load(f)&lt;/code&gt;，参数为文件名&lt;/li&gt;
&lt;li&gt;绘制世界地图：&lt;code&gt;pygal.Worldmap(style=wm_style)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;获取Web应用程序接口（API），让数据可视化&quot;&gt;&lt;a href=&quot;#获取Web应用程序接口（API），让数据可视化&quot; class=&quot;headerlink&quot; title=&quot;获取Web应用程序接口（API），让数据可视化&quot;&gt;&lt;/a&gt;获取Web应用程序接口（API），让数据可视化&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;使用&lt;code&gt;GitHub&lt;/code&gt;的API来请求有关该网站中 Python 项目的信息，然后使用 Pygal 生成交互可视化的图形界面，用以展示这些 Python 项目受欢迎的程度&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;获取 API&lt;/li&gt;
&lt;li&gt;安装 requests&lt;/li&gt;
&lt;li&gt;处理返回的结果，分析出我们需要的数据项&lt;/li&gt;
&lt;li&gt;Pygal 根据数据绘图展示&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;获取API&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;去GitHub主页的底部找到API，之后能不能找到你要的内容就看英文水平了（可以安装谷歌翻译插件，一键翻译…）,这里用到的API地址为：&lt;code&gt;https://api.github.com/search/repositories?q=language:python&amp;amp;sort=stars&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装 requests&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;pip install --user requests&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;处理返回的结果，分析出我们需要的数据项&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;再安装一个json数据查看的插件，找出你需要的字段，例如这里需要拿到：&lt;code&gt;Name&lt;/code&gt;,&lt;code&gt;Owner&lt;/code&gt;,&lt;code&gt;Stars&lt;/code&gt;,&lt;code&gt;Repository&lt;/code&gt;,&lt;code&gt;Description&lt;/code&gt;,分别对应的是，仓库的名称、作者、星数、链接、描述&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pygal 根据数据绘图展示，代码如下&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import requests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pygal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from pygal.style import LightColorizedStyle as LCS, LightenStyle as LS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 执行API调用，并存储响应&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;url = &amp;apos;https://api.github.com/search/repositories?q=language:python&amp;amp;sort=stars&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r = requests.get(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 200 表示访问成功&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;Status code:&amp;quot;, r.status_code)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 将API响应存储在一个变量中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response_dict = r.json()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;Total repositores:&amp;quot;, response_dict[&amp;apos;total_count&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 探索有关仓库的信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;repo_dicts = response_dict[&amp;apos;items&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;Repositores returned:&amp;quot;, len(repo_dicts))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 横纵坐标值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;names, stars = [], []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 研究第一个仓库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;repo_dict = repo_dicts[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;\nSelected information about each repository:&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;names, plot_dicts = [], []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for repo_dict in repo_dicts:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	# 得到横坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    names.append(repo_dict[&amp;apos;name&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	# 对每个项目用字典来存储自定义提示的内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plot_dict = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;value&amp;apos;: repo_dict[&amp;apos;stargazers_count&amp;apos;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;label&amp;apos;: repo_dict[&amp;apos;description&amp;apos;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;xlink&amp;apos;: repo_dict[&amp;apos;html_url&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	# 得到纵坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plot_dicts.append(plot_dict)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置颜色值，基本样式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_style = LS(&amp;apos;#333366&amp;apos;, base_style = LCS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_config = pygal.Config()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 创建Bar实例需要的实参，这里通过关键字传递&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_config.x_label_rotation = 45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_config.show_legend = False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_config.title_font_size = 24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_config.label_font_size = 14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_config.major_label_font_size = 18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 将较长的项目名缩短为15个字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_config.truncate_label = 15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 隐藏图表中的隐藏线&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_config.show_y_guides = False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 设置图表的自定义宽度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_config.width = 1000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chart = pygal.Bar(my_config, style = my_style)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# chart = pygal.Bar(style = my_style, x_label_rotation = 45, show_legend = False)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chart.title = &amp;quot;GitHub 上点赞最多的仓库&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chart.x_labels = names&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chart.add(&amp;apos;&amp;apos;, plot_dicts)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chart.render_to_file(&amp;apos;python_repos.svg&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;配置 Pygal 的数据：&lt;code&gt;my_config = pygal.Config()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;使用配置的参数展示直方图：&lt;code&gt;chart = pygal.Bar(my_config, style = my_style)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;获取网络数据：&lt;code&gt;requests.get(url)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;可以用字典来存储自定义提示的内容&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;数据可视化&lt;/strong&gt;指的是通过可视化表示来探索数据，它与&lt;strong&gt;数据挖掘&lt;/strong&gt;紧密相关，而数据挖掘是指使用代码来探索数据集的规律和关联，数据集可以是用一行代码就能表示的小型数字列表，也可以是数以吉字节的数据。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;matplotlib&lt;/code&gt;是一个数学绘图库，利用这个工具能够厚制作简单的图表。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pygal&lt;/code&gt;是专注于生成适合在数字设备上显示的图表，通过使用 Pygal 可在用户图表交互时突出元素以及调整其大小，还可以轻松地调整整个图表的尺寸，使其适合在微型智能手表或者矩形显示器上显示。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://dongxi520.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python小游戏-《外星人入侵》</title>
    <link href="http://dongxi520.com/2017/12/10/Python%E5%B0%8F%E6%B8%B8%E6%88%8F-%E3%80%8A%E5%A4%96%E6%98%9F%E4%BA%BA%E5%85%A5%E4%BE%B5%E3%80%8B/"/>
    <id>http://dongxi520.com/2017/12/10/Python小游戏-《外星人入侵》/</id>
    <published>2017-12-10T03:58:04.000Z</published>
    <updated>2017-12-10T03:59:29.146Z</updated>
    
    <content type="html">&lt;h3 id=&quot;《外星人入侵》游戏&quot;&gt;&lt;a href=&quot;#《外星人入侵》游戏&quot; class=&quot;headerlink&quot; title=&quot;《外星人入侵》游戏&quot;&gt;&lt;/a&gt;《外星人入侵》游戏&lt;/h3&gt;&lt;h4 id=&quot;游戏介绍&quot;&gt;&lt;a href=&quot;#游戏介绍&quot; class=&quot;headerlink&quot; title=&quot;游戏介绍&quot;&gt;&lt;/a&gt;游戏介绍&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;在游戏中，玩家控制着一艘最初出现在屏幕底部中央的飞船，玩家可以使用键盘中的左右键控制飞船的左右移动，还可以用空格键进行射击。&lt;/p&gt;
&lt;p&gt;游戏开始时，一群外星人出现在天空中，他们在屏幕中往下移动，玩家的任务就是射杀这些外星人。玩家将所有外星人击杀后，玩家等级升一级并且在屏幕上方将出现新的一群外星人，他们的移动速度更快。玩家每次击杀一个外星人都记录一个分数，游戏结束后记录每局游戏的最高分，每次游戏开始时将最高分显示在屏幕中央。&lt;/p&gt;
&lt;p&gt;只要有外星人撞到了玩家的飞船或者到达了底部，玩家就损失一艘飞船，玩家损失3艘飞船后，游戏结束！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;需要一个游戏窗口，显示飞船图片，显示外星人图片，显示分数，等级&lt;/li&gt;
&lt;li&gt;控制飞船：左右移动、空格射击&lt;/li&gt;
&lt;li&gt;控制外星人：下移速度&lt;/li&gt;
&lt;li&gt;控制子弹：子弹的速度、方向&lt;/li&gt;
&lt;li&gt;记录玩家数据：等级、最高分、当前分、剩余的飞船数&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;使用工具&quot;&gt;&lt;a href=&quot;#使用工具&quot; class=&quot;headerlink&quot; title=&quot;使用工具&quot;&gt;&lt;/a&gt;使用工具&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Pygame：用于等任务绘制图像&lt;/li&gt;
&lt;li&gt;Sublime Text 3：文本编辑器，用于开发超级爽！&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;工具的安装&quot;&gt;&lt;a href=&quot;#工具的安装&quot; class=&quot;headerlink&quot; title=&quot;工具的安装&quot;&gt;&lt;/a&gt;工具的安装&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 安装 Pygame &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python -m pip install --user pygame-1.9.2a0-cp35-none-win32.whl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;后面的是版本号，可以去下载对应的版本，地址是&lt;a href=&quot;https://bitbucket.org/pygame/downloads/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://bitbucket.org/pygame/downloads/&lt;/a&gt;，找到对应的系统版本&lt;/li&gt;
&lt;li&gt;Sublime Text 3安装就简单了，自行解决。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;编码前的分析&quot;&gt;&lt;a href=&quot;#编码前的分析&quot; class=&quot;headerlink&quot; title=&quot;编码前的分析&quot;&gt;&lt;/a&gt;编码前的分析&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;系统的设置管理：屏幕参数的初始化、飞船数据的初始化、外星人数据的初始化、子弹数据的初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;编码【直接看GitHub源码地址】————————————&quot;&gt;&lt;a href=&quot;#编码【直接看GitHub源码地址】————————————&quot; class=&quot;headerlink&quot; title=&quot;编码【直接看GitHub源码地址】————————————-&quot;&gt;&lt;/a&gt;编码【&lt;a href=&quot;&quot;&gt;直接看GitHub源码地址&lt;/a&gt;】————————————-&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;程序入口&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;每个程序都有程序的入口，Python 游戏也不例外，以下是程序的入口文件&lt;code&gt;aliens_invasion.py&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pygame&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import game_functions as gf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from settings import Settings&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from ship import Ship&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from alien import Alien&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from pygame.sprite import Group&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from game_stats import GameStats&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from button import Button&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from scoreboard import Scoreboard&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def run_game():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 初始化游戏并创建屏幕对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pygame.init()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ai_settings = Settings() ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 设置屏幕参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    screen = pygame.display.set_mode((ai_settings.screen_width, ai_settings.screen_height))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	# 设置游戏名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pygame.display.set_caption(&amp;quot;Alien Invasion&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 创建paly按钮&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    play_button = Button(ai_settings, screen, &amp;quot;Play&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 在屏幕上创建飞船&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ship = Ship(ai_settings, screen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 将子弹存储在一个编组中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bullets = Group()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 将外星人存储在一个编组中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    aliens = Group()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 创建外星人群&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gf.create_fleet(ai_settings,screen,ship,aliens)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 设置背景色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bg_color = (ai_settings.bg_color)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 创建一个外星人实例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alien = Alien(ai_settings, screen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 创建一个用于存储游戏统计的实例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stats = GameStats(ai_settings)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 创建记分牌&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sb = Scoreboard(ai_settings, screen, stats)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 开始游戏的主要循环&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    while True:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 监听键盘和鼠标事件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        gf.check_events(ai_settings, screen, stats, sb, play_button, ship, aliens, bullets)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		# 根据游戏状态来刷新屏幕里面的内容，游戏有开始和结束状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if stats.game_active:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # 刷新飞船的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ship.update()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # 更新子弹的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            gf.update_bullets(ai_settings, screen, stats, sb, ship, aliens, bullets)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # 更新外星人的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            gf.update_aliens(ai_settings, screen, stats, sb, ship, aliens, bullets)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 刷新屏幕&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        gf.update_screen(ai_settings, screen, stats, sb, ship, aliens, bullets, play_button)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 函数调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;run_game()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;设置管理&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;总的数据管理中心，便于数据的控制，代码如下&lt;code&gt;setting.py&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Settings():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    存储《外星人入侵》的所有的设置的类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	1. 屏幕设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	2. 飞船设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	3. 子弹设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	4. 外星人设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	5. 游戏初始化时参数的默认设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	6. 游戏升级后的参数修改设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot; 初始化游戏的设置 &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 屏幕设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.screen_width = 1200&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.screen_height = 600&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.bg_color = (230, 230, 230)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 飞船的设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 一开始玩家拥有的飞船数量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.ship_limit = 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 子弹的设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.bullet_width = 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.bullet_hight = 15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.bullet_color = 60, 60, 60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 子弹的默认数量（一次只能发射的个数）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.bullets_allowed = 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 外星人的设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.fleet_drop_speed = 20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 以什么样的速度加快游戏节奏&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.speedup_scale = 1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 击杀外星人点数的提高速度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.score_scale = 1.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.initialize_dynamic_settings()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def initialize_dynamic_settings(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;初始化游戏进行而变化的设置&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 飞船的移动像素为1.5一次&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.ship_speed_factor = 1.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 子道的移动像素为3一次&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.bullet_speed_factor = 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 外星人的移动像素为1一次&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.alien_speed_factor = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # fleet_direction 为 1 表示向右移，为-1表示向左移&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.fleet_direction = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 计分&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.alien_points = 50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def increase_speed(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;提高速度设置和外星人点数&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 提高飞船的速度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.ship_speed_factor *= self.speedup_scale&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 提高子弹的速度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.bullet_speed_factor *= self.speedup_scale&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 提高外星人的速度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.alien_speed_factor *= self.speedup_scale&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		# 提高击杀一只外星人分数的速度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.alien_points = int(self.alien_points * self.score_scale)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;各个对象&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;游戏中需要有飞船对象&lt;code&gt;ship.py&lt;/code&gt;，外星人对象&lt;code&gt;alien.py&lt;/code&gt;，子弹对象&lt;code&gt;bullet.py&lt;/code&gt;，UI显示对象&lt;code&gt;scoreboard.py&lt;/code&gt;，游戏数据统计对象&lt;code&gt;game_stats.py&lt;/code&gt;，开始游戏按钮对象&lt;code&gt;button.py&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 飞船对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pygame&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from pygame.sprite import Sprite&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Ship(Sprite):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    飞船类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	1. 飞船数据初始化&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	2. 显示飞船&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	3. 更新飞船移动后的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self, ai_settings, screen):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot; 初始化飞行并设置其初始位置 &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super(Ship, self).__init__()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.screen = screen&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.ai_settings = ai_settings&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 加载飞船图像并获取其外界矩形&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.image = pygame.image.load(&amp;apos;images/ship.bmp&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.rect = self.image.get_rect()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.screen_rect = screen.get_rect()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 将每艘飞船放在屏幕底部中央&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.rect.centerx = self.screen_rect.centerx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.rect.bottom = self.screen_rect.bottom&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 在飞船的属性center中存储小数值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.center = float(self.rect.centerx)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 移动标志&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.moving_right = False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.moving_left = False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def update(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;根据移动标志调整飞船的位置&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 更新飞船的center值，而不是rect. 不让飞船移出屏幕边界&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if self.moving_right and self.rect.right &amp;lt; self.screen_rect.right:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.center += self.ai_settings.ship_speed_factor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if self.moving_left and self.rect.left &amp;gt; 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.center -= self.ai_settings.ship_speed_factor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 根据self.center更新rect对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.rect.centerx = self.center&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def blitme(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot; 在指定位置绘制飞船&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.screen.blit(self.image, self.rect)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def center_ship(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;让飞船在屏幕上居中&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.center = self.screen_rect.centerx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 外星人对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pygame&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from pygame.sprite import Sprite&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Alien(Sprite):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    表示外星人的类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	1. 主要有外星人数据的初始化&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	2. 绘制外星人的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	3. 更新移动外星人后的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	4. 检测外星人是否到达屏幕边缘&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self, ai_settings, screen):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&amp;quot;&amp;quot;&amp;quot;初始化外星人需要的数据&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super(Alien, self).__init__()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.screen = screen&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.ai_settings = ai_settings&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 加载外星人图像，并设置其rect属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.image = pygame.image.load(&amp;apos;images/alien.bmp&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.rect = self.image.get_rect()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 每个外星人最初都在左上角附近&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.rect.x = self.rect.width&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.rect.y = self.rect.height&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 存储外星人的准确位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.x = float(self.rect.x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def blitme(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;在指定位置绘制外星人&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.screen.blit(self.image, self.rect)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def update(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;向右移动外星人&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.x += (self.ai_settings.alien_speed_factor * self.ai_settings.fleet_direction)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.rect.x = self.x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def check_edges(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;如果外星人位于屏幕边缘，就返回True&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        screen_rect = self.screen.get_rect()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if self.rect.right &amp;gt;= screen_rect.right:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        elif self.rect.left &amp;lt;= 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return True&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 子弹对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pygame&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from pygame.sprite import Sprite&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Bullet(Sprite):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    一个对飞船发射的子弹进行管理的类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	1. 子弹参数的初始化&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	2. 更新子弹的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	3. 在屏幕上绘制子弹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self, ai_settings, screen, ship):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&amp;quot;&amp;quot;&amp;quot;初始化子弹参数&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super(Bullet, self).__init__()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.screen = screen&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.color = ai_settings.bullet_color&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.speed_factor = ai_settings.bullet_speed_factor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 在 (0,0) 处创建一个表示子弹的矩形，再设置正确的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.rect = pygame.Rect(0, 0, ai_settings.bullet_width, ai_settings.bullet_hight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.rect.centerx = ship.rect.centerx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.rect.top = ship.rect.top&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 存储用小数表示的子弹位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.y = float(self.rect.y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def update(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;向上移动子弹&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 更新表示子弹的小数位置值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.y -= self.speed_factor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 更新表示子弹的rect位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.rect.y = self.y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def draw_bullet(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;在屏幕上绘制子弹&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pygame.draw.rect(self.screen, self.color, self.rect)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# UI 界面对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pygame.font&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from pygame.sprite import Group&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from ship import Ship&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Scoreboard():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    显示得分信息的类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	1. 初始化类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	2. 显示当前得分&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	3. 显示最高分&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	4. 显示当前等级&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	5. 显示剩余飞船数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	6. 将以上内容绘制在屏幕上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self, ai_settings, screen, stats):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;初始化显示得分的涉及的属性&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.screen = screen&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.screen_rect = screen.get_rect()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.ai_settings = ai_settings&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.stats = stats&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 显示得分信息时使用的字体设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.text_color = (30, 30, 30)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.font = pygame.font.SysFont(None, 48)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 准备初始得分图像&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.prep_score()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 准备最高分图像&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.prep_high_score()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 准备剩余的飞船数量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.prep_ships()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 准备玩家等级&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.prep_level()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def prep_score(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;将得分转换为一副渲染的图像&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rounded_score = int(round(self.stats.score, -1))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 将得分格式化为 10,000,000 这种格式的数字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        score_str = &amp;quot;&amp;#123;:,&amp;#125;&amp;quot;.format(rounded_score)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 渲染得分图像&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.score_image = self.font.render(score_str, True, self.text_color, self.ai_settings.bg_color)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 将得分放在屏幕右上角&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.score_rect = self.score_image.get_rect()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.score_rect.right = self.screen_rect.right -20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.score_rect.top = 20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def prep_high_score(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;将最高得分转换为一副渲染的图像&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        high_score = int(self.stats.high_score)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 将得分格式化&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        high_score_str = &amp;quot;&amp;#123;:,&amp;#125;&amp;quot;.format(high_score)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.high_score_image = self.font.render(high_score_str, True, self.text_color, self.ai_settings.bg_color)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 将得分放在屏幕中间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.high_score_rect = self.high_score_image.get_rect()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.high_score_rect.centerx = self.screen_rect.centerx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.high_score_rect.top = self.score_rect.top&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def prep_level(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;将等级转换为一副渲染的图像&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.level_image = self.font.render(str(self.stats.level), True, self.text_color, self.ai_settings.bg_color)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 将等级放在得分下方&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.level_rect = self.level_image.get_rect()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.level_rect.right = self.score_rect.right&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.level_rect.top = self.score_rect.bottom + 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def prep_ships(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;显示还剩下多少条飞船&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 将所有飞船放在一个组中，便于管理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.ships = Group()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 计算剩余飞船数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for ship_number in range(self.stats.ships_left):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ship = Ship(self.ai_settings, self.screen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ship.rect.x = 10 + ship_number * ship.rect.width&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ship.rect.y = 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.ships.add(ship)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def show_score(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;在屏幕上显示当前得分、最高分、等级&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.screen.blit(self.score_image, self.score_rect)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.screen.blit(self.high_score_image, self.high_score_rect)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.screen.blit(self.level_image, self.level_rect)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.ships.draw(self.screen)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 游戏数据统计对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import game_functions as gf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class GameStats(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    跟踪游戏的统计信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	1. 统计对象的初始化&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	2. &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self, ai_settings):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;初始化统计信息&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.ai_settings = ai_settings&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.reset_stats()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 游戏刚启动时处于非活动状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.game_active = False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 在任何情况下都不应该重置最高分&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 先从文件中读取，有则显示最高分，没有则显示0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        read_high_score = gf.read_high_score()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 判空&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if read_high_score.strip() == &amp;apos;&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.high_score = int(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.high_score = int(read_high_score)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def reset_stats(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;初始化在游戏运行期间可能变化的统计信息&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.ships_left = self.ai_settings.ship_limit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.score = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 玩家等级&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.level = 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 开始游戏按钮对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pygame.font&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Button():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    开始游戏按钮&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	1. 初始化按钮属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	2. 设置按钮的文本&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	3. 在屏幕上绘制按钮&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self, ai_settings, screen, msg):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;初始化按钮的属性&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.screen = screen&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.screen_rect = screen.get_rect()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 设置按钮的尺寸和其他属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.width, self.height = 200, 50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.button_color = (0, 255, 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.text_color = (255, 255, 255)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.font = pygame.font.SysFont(None, 48)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 创建按钮的rect, 并使其居中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.rect = pygame.Rect(0, 0, self.width, self. height)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.rect.center = self.screen_rect.center&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 按钮的标签只需创建一次&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.prep_msg(msg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def prep_msg(self, msg):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;将msg渲染为图像，并失去在按钮上居中&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.msg_image = self.font.render(msg, True, self.text_color, self.button_color)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.msg_image_rect = self.msg_image.get_rect()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.msg_image_rect.center = self.rect.center&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def draw_botton(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 绘制一个用颜色填充的按钮再绘制文本&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.screen.fill(self.button_color, self.rect)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.screen.blit(self.msg_image, self.msg_image_rect)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;控制方法&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;通过&lt;code&gt;game_funcations.py&lt;/code&gt;去串联各个对象&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;223&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;224&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;225&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;226&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;227&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;228&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;229&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;230&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;231&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;232&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;233&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;234&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;235&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;236&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;237&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;238&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;239&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;240&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;241&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;242&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;243&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;244&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;245&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;246&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;247&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;248&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;249&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;250&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;251&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;252&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;253&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;254&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;255&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;256&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;257&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;258&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 串联各个对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import pygame&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from bullet import Bullet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from alien import Alien&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from time import sleep&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def check_events(ai_settings, screen, stats, sb, play_button, ship, aliens, bullets):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    响应按键和鼠标事件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	1. 键盘按下和抬起要实现的操作&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	2. 鼠标按下，开启游戏&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	3. 将最高分写入文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	4. 更新子弹数量，删除击中到外星人的子弹，以及被击中的外星人&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	5. 创建一群外星人群&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	6. 检测游戏是否结束&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for event in pygame.event.get():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if event.type == pygame.QUIT:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # 按下q 退出游戏&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            write_high_score(stats)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sys.exit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        elif event.type == pygame.KEYDOWN:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            check_keydown_events(event, ai_settings, screen, stats, ship, bullets)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        elif event.type == pygame.KEYUP:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            check_keyup_events(event, ship)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        elif event.type == pygame.MOUSEBUTTONDOWN:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mouse_x, mouse_y = pygame.mouse.get_pos()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            check_play_button(ai_settings, screen, stats, sb, play_button, ship, aliens, bullets, mouse_x, mouse_y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def check_play_button(ai_settings, screen, stats, sb, play_button, ship, aliens, bullets, mouse_x, mouse_y):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;玩家单击开始按钮开始游戏&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    button_clicked = play_button.rect.collidepoint(mouse_x, mouse_y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if button_clicked and not stats.game_active:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 重置游戏设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ai_settings.initialize_dynamic_settings()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 隐藏光标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pygame.mouse.set_visible(False)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 重置游戏统计信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stats.reset_stats()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stats.game_active = True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 重置记分牌图像&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sb.prep_score()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sb.prep_high_score()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sb.prep_level()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sb.prep_ships()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 清空外星人列表和子弹列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        aliens.empty()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bullets.empty()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 创建一群新的外星人，并让飞船居中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        create_fleet(ai_settings, screen, ship, aliens)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ship.center_ship()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def check_keydown_events(event, ai_settings, screen, stats, ship, bullets):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 响应鼠标按下事件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if event.key == pygame.K_RIGHT:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 按下向右移动飞船&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ship.moving_right = True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    elif event.key == pygame.K_LEFT:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 按下向左移动飞船&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ship.moving_left = True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    elif event.key == pygame.K_SPACE:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 创建一颗子弹，并将其加入到编组bullets中, 控制只能发射3颗子弹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fire_bullet(ai_settings, screen, ship, bullets)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    elif event.key == pygame.K_q:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 按下q退出游戏&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        write_high_score(stats)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sys.exit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def write_high_score(stats):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 先读取文件，如果最高分比文件中的分数还低就不写入文件，否则写入文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    read_high_score_txt = int(read_high_score())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 当前分数大于文件中的最高分，则写入文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if read_high_score_txt &amp;lt; stats.high_score:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        write_file = &amp;apos;high_score.txt&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        with open(write_file, &amp;apos;w&amp;apos;) as write_file_object:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            write_file_object.write(str(stats.high_score))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def read_high_score():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;读取文件中的最高分&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    read_file = &amp;apos;high_score.txt&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    with open(read_file) as read_file_object:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        read_high_score = read_file_object.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return read_high_score&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def check_keyup_events(event, ship):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 响应鼠标松开事件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if event.key == pygame.K_RIGHT:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ship.moving_right = False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    elif event.key == pygame.K_LEFT:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ship.moving_left = False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def update_bullets(ai_settings, screen, stats, sb, ship, aliens, bullets):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;更新子弹的位置，并删除已经消失的子弹&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bullets.update()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 删除消失的子弹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for bullet in bullets.copy():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if bullet.rect.bottom &amp;lt;= 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bullets.remove(bullet)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	# 响应子弹和外星人的碰撞&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    check_bullet_alien_collisions(ai_settings, screen, stats, sb, ship, aliens, bullets)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def check_bullet_alien_collisions(ai_settings, screen, stats, sb, ship, aliens, bullets):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 删除发生碰撞的子弹和外星人&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    collisions = pygame.sprite.groupcollide(bullets, aliens,True, True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 统计击杀的外星人分数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if collisions:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for aliens in collisions.values():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            stats.score += ai_settings.alien_points * len(aliens)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sb.prep_score()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		# 检查是否诞生了新的最高分&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        check_high_score(stats, sb)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	# 屏幕上外星人被杀光&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if len(aliens) == 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 删除现有的子弹,加快游戏节奏，并新建一群外星人&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bullets.empty()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ai_settings.increase_speed()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        create_fleet(ai_settings, screen, ship, aliens)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 如果整群外星人被消灭了，就提高一个等级&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stats.level += 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sb.prep_level()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def check_high_score(stats, sb):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;quot;&amp;quot;&amp;quot;检查是否诞生了新的最高分&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     if stats.score &amp;gt; stats.high_score:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         stats.high_score = stats.score&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         sb.prep_high_score()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def fire_bullet(ai_settings, screen, ship, bullets):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;如果还没达到子弹的发射上限，就发射一颗子弹&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if len(bullets) &amp;lt; ai_settings.bullets_allowed:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        new_bullet = Bullet(ai_settings, screen, ship)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bullets.add(new_bullet)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def get_number_aliens_x(ai_settings, alien_width):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 外星人间距为外星人的宽度 计算一行可容纳多少个外星人&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    available_space_x = ai_settings.screen_width - 2 * alien_width&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    number_aliens_x = int(available_space_x / (2 * alien_width))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return number_aliens_x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def get_number_rows(ai_settings, ship_height, alien_height):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;计算屏幕可以容纳多少行外星人&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    available_space_y = (ai_settings.screen_height - (3 * alien_height) - ship_height)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    number_rows = int(available_space_y / (2 * alien_height))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return number_rows&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def create_alien(ai_settings, screen, aliens, alien_number, row_number):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 创建一个外星人&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alien = Alien(ai_settings, screen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alien_width = alien.rect.width&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	# 外星人的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alien.x = alien_width + 2 * alien_width * alien_number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alien.rect.x = alien.x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alien.rect.y = alien.rect.height + 2 * alien.rect.height * row_number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    aliens.add(alien)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def create_fleet(ai_settings, screen, ship, aliens):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;创建外星人群&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alien = Alien(ai_settings, screen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    number_aliens_x = get_number_aliens_x(ai_settings, alien.rect.width)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    number_rows = get_number_rows(ai_settings,ship.rect.height, alien.rect.height)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 创建第一行外星人&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for alien_number in range(number_aliens_x):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 创建一个外星人并将其加入当前行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alien = Alien(ai_settings, screen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        create_alien(ai_settings, screen, aliens, alien_number)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 创建外星人群&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for row_number in range(number_rows):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for alien_number in range(number_aliens_x):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # 创建一个外星人并将其加入当前行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            alien = Alien(ai_settings, screen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            create_alien(ai_settings, screen, aliens, alien_number, row_number)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def update_aliens(ai_settings, screen, stats, sb, ship, aliens, bullets):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;检查是否有外星人在屏幕边缘，并更新正群外星人的位置&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    check_fleet_edges(ai_settings, aliens)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    aliens.update()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 检测外星人和飞船之间的碰撞&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if pygame.sprite.spritecollideany(ship, aliens):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;quot;Ship hit!!!&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ship_hit(ai_settings, screen, stats, sb, ship, aliens, bullets)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    check_aliens_bottom(ai_settings, screen, stats, sb, ship, aliens, bullets)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def check_fleet_edges(ai_settings, aliens):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;有外星人到达边缘时采取响应的措施&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for alien in aliens.sprites():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if alien.check_edges():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            change_fleet_direction(ai_settings, aliens)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def change_fleet_direction(ai_settings, aliens):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;将整体外星人下移，并改变他们的方向&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for alien in aliens.sprites():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alien.rect.y += ai_settings.fleet_drop_speed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ai_settings.fleet_direction *= -1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def ship_hit(ai_settings, screen, stats, sb, ship, aliens, bullets):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 响应被外星人撞到的飞船&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if stats.ships_left &amp;gt; 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 将ship_left减1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stats.ships_left -= 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 更新飞船数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sb.prep_ships()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 清空外星人列表和子弹列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        aliens.empty()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bullets.empty()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 创建一群新的外星人，并将飞创放到屏幕底部的中间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        create_fleet(ai_settings, screen, ship, aliens)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ship.center_ship()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 暂停&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sleep(0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stats.game_active = False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 非游戏状态显示光标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pygame.mouse.set_visible(True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def check_aliens_bottom(ai_settings, screen, stats, sb, ship, aliens, bullets):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;检查是否有外星人到达屏幕底部&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    screen_rect = screen.get_rect()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for alien in aliens.sprites():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if alien.rect.bottom &amp;gt;= screen_rect.bottom:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # 像飞船被撞到一样处理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ship_hit(ai_settings, stats, screen, sb, ship, aliens, bullets)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def update_screen(ai_settings, screen, stats, sb, ship, aliens, bullets, play_button):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;更新屏幕上的图像，并切换到新的屏幕&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 每次循环时都重绘屏幕&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    screen.fill(ai_settings.bg_color)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 在飞船和外星人后面重绘所有子弹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for bullet in bullets.sprites():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bullet.draw_bullet()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	# 在指定位置绘制飞船&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ship.blitme()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    aliens.draw(screen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 显示得分&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sb.show_score()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 如果游戏处于非活动状态，就绘制Play按钮&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if not stats.game_active:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        play_button.draw_botton()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 让最近绘制的屏幕可见&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pygame.display.flip()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;《外星人入侵》游戏&quot;&gt;&lt;a href=&quot;#《外星人入侵》游戏&quot; class=&quot;headerlink&quot; title=&quot;《外星人入侵》游戏&quot;&gt;&lt;/a&gt;《外星人入侵》游戏&lt;/h3&gt;&lt;h4 id=&quot;游戏介绍&quot;&gt;&lt;a href=&quot;#游戏介绍&quot; class=&quot;headerlink&quot; title=&quot;游戏介绍&quot;&gt;&lt;/a&gt;游戏介绍&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;在游戏中，玩家控制着一艘最初出现在屏幕底部中央的飞船，玩家可以使用键盘中的左右键控制飞船的左右移动，还可以用空格键进行射击。&lt;/p&gt;
&lt;p&gt;游戏开始时，一群外星人出现在天空中，他们在屏幕中往下移动，玩家的任务就是射杀这些外星人。玩家将所有外星人击杀后，玩家等级升一级并且在屏幕上方将出现新的一群外星人，他们的移动速度更快。玩家每次击杀一个外星人都记录一个分数，游戏结束后记录每局游戏的最高分，每次游戏开始时将最高分显示在屏幕中央。&lt;/p&gt;
&lt;p&gt;只要有外星人撞到了玩家的飞船或者到达了底部，玩家就损失一艘飞船，玩家损失3艘飞船后，游戏结束！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://dongxi520.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python基础（八）-文件和异常</title>
    <link href="http://dongxi520.com/2017/12/08/Python%E5%9F%BA%E7%A1%80%EF%BC%88%E5%85%AB%EF%BC%89-%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8/"/>
    <id>http://dongxi520.com/2017/12/08/Python基础（八）-文件和异常/</id>
    <published>2017-12-08T15:35:54.000Z</published>
    <updated>2017-12-08T15:42:30.991Z</updated>
    
    <content type="html">&lt;h4 id=&quot;读取文件中的数据&quot;&gt;&lt;a href=&quot;#读取文件中的数据&quot; class=&quot;headerlink&quot; title=&quot;读取文件中的数据&quot;&gt;&lt;/a&gt;读取文件中的数据&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;读取整个文件&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;with open(&amp;apos;text.txt&amp;apos;) as file_object:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    contents = file_object.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(contents)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;分析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;with&lt;/code&gt; 关键字在不需要访问文件时会将其关闭，&lt;code&gt;open()&lt;/code&gt;函数接收一个参数，该参数是文件路径，&lt;code&gt;text.txt&lt;/code&gt;是当前目录下的文件，所以可以直接这么写，在其他路径直接写其他路径名，如：&lt;code&gt;text.txt&lt;/code&gt;在当前目录下的&lt;code&gt;txt&lt;/code&gt;文件夹中，那么路径为：&lt;code&gt;txt\text.txt&lt;/code&gt;，要是在&lt;code&gt;D盘的txt文件夹&lt;/code&gt;下可以这么写：&lt;code&gt;D:\txt\text.txt&lt;/code&gt;。&lt;code&gt;as&lt;/code&gt; 表示给对象起别名，&lt;code&gt;read()&lt;/code&gt;读取这个文件的全部内容，结果为字符串（该字符串结尾会多一行空行），可用&lt;code&gt;rstrip()&lt;/code&gt;去除空行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;逐行读取文件&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;with open(&amp;apos;text.txt&amp;apos;) as file_object:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for line in file_object:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	# 逐行读取需要去除空行，否则空行会越来越多（也是看需求吧）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	print(line.rstrip())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;strip()&lt;/code&gt; 和&lt;code&gt;rstrip()&lt;/code&gt; 的区别&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;strip()&lt;/code&gt; ： 去掉所有空格&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rstrip()&lt;/code&gt; ：去掉空行&lt;/p&gt;
&lt;h4 id=&quot;写入文件&quot;&gt;&lt;a href=&quot;#写入文件&quot; class=&quot;headerlink&quot; title=&quot;写入文件&quot;&gt;&lt;/a&gt;写入文件&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;写入空文件&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;file_name = &amp;apos;text0.txt&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;with open(file_name, &amp;apos;w&amp;apos;) as file_object:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    file_object.write(&amp;quot; I Love Python.\n&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    file_object.write(&amp;quot; I Love Android&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;open()&lt;/code&gt;函数又两个参数，第一个参数是文件名，第二个参数是模式：&lt;code&gt;w&lt;/code&gt;表示写入模式，还有&lt;code&gt;r&lt;/code&gt;表示读取模式，&lt;code&gt;a 或者 r+&lt;/code&gt;表示附加模式，python 默认是以只读模式打开文件&lt;/li&gt;
&lt;li&gt;如果写入的文件不存在，则穿件该文件&lt;/li&gt;
&lt;li&gt;如果是&lt;code&gt;写入模式&lt;/code&gt;, 会将文件清空再写入&lt;/li&gt;
&lt;li&gt;附件模式，是在文件的内容末尾加上新写入的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;异常&quot;&gt;&lt;a href=&quot;#异常&quot; class=&quot;headerlink&quot; title=&quot;异常&quot;&gt;&lt;/a&gt;异常&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;try-except&lt;/code&gt;代码块：&lt;strong&gt;ZeroDivisionError&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(5/0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;except ZeroDivisionError:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(&amp;quot;you can&amp;apos;t divide by zero!&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;FileNotFoundError&lt;/strong&gt; 异常&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;打开文件找不到文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;pass&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;表示什么都不做，在发生错误时不想输出信息，可以用pass语句&lt;/p&gt;
&lt;h4 id=&quot;存储数据&quot;&gt;&lt;a href=&quot;#存储数据&quot; class=&quot;headerlink&quot; title=&quot;存储数据&quot;&gt;&lt;/a&gt;存储数据&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;使用 json.dump() 和 json.load()&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 存文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;numbers = [2, 3, 5, 7, 11, 13]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filename = &amp;apos;numbers.json&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;with open(filename, &amp;apos;w&amp;apos;) as f_obj:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    json.dump(numbers, f_obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 取文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filename = &amp;apos;numbers.json&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;with open(filename) as f_obj:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    numbers = json.load(f_obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(numbers)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;导入 json 模块，创建一个数字列表，将列表存储到文件，利用&lt;code&gt;json.dump()&lt;/code&gt;将文件存为&lt;code&gt;json&lt;/code&gt;格式&lt;/li&gt;
&lt;li&gt;利用&lt;code&gt;json.load()&lt;/code&gt;将文件读取出来&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;读取文件中的数据&quot;&gt;&lt;a href=&quot;#读取文件中的数据&quot; class=&quot;headerlink&quot; title=&quot;读取文件中的数据&quot;&gt;&lt;/a&gt;读取文件中的数据&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;读取整个文件&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;with open(&amp;apos;text.txt&amp;apos;) as file_object:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    contents = file_object.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(contents)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://dongxi520.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python基础（七）-类</title>
    <link href="http://dongxi520.com/2017/12/08/Python%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%83%EF%BC%89-%E7%B1%BB/"/>
    <id>http://dongxi520.com/2017/12/08/Python基础（七）-类/</id>
    <published>2017-12-08T14:15:35.000Z</published>
    <updated>2017-12-08T14:19:46.593Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;面向对象编程是最有效的软件编写方法之一，在面向对象编程中的类可以模拟显示世界中的事物和情景，并基于这些类来创建对象，在类中定义对象的通用行为。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;创建和使用类&quot;&gt;&lt;a href=&quot;#创建和使用类&quot; class=&quot;headerlink&quot; title=&quot;创建和使用类&quot;&gt;&lt;/a&gt;创建和使用类&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 创建&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Dog():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;一次模拟小狗的简单尝试&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self, name, age):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;初始化属性name和age&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.name = name &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.age = age &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.color = &amp;apos;yellow&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def sit(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;模拟小狗被命令蹲下&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(self.name.title() + &amp;quot; is now sitting&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;quot;My dog&amp;apos;s color is &amp;quot; + self.color)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def roll_over(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;模拟小狗被命令打滚&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(self.name.title() + &amp;quot; rolled over!&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_dog= Dog(&amp;apos;wangcai&amp;apos;,3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_dog.sit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;My dog&amp;apos;s name is &amp;quot; + my_dog.name.title() + &amp;quot;.&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 输出结果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Wangcai is now sitting&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;My dog&amp;apos;s color is yellow&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;My dog&amp;apos;s name is Wangcai.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方法&lt;code&gt;__init__()&lt;/code&gt;，相当于构造方法，每次创建类都运行该方法，方法前后都有&lt;code&gt;两个下划线&lt;/code&gt;，这是为了避免和普通方法名称发生冲突&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以在&lt;code&gt;__init__()&lt;/code&gt;中给属性默认值如：color被给定默认值为yellow&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;方法&lt;code&gt;sit()&lt;/code&gt;由于不需要其他参数，所以只传了一个实例类本身的形参&lt;code&gt;self&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用就是直接&lt;code&gt;类名(参数)&lt;/code&gt;，将结果给一个变量，通过该&lt;code&gt;变量.方法名&lt;/code&gt;就能够调用类中的方法了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改属性的值，可以通过实例直接修改、通过方法修改属性的值、通过方法对属性的值递增：如&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 还是使用上面的例子&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 1. 通过实例直接修改&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_dog = Dog(&amp;apos;wangcai&amp;apos;,3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 将年龄改为4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_dog.age = 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 2. 通过方法修改属性的值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在 Dog 类中声明一个方法 update_age(self, age)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;方法如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def update_age(self, age):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.age = age&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;使用：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_dog = Dog(&amp;apos;wangcai&amp;apos;,3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 将年龄改为4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_dog.update_age(4) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 3. 通过方法对属性的值递增&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在 Dog 类中声明一个方法 increment_age(self, age)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;方法如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def increment_age(self, age):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.age += age&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;使用：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_dog = Dog(&amp;apos;wangcai&amp;apos;,3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 将年龄改为4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_dog.increment_age(1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;继承&quot;&gt;&lt;a href=&quot;#继承&quot; class=&quot;headerlink&quot; title=&quot;继承&quot;&gt;&lt;/a&gt;继承&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 父类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Car():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;docstring for Car&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self, make, model, year):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.make = make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.model = model&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.year = year&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_desc_name(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        car_name = str(self.year) + &amp;apos; &amp;apos; + self.make + &amp;apos; &amp;apos; + self.model&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(car_name.title())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 子类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class ElectricCar(Car):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;docstring for ElectricCar&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self, arg):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super().__init__(self, make, model, year)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.battery_size = 70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def desc_battery(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	print(&amp;quot;This car has a &amp;quot; + str(self.battery_size) + &amp;quot;-kWh battery&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 重写父类的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # def get_desc_name():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #	  print(&amp;quot; 2027 I want to buy tesla&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 使用子类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;my_tesla = ElectricCar(&amp;apos;tesla&amp;apos;, &amp;apos;model s&amp;apos;, 2017)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(my_tesla.get_desc_name())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(my_tasla.desc_battery())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 输出结果是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2017 Tesla Model S&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;This car has a 70-kWh battery&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;父类中和其他类一样，子类中的&lt;code&gt;super().__init__(self, 父类 init 方法中的参数列表)&lt;/code&gt;，这些参数必不可少。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;def desc_battery(self)&lt;/code&gt; 是子类的方法，用于获取汽车电池&lt;/li&gt;
&lt;li&gt;如果将重写方法的注释打开，那么输出结果将覆盖父类中&lt;code&gt;get_desc_name()&lt;/code&gt;的输出，结果如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2027 I want to buy tesla&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;This car has a 70-kWh battery&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;导入类&quot;&gt;&lt;a href=&quot;#导入类&quot; class=&quot;headerlink&quot; title=&quot;导入类&quot;&gt;&lt;/a&gt;导入类&lt;/h4&gt;&lt;p&gt;假如我们创建了&lt;code&gt;Animal&lt;/code&gt;类( 文件名为animal )，类中含有&lt;code&gt;sit()&lt;/code&gt;方法，想在&lt;code&gt;Dog&lt;/code&gt;类中使用该方法，方式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# animal 文件名，Animal类名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from animal import Animal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;animal0 = Animal()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;animal0.sit() # 这样即可调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 如果想导入多个类可用逗号隔开，如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from animal import Animal, Peoson&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 导入整个模块&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import animal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 导入模块中的所有类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from animal import *&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;面向对象编程是最有效的软件编写方法之一，在面向对象编程中的类可以模拟显示世界中的事物和情景，并基于这些类来创建对象，在类中定义对象的通用行为。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://dongxi520.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python基础（六）-函数</title>
    <link href="http://dongxi520.com/2017/12/07/Python%E5%9F%BA%E7%A1%80%EF%BC%88%E5%85%AD%EF%BC%89-%E5%87%BD%E6%95%B0/"/>
    <id>http://dongxi520.com/2017/12/07/Python基础（六）-函数/</id>
    <published>2017-12-07T15:33:40.000Z</published>
    <updated>2017-12-07T15:39:13.110Z</updated>
    
    <content type="html">&lt;h4 id=&quot;函数定义&quot;&gt;&lt;a href=&quot;#函数定义&quot; class=&quot;headerlink&quot; title=&quot;函数定义&quot;&gt;&lt;/a&gt;函数定义&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def greet_user(msg):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;函数的描述&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(msg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;greet_user(&amp;quot;hello&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;输出结果是：Hello&lt;/li&gt;
&lt;li&gt;分析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;def&lt;/code&gt; 关键字来声明函数，&lt;code&gt;greet_user()&lt;/code&gt;表示函数名，&lt;code&gt;msg&lt;/code&gt;表示函数的参数，&lt;code&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&lt;/code&gt;里面的内容表示函数的作用解释&lt;/p&gt;
&lt;p&gt;多个参数的位置的顺序要摆放正确，不然出了Bug真的不好找aaa。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;带返回值的函数&quot;&gt;&lt;a href=&quot;#带返回值的函数&quot; class=&quot;headerlink&quot; title=&quot;带返回值的函数&quot;&gt;&lt;/a&gt;带返回值的函数&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def greet_user(first_name, last_name):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;函数的描述&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    full_name = first_name + &amp;apos; &amp;apos; + last_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return full_name.title()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user_name = greet_user(&amp;apos;Aller&amp;apos;,&amp;apos;Dong&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(user_name)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;通过关键字&lt;code&gt;return&lt;/code&gt;返回结果&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;返回一个字典&quot;&gt;&lt;a href=&quot;#返回一个字典&quot; class=&quot;headerlink&quot; title=&quot;返回一个字典&quot;&gt;&lt;/a&gt;返回一个字典&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def greet_user(first_name, last_name):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;函数的描述&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    person = &amp;#123;&amp;apos;first&amp;apos;:first_name,&amp;apos;last&amp;apos;:last_name&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return person&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;person = greet_user(&amp;apos;Aller&amp;apos;,&amp;apos;Dong&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(person)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;返回结果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-b35535b683da5b4e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;和Java中返回对象有点像哦~&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;传递任意数量的实参&quot;&gt;&lt;a href=&quot;#传递任意数量的实参&quot; class=&quot;headerlink&quot; title=&quot;传递任意数量的实参&quot;&gt;&lt;/a&gt;传递任意数量的实参&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def greet_user(*names):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;函数的描述&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for name in names:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;greet_user(&amp;apos;AllerDong&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;greet_user(&amp;apos;Zhangsan&amp;apos;, &amp;apos;Lisi&amp;apos;, &amp;apos;Wangwu&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;通过&lt;code&gt;*&lt;/code&gt;号表示任意数量的参数&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;将函数存储在模块中&quot;&gt;&lt;a href=&quot;#将函数存储在模块中&quot; class=&quot;headerlink&quot; title=&quot;将函数存储在模块中&quot;&gt;&lt;/a&gt;将函数存储在模块中&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;导入整个模块&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;import 模块名称&lt;/code&gt;，如在&lt;code&gt;当前目录下&lt;/code&gt;创建两个文件，一个是&lt;code&gt;test0.py&lt;/code&gt;，一个是&lt;code&gt;test1.py&lt;/code&gt;，&lt;code&gt;test0.py&lt;/code&gt;的代码如下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def greet_user(*names):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;函数的描述&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for name in names:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(name)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那么在&lt;code&gt;test1.py&lt;/code&gt;中想使用&lt;code&gt;test0.py&lt;/code&gt;中的代码可以这么写&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import test0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test0.greet_user(&amp;apos;AllerDong&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果为：AllerDong，这么做主要是能让代码重用（程序员都比较懒）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;导入特定函数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;test0.py&lt;/code&gt; 不变，修改&lt;code&gt;test1.py&lt;/code&gt;中的代码为&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from test0 import greet_user&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;greet_user(&amp;apos;AllerDong&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;二者的区别在于，导入整个模块（&lt;code&gt;import 模块名&lt;/code&gt;）后在使用模块中的函数时需要用&lt;code&gt;模块名.函数名&lt;/code&gt;的格式取调用，而导入特定函数（&lt;code&gt;from 模块名 import 函数名&lt;/code&gt;）就只能使用该函数，模块中的其他函数是用不了的。在使用时直接&lt;code&gt;函数&lt;/code&gt;名就可以使用了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用as给模块起别名(也是为了偷懒)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import test0 as t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t.greet_user(&amp;apos;AllerDong&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;函数定义&quot;&gt;&lt;a href=&quot;#函数定义&quot; class=&quot;headerlink&quot; title=&quot;函数定义&quot;&gt;&lt;/a&gt;函数定义&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def greet_user(msg):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;函数的描述&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(msg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;greet_user(&amp;quot;hello&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;输出结果是：Hello&lt;/li&gt;
&lt;li&gt;分析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;def&lt;/code&gt; 关键字来声明函数，&lt;code&gt;greet_user()&lt;/code&gt;表示函数名，&lt;code&gt;msg&lt;/code&gt;表示函数的参数，&lt;code&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&lt;/code&gt;里面的内容表示函数的作用解释&lt;/p&gt;
&lt;p&gt;多个参数的位置的顺序要摆放正确，不然出了Bug真的不好找aaa。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://dongxi520.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python基础（五）-字典</title>
    <link href="http://dongxi520.com/2017/12/07/Python%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%94%EF%BC%89-%E5%AD%97%E5%85%B8/"/>
    <id>http://dongxi520.com/2017/12/07/Python基础（五）-字典/</id>
    <published>2017-12-07T13:28:34.000Z</published>
    <updated>2017-12-07T13:31:10.754Z</updated>
    
    <content type="html">&lt;h4 id=&quot;一个简单的字典&quot;&gt;&lt;a href=&quot;#一个简单的字典&quot; class=&quot;headerlink&quot; title=&quot;一个简单的字典&quot;&gt;&lt;/a&gt;一个简单的字典&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;alien_0 = &amp;#123;&amp;apos;color&amp;apos;:&amp;apos;green&amp;apos;, &amp;apos;points&amp;apos;:&amp;apos;5&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(alien_0[&amp;apos;color&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(alien_0[&amp;apos;points&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;输出结果&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-46ff929e639d1ad4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;在字典中添加键值对&quot;&gt;&lt;a href=&quot;#在字典中添加键值对&quot; class=&quot;headerlink&quot; title=&quot;在字典中添加键值对&quot;&gt;&lt;/a&gt;在字典中添加键值对&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;alien_0 = &amp;#123;&amp;apos;color&amp;apos;:&amp;apos;green&amp;apos;, &amp;apos;points&amp;apos;:&amp;apos;5&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alien_0[&amp;apos;x_position&amp;apos;] = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alien_0[&amp;apos;y_position&amp;apos;] = 25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(alien_0)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;输出结果&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-2c09049e5e935cf4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分析&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 不关心键值对的添加顺序，只关心键和值之间的关联关系&lt;/p&gt;
&lt;h4 id=&quot;修改字典中的值&quot;&gt;&lt;a href=&quot;#修改字典中的值&quot; class=&quot;headerlink&quot; title=&quot;修改字典中的值&quot;&gt;&lt;/a&gt;修改字典中的值&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;alien_0 = &amp;#123;&amp;apos;color&amp;apos;:&amp;apos;green&amp;apos;, &amp;apos;points&amp;apos;:&amp;apos;5&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alien_0[&amp;apos;x_position&amp;apos;] = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alien_0[&amp;apos;y_position&amp;apos;] = 25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 修改color为yellow&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alien_0[&amp;apos;color&amp;apos;] = &amp;apos;yellow&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(alien_0)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;输出结果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-ada915aa35807902.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;删除键值对&quot;&gt;&lt;a href=&quot;#删除键值对&quot; class=&quot;headerlink&quot; title=&quot;删除键值对&quot;&gt;&lt;/a&gt;删除键值对&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;alien_0 = &amp;#123;&amp;apos;color&amp;apos;:&amp;apos;green&amp;apos;, &amp;apos;points&amp;apos;:&amp;apos;5&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alien_0[&amp;apos;x_position&amp;apos;] = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alien_0[&amp;apos;y_position&amp;apos;] = 25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 原来的字典&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(alien_0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;del alien_0[&amp;apos;points&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 删除points键对应的值后的字典&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(alien_0)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;结果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-f2c4e3a04b9917ac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;遍历字典&quot;&gt;&lt;a href=&quot;#遍历字典&quot; class=&quot;headerlink&quot; title=&quot;遍历字典&quot;&gt;&lt;/a&gt;遍历字典&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;alien_0 = &amp;#123;&amp;apos;color&amp;apos;:&amp;apos;green&amp;apos;, &amp;apos;points&amp;apos;:&amp;apos;5&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alien_0[&amp;apos;x_position&amp;apos;] = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alien_0[&amp;apos;y_position&amp;apos;] = 25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(alien_0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 遍历所有键值对&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for key, value in alien_0.items():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;\nKey: &amp;quot;+key)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # print只能输出字符串，所有需要用`str()`强转&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;Value: &amp;quot;+str(value))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;输出结果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-2b9b0ac0959c9307.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;遍历字典中的所有键&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;alien_0 = &amp;#123;&amp;apos;color&amp;apos;:&amp;apos;green&amp;apos;, &amp;apos;points&amp;apos;:&amp;apos;5&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alien_0[&amp;apos;x_position&amp;apos;] = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alien_0[&amp;apos;y_position&amp;apos;] = 25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(alien_0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 遍历所有键值对&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for key, value in alien_0.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;\nKey: &amp;quot;+key)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;遍历字典中的所有值&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;alien_0 = &amp;#123;&amp;apos;color&amp;apos;:&amp;apos;green&amp;apos;, &amp;apos;points&amp;apos;:&amp;apos;5&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alien_0[&amp;apos;x_position&amp;apos;] = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alien_0[&amp;apos;y_position&amp;apos;] = 25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(alien_0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 遍历所有键值对&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for value in alien_0.values():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;Value: &amp;quot;+str(value))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;字典嵌套&quot;&gt;&lt;a href=&quot;#字典嵌套&quot; class=&quot;headerlink&quot; title=&quot;字典嵌套&quot;&gt;&lt;/a&gt;字典嵌套&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;alien_0 = &amp;#123;&amp;apos;color&amp;apos;:&amp;apos;green&amp;apos;, &amp;apos;points&amp;apos;:&amp;apos;5&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alien_1 = &amp;#123;&amp;apos;color&amp;apos;:&amp;apos;yellow&amp;apos;,&amp;apos;points&amp;apos;:&amp;apos;15&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alien_2 = &amp;#123;&amp;apos;color&amp;apos;:&amp;apos;blue&amp;apos;, &amp;apos;points&amp;apos;:&amp;apos;25&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;aliens = [alien_0, alien_1, alien_2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for alien in aliens:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(alien)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;输出结果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-548c83ab870c33f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;在字典中存储列表&quot;&gt;&lt;a href=&quot;#在字典中存储列表&quot; class=&quot;headerlink&quot; title=&quot;在字典中存储列表&quot;&gt;&lt;/a&gt;在字典中存储列表&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;alien_0 = &amp;#123;&amp;apos;color&amp;apos;:&amp;apos;green&amp;apos;, &amp;apos;cars&amp;apos;:[&amp;apos;audi&amp;apos;, &amp;apos;bmw&amp;apos;]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for car in alien_0[&amp;apos;cars&amp;apos;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(car)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;输出结果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-e435266e7ffe914e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;在字典中存储字典&quot;&gt;&lt;a href=&quot;#在字典中存储字典&quot; class=&quot;headerlink&quot; title=&quot;在字典中存储字典&quot;&gt;&lt;/a&gt;在字典中存储字典&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;alien_0 = &amp;#123;&amp;apos;color&amp;apos;:&amp;#123;&amp;apos;first&amp;apos;:&amp;apos;green&amp;apos;, &amp;apos;two&amp;apos;:&amp;apos;yellow&amp;apos;&amp;#125;, &amp;apos;cars&amp;apos;:&amp;#123;&amp;apos;first&amp;apos;:&amp;apos;audi&amp;apos;,&amp;apos;two&amp;apos;:&amp;apos;bmw&amp;apos;&amp;#125;,&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for alien, car in alien_0.items():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(alien)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;\t&amp;quot; + car[&amp;apos;first&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;\t&amp;quot; + car[&amp;apos;two&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;输出结果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-e8e4eb7bbfabc447.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;alien 为键，car为值&lt;/p&gt;
&lt;p&gt;先输出键，color 键对应的值，然后再输出 cars 键对应的值&lt;/p&gt;
&lt;h4 id=&quot;试试字典嵌套字典，字典中又嵌套列表…-感觉再作死！（最好别嵌套这么多）&quot;&gt;&lt;a href=&quot;#试试字典嵌套字典，字典中又嵌套列表…-感觉再作死！（最好别嵌套这么多）&quot; class=&quot;headerlink&quot; title=&quot;试试字典嵌套字典，字典中又嵌套列表….感觉再作死！（最好别嵌套这么多）&quot;&gt;&lt;/a&gt;试试字典嵌套字典，字典中又嵌套列表….感觉再作死！（&lt;strong&gt;最好别嵌套这么多&lt;/strong&gt;）&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;目前的做法不对，希望以后能找到更好的思路&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;alien_0 = &amp;#123;&amp;apos;color&amp;apos;:&amp;#123;&amp;apos;first&amp;apos;:&amp;apos;green&amp;apos;, &amp;apos;two&amp;apos;:&amp;apos;yellow&amp;apos;&amp;#125;, &amp;apos;cars&amp;apos;:&amp;#123;&amp;apos;first&amp;apos;:[&amp;apos;audi&amp;apos;,&amp;apos;toyota&amp;apos;],&amp;apos;two&amp;apos;:&amp;apos;bmw&amp;apos;&amp;#125;,&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 第一步创建一个列表取存储alien_0字典中的第一个键对应的值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list_1 = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 第二步遍历字典alien_0，将值放入创建的list_1列表中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for alien, car in alien_0.items():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        list_1.append(car[&amp;apos;first&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(list_1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 第三步判断该值是否存在列表中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for car_car in list_1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if &amp;apos;audi&amp;apos; in car_car:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(car_car)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 第四步 存在该值，则打印出来&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(car_car[1])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;结果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-8b620b112d7aa787.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;alien_0 是一个字典，字典的第一个value嵌套了字典，第二个value嵌套了字典同时字典中嵌套了列表。我想取得列表的第1个元素，那就一层一层来呗&lt;strong&gt;请看代码中的分析&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这么做的缺点是需要知道列表中存在该值….&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一个简单的字典&quot;&gt;&lt;a href=&quot;#一个简单的字典&quot; class=&quot;headerlink&quot; title=&quot;一个简单的字典&quot;&gt;&lt;/a&gt;一个简单的字典&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;alien_0 = &amp;#123;&amp;apos;color&amp;apos;:&amp;apos;green&amp;apos;, &amp;apos;points&amp;apos;:&amp;apos;5&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(alien_0[&amp;apos;color&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(alien_0[&amp;apos;points&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;输出结果&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-46ff929e639d1ad4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://dongxi520.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python基础（四）-if语句</title>
    <link href="http://dongxi520.com/2017/12/06/Python%E5%9F%BA%E7%A1%80%EF%BC%88%E5%9B%9B%EF%BC%89-if%E8%AF%AD%E5%8F%A5/"/>
    <id>http://dongxi520.com/2017/12/06/Python基础（四）-if语句/</id>
    <published>2017-12-06T14:25:03.000Z</published>
    <updated>2017-12-06T14:31:43.837Z</updated>
    
    <content type="html">&lt;h4 id=&quot;推荐一个编辑器&quot;&gt;&lt;a href=&quot;#推荐一个编辑器&quot; class=&quot;headerlink&quot; title=&quot;推荐一个编辑器&quot;&gt;&lt;/a&gt;推荐一个编辑器&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Sublime Text 超级好用，而且可以直接运行 Python 代码，在编辑器页面按下&lt;code&gt;ctrl + B&lt;/code&gt;即可运行，厉害了我的ST&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;一个简单的示例&quot;&gt;&lt;a href=&quot;#一个简单的示例&quot; class=&quot;headerlink&quot; title=&quot;一个简单的示例&quot;&gt;&lt;/a&gt;一个简单的示例&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cars = [&amp;apos;audi&amp;apos;, &amp;apos;bmw&amp;apos;, &amp;apos;subaru&amp;apos;, &amp;apos;tiyota&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for car in cars:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if car == &amp;apos;bmw&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(car.upper())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(car.title())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;输出结果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-40c7eb8fdd03bbd4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;声明一个列表，通过 for 循环判断列表中是否存在一个值和&lt;code&gt;bmw&lt;/code&gt;一样，是的话将&lt;code&gt;bmw&lt;/code&gt;转为大写&lt;code&gt;BMW&lt;/code&gt;,否则将列表中其他的字符串首字母大写&lt;/p&gt;
&lt;h4 id=&quot;检查字符串是否相等、不等&quot;&gt;&lt;a href=&quot;#检查字符串是否相等、不等&quot; class=&quot;headerlink&quot; title=&quot;检查字符串是否相等、不等&quot;&gt;&lt;/a&gt;检查字符串是否相等、不等&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;car = &amp;apos;audi&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;car == &amp;apos;bmw&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出 False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;car = &amp;apos;audi&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;car != &amp;apos;bmw&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出 True&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;字符串比较是区分大小写的，’audi’ 不等于’Audi’&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;比较数字，-，-lt-，-gt-，和Java中一样&quot;&gt;&lt;a href=&quot;#比较数字，-，-lt-，-gt-，和Java中一样&quot; class=&quot;headerlink&quot; title=&quot;比较数字，=，&amp;lt;=，&amp;gt;=，和Java中一样&quot;&gt;&lt;/a&gt;比较数字，=，&amp;lt;=，&amp;gt;=，和Java中一样&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;age = 18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;age == 18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出 True&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;检查多个条件，and&quot;&gt;&lt;a href=&quot;#检查多个条件，and&quot; class=&quot;headerlink&quot; title=&quot;检查多个条件，and&quot;&gt;&lt;/a&gt;检查多个条件，and&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;age_0 = 22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;age_1 = 18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;age_0 &amp;gt;= 21 and age_1 &amp;gt;=21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出False&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;检查特定值是否在列表中，是否不在列表中&quot;&gt;&lt;a href=&quot;#检查特定值是否在列表中，是否不在列表中&quot; class=&quot;headerlink&quot; title=&quot;检查特定值是否在列表中，是否不在列表中&quot;&gt;&lt;/a&gt;检查特定值是否在列表中，是否不在列表中&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cars = [&amp;apos;audi&amp;apos;, &amp;apos;bmw&amp;apos;, &amp;apos;subaru&amp;apos;, &amp;apos;toyota&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;audi&amp;apos; in cars&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cars = [&amp;apos;audi&amp;apos;, &amp;apos;bmw&amp;apos;, &amp;apos;subaru&amp;apos;, &amp;apos;toyota&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;mini&amp;apos; not in cars&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出True&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;if-elif-else&quot;&gt;&lt;a href=&quot;#if-elif-else&quot; class=&quot;headerlink&quot; title=&quot;if-elif-else&quot;&gt;&lt;/a&gt;if-elif-else&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;age = 12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if age &amp;gt; 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(&amp;quot;大于4&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif age &amp;lt; 18:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(&amp;quot;小于18&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(&amp;quot;大于4小于18&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;确定列表不是空的&quot;&gt;&lt;a href=&quot;#确定列表不是空的&quot; class=&quot;headerlink&quot; title=&quot;确定列表不是空的&quot;&gt;&lt;/a&gt;确定列表不是空的&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cars = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if cars:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(&amp;quot;列表非空&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(&amp;quot;列表是空的&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;使用多个列表&quot;&gt;&lt;a href=&quot;#使用多个列表&quot; class=&quot;headerlink&quot; title=&quot;使用多个列表&quot;&gt;&lt;/a&gt;使用多个列表&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cars = [&amp;apos;audi&amp;apos;, &amp;apos;bmw&amp;apos;, &amp;apos;subaru&amp;apos;, &amp;apos;toyota&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;types = [&amp;apos;small&amp;apos;, &amp;apos;middle&amp;apos;, &amp;apos;big&amp;apos;, &amp;apos;toyota&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for type in types:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if type in cars:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		print(&amp;quot;tpyes 列表中有 cars 列表中的值&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		print(&amp;quot;tpyes 列表没中有 cars 列表中的值&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;推荐一个编辑器&quot;&gt;&lt;a href=&quot;#推荐一个编辑器&quot; class=&quot;headerlink&quot; title=&quot;推荐一个编辑器&quot;&gt;&lt;/a&gt;推荐一个编辑器&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Sublime Text 超级好用，而且可以直接运行 Python 代码，在编辑器页面按下&lt;code&gt;ctrl + B&lt;/code&gt;即可运行，厉害了我的ST&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;一个简单的示例&quot;&gt;&lt;a href=&quot;#一个简单的示例&quot; class=&quot;headerlink&quot; title=&quot;一个简单的示例&quot;&gt;&lt;/a&gt;一个简单的示例&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cars = [&amp;apos;audi&amp;apos;, &amp;apos;bmw&amp;apos;, &amp;apos;subaru&amp;apos;, &amp;apos;tiyota&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for car in cars:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if car == &amp;apos;bmw&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(car.upper())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(car.title())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://dongxi520.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python基础（三）- 操作列表</title>
    <link href="http://dongxi520.com/2017/11/26/Python%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%89%EF%BC%89-%E6%93%8D%E4%BD%9C%E5%88%97%E8%A1%A8/"/>
    <id>http://dongxi520.com/2017/11/26/Python基础（三）-操作列表/</id>
    <published>2017-11-26T01:47:06.000Z</published>
    <updated>2017-11-26T11:56:29.245Z</updated>
    
    <content type="html">&lt;h4 id=&quot;遍历列表&quot;&gt;&lt;a href=&quot;#遍历列表&quot; class=&quot;headerlink&quot; title=&quot;遍历列表&quot;&gt;&lt;/a&gt;遍历列表&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-cc1e7c221a498030.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定义一个列表&lt;/li&gt;
&lt;li&gt;通过for 循环输出结果&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;创建数值列表&quot;&gt;&lt;a href=&quot;#创建数值列表&quot; class=&quot;headerlink&quot; title=&quot;创建数值列表&quot;&gt;&lt;/a&gt;创建数值列表&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;range()&lt;/code&gt;函数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-f4fa430d9abb1a11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;range(1，5) 函数的参数范围，包前不包后&lt;/li&gt;
&lt;li&gt;list(range(2,11,2))：从2开始数，不断加2，直到11（不包括11）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;对数字列表进行简单的统计&quot;&gt;&lt;a href=&quot;#对数字列表进行简单的统计&quot; class=&quot;headerlink&quot; title=&quot;对数字列表进行简单的统计&quot;&gt;&lt;/a&gt;对数字列表进行简单的统计&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-fbd68ee1eb5b8c14.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;min() 列表中的最小值&lt;/li&gt;
&lt;li&gt;max() 列表中的最大值&lt;/li&gt;
&lt;li&gt;sum() 求和&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;使用列表的一部分（切片）&quot;&gt;&lt;a href=&quot;#使用列表的一部分（切片）&quot; class=&quot;headerlink&quot; title=&quot;使用列表的一部分（切片）&quot;&gt;&lt;/a&gt;使用列表的一部分（切片）&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-5a9ca9d20cd5e64e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;players(0:3)&lt;/code&gt;:（包前不包后）第一个参数没有索引将从头开始,第二个参数没有写索引结果将直到结束，负数代表从末尾开始（-1表示最后一个元素）可以遍历任意长度切片：如下&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-90e07746a9446040.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;复制列表 palyers_two = players[:]&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;元祖&quot;&gt;&lt;a href=&quot;#元祖&quot; class=&quot;headerlink&quot; title=&quot;元祖&quot;&gt;&lt;/a&gt;元祖&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Python 将不能修改的值成为不可变的，而不可变的列表成为元祖&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-1b15e8635ec5c47e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;遍历方式和遍历列表的方式一样&lt;/li&gt;
&lt;li&gt;定义是：用&lt;code&gt;()&lt;/code&gt;括起来的内容，列表是用&lt;code&gt;[]&lt;/code&gt;包裹的数据&lt;/li&gt;
&lt;li&gt;修改元祖变量：值是不能改变的，但是变量是可以改变的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;代码格式&quot;&gt;&lt;a href=&quot;#代码格式&quot; class=&quot;headerlink&quot; title=&quot;代码格式&quot;&gt;&lt;/a&gt;代码格式&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;缩进使用4个空格&lt;/li&gt;
&lt;li&gt;每行不超过80个字符&lt;/li&gt;
&lt;li&gt;程序的不同部分可用空行分开&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;遍历列表&quot;&gt;&lt;a href=&quot;#遍历列表&quot; class=&quot;headerlink&quot; title=&quot;遍历列表&quot;&gt;&lt;/a&gt;遍历列表&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1942372-cc1e7c221a498030.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定义一个列表&lt;/li&gt;
&lt;li&gt;通过for 循环输出结果&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://dongxi520.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin简单使用EventBus3.x</title>
    <link href="http://dongxi520.com/2017/11/24/Kotlin%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8EventBus3-x/"/>
    <id>http://dongxi520.com/2017/11/24/Kotlin简单使用EventBus3-x/</id>
    <published>2017-11-24T13:52:06.000Z</published>
    <updated>2017-11-24T14:38:39.895Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;完成功能：替换activity间传值的繁琐过程（明天补上动图）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;使用到的-Kotlin-语法&quot;&gt;&lt;a href=&quot;#使用到的-Kotlin-语法&quot; class=&quot;headerlink&quot; title=&quot;使用到的 Kotlin 语法&quot;&gt;&lt;/a&gt;使用到的 Kotlin 语法&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;我也是现学现用的，写的不对，多多指教&lt;/p&gt;
&lt;p&gt;AS版本：2.3&lt;/p&gt;
&lt;p&gt;EventBus版本：3.1.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Kotlin&lt;/code&gt; 环境&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个网上很多讲解了，我也是看着别人的博客搭建的。就装一个 Kotlin 插件，然后导入 EventBus3 ，导入步骤看Github介绍。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里需要注意不能在onStar方法中注册，Github中的介绍是在onStart方法中注册，但是我用Kotlin和Java都试过了，会内存溢出，具体原因还没查明，了解的望告知，谢谢!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;变量赋值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;val txt:String? = &amp;quot;EventBus1&amp;quot;&lt;/code&gt;，不管是字符串还是整型数据，都用 &lt;code&gt;val&lt;/code&gt;去声明一个变量；&lt;code&gt;txt:String&lt;/code&gt;是变量名字和变量的类型，中间通过&lt;code&gt;:&lt;/code&gt;号隔开，利用&lt;code&gt;?&lt;/code&gt;去做非空操作，就是这个值不会为&lt;code&gt;NULL&lt;/code&gt;。&lt;code&gt;=&lt;/code&gt;号后面就是赋值的内容了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点击事件&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bt_message.setOnClickListener&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    startActivity(Intent(this, EventBus2Activity::class.java))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;bt_message&lt;/code&gt;是&lt;code&gt;xml&lt;/code&gt;中的布局 id ,在 Moudle 的 build.gradle 文件中引入&lt;code&gt;apply plugin: &amp;#39;kotlin-android-extensions&amp;#39;&lt;/code&gt;,这个引入过程网上也讲解的很清楚了，引入之后就可以直接用id去设置内容，省去了 Java 中的 findViewById 操作。&lt;/p&gt;
&lt;p&gt;点击事件比Java的简洁了太多太多…&lt;strong&gt;Kotlin 中是创建对象是没有 new 的&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建类、方法&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 创建类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class EventBusMessages &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var message:String? = null&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 创建方法（这里直接引用代码中所创建的方法了）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fun onEvent(messageEvent: EventBusMessages) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * 注意传递的参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *      如果传递的是对象，这里也要传入对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *      如果传递的是字符串，这里要传入String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *      以此类推...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    event_bus1_tv.setText(messageEvent.message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;创建类&lt;/strong&gt;：直接用class去定义，加上类名即可&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创建方法&lt;/strong&gt;：用 fun 去定义，加上方法名即可，想加参数在括号中声明即可，声明方式是：&lt;code&gt;对象：类型&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Java&lt;/code&gt;中&lt;code&gt;get/set&lt;/code&gt;的替代方式&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;也不能说替代，Java 中也有这种方式。Kotlin 的实现相当于Java 中给属性设置为&lt;code&gt;public&lt;/code&gt;，然后通过创建出的对象去完成赋值操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 定义一个对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class EventBusMessages &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var message:String? = null&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; val eventMessage = EventBusMessages()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; eventMessage.message = &amp;quot;你好&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; val msg = eventMessage.message&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Kotlin-使用EventBus3-x&quot;&gt;&lt;a href=&quot;#Kotlin-使用EventBus3-x&quot; class=&quot;headerlink&quot; title=&quot;Kotlin 使用EventBus3.x&quot;&gt;&lt;/a&gt;Kotlin 使用EventBus3.x&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;终于说到正事了，说这么多。kotlin 使用 EventBus 和 Java 是一毛一样的，感觉说了好多废话，直接上代码吧！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;注册EventBus，必须在OnCreate（Java也是）&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;源码地址&quot;&gt;&lt;a href=&quot;#源码地址&quot; class=&quot;headerlink&quot; title=&quot;源码地址&quot;&gt;&lt;/a&gt;源码地址&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;代码主要在event_bus包中，代码很乱，待完善。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/dongxi346/AndroidLeaningDemo/blob/master/app/src/main/java/com/dongxi/rxdemo/event_bus/EventBus1Activity.kt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;完成功能：替换activity间传值的繁琐过程（明天补上动图）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;使用到的-Kotlin-语法&quot;&gt;&lt;a href=&quot;#使用到的-Kotlin-语法&quot; class=&quot;headerlink&quot; title=&quot;使用到的 Kotlin 语法&quot;&gt;&lt;/a&gt;使用到的 Kotlin 语法&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;我也是现学现用的，写的不对，多多指教&lt;/p&gt;
&lt;p&gt;AS版本：2.3&lt;/p&gt;
&lt;p&gt;EventBus版本：3.1.1&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://dongxi520.com/tags/Android/"/>
    
      <category term="Kotlin" scheme="http://dongxi520.com/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Python基础（二）-列表</title>
    <link href="http://dongxi520.com/2017/11/22/Python%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89-%E5%88%97%E8%A1%A8/"/>
    <id>http://dongxi520.com/2017/11/22/Python基础（二）-列表/</id>
    <published>2017-11-22T05:28:21.000Z</published>
    <updated>2017-12-09T15:03:56.058Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Python列表&quot;&gt;&lt;a href=&quot;#Python列表&quot; class=&quot;headerlink&quot; title=&quot;Python列表&quot;&gt;&lt;/a&gt;Python列表&lt;/h3&gt;&lt;h4 id=&quot;访问列表元素&quot;&gt;&lt;a href=&quot;#访问列表元素&quot; class=&quot;headerlink&quot; title=&quot;访问列表元素&quot;&gt;&lt;/a&gt;访问列表元素&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bicycles = [&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(bicycles[0])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出结果：trek&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bicycles = [&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(bicycles[-1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出结果：specialized&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;通过元素索引即可访问列表数据&lt;/li&gt;
&lt;li&gt;索引从0开始，-1表示最后一个元素，-2表示倒数第二个元素，以此类推&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;使用列表中的各个值&quot;&gt;&lt;a href=&quot;#使用列表中的各个值&quot; class=&quot;headerlink&quot; title=&quot;使用列表中的各个值&quot;&gt;&lt;/a&gt;使用列表中的各个值&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bicycles = [&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;message = &amp;quot;My first bicycles was a &amp;quot; + bicycles[0].title() + &amp;quot;.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出结果：My first bicycles was a Trek .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;字符串拼接通过 + 号连接&lt;/li&gt;
&lt;li&gt;title() 函数可以将字符串首字母变大写&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;修改列表元素&quot;&gt;&lt;a href=&quot;#修改列表元素&quot; class=&quot;headerlink&quot; title=&quot;修改列表元素&quot;&gt;&lt;/a&gt;修改列表元素&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bicycles = [&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 修改第一个元素为 fenghuangpai&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bicycles[0] = &amp;apos;fenghuangpai&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(bicycles)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出结果：[&amp;apos;fenghuangpai&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;#&lt;/code&gt;是注释的开始&lt;/li&gt;
&lt;li&gt;通过索引找到元素，然后赋新的值给该索引对应的元素即可修改&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;添加列表元素&quot;&gt;&lt;a href=&quot;#添加列表元素&quot; class=&quot;headerlink&quot; title=&quot;添加列表元素&quot;&gt;&lt;/a&gt;添加列表元素&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bicycles = [&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在列表末尾添加 fenghuangpai 元素&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bicycles.append(&amp;apos;fenghuangpai&amp;apos;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(bicycles)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出结果：[&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;,&amp;apos;fenghuangpai&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bicycles = [&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 在列表中添加 fenghuangpai 元素&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bicycles.insert(1，&amp;apos;fenghuangpai&amp;apos;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(bicycles)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出结果：[&amp;apos;trek&amp;apos;,&amp;apos;fenghuangpai&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;append() 函数在列表末尾添加元素&lt;/li&gt;
&lt;li&gt;insert() 函数可以通过索引去指定位置添加元素，注意数组越界&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;删除列表元素&quot;&gt;&lt;a href=&quot;#删除列表元素&quot; class=&quot;headerlink&quot; title=&quot;删除列表元素&quot;&gt;&lt;/a&gt;删除列表元素&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 使用 del 语句删除元素&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bicycles = [&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;del bicycles[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(bicycles)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出结果：[&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 使用pop()删除元素&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bicycles = [&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;poped_bicycles = bicycles.pop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(poped_bicycles)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出结果：[&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 弹出列表中任意位置的元素&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bicycles = [&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;poped_bicycles = bicycles.pop(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(poped_bicycles)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出结果：[&amp;apos;trek&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 根据值删除元素&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bicycles = [&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;poped_bicycles = bicycles.remove(&amp;apos;redline&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(poped_bicycles)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出结果：[&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;pop() 和 del 的区别&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果要从列表中删除一个元素且不再以任何方式使用它，就用del语句，如果你在删除元素后还要继续使用它，就使用pop()&lt;/p&gt;
&lt;h4 id=&quot;列表排序&quot;&gt;&lt;a href=&quot;#列表排序&quot; class=&quot;headerlink&quot; title=&quot;列表排序&quot;&gt;&lt;/a&gt;列表排序&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 字母正序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bicycles = [&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bicycles.sort()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(bicycles)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出结果：[&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,specialized&amp;apos;,&amp;apos;trek&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 字母反序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bicycles = [&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bicycles.sort(reverse=True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(bicycles)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出结果：[&amp;apos;trek&amp;apos;,&amp;apos;specialized&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;cannondale&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 倒着打印&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bicycles = [&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bicycles.reverse()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(bicycles)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出结果：[&amp;apos;specialized&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;trek&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;​&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;获取列表长度&quot;&gt;&lt;a href=&quot;#获取列表长度&quot; class=&quot;headerlink&quot; title=&quot;获取列表长度&quot;&gt;&lt;/a&gt;获取列表长度&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bicycles = [&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;len(bicycles)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出结果：4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Python列表&quot;&gt;&lt;a href=&quot;#Python列表&quot; class=&quot;headerlink&quot; title=&quot;Python列表&quot;&gt;&lt;/a&gt;Python列表&lt;/h3&gt;&lt;h4 id=&quot;访问列表元素&quot;&gt;&lt;a href=&quot;#访问列表元素&quot; class=&quot;headerlink&quot; title=&quot;访问列表元素&quot;&gt;&lt;/a&gt;访问列表元素&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bicycles = [&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(bicycles[0])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出结果：trek&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bicycles = [&amp;apos;trek&amp;apos;,&amp;apos;cannondale&amp;apos;,&amp;apos;redline&amp;apos;,&amp;apos;specialized&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(bicycles[-1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出结果：specialized&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;通过元素索引即可访问列表数据&lt;/li&gt;
&lt;li&gt;索引从0开始，-1表示最后一个元素，-2表示倒数第二个元素，以此类推&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://dongxi520.com/tags/Python/"/>
    
  </entry>
  
</feed>
